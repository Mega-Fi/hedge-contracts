!function(e){var t={};function n(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(i,a,function(t){return e[t]}.bind(null,a));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=10)}([function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";(function(e,n){
/*!
 * Vue.js v2.6.14
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */
var i=Object.freeze({});function a(e){return null==e}function r(e){return null!=e}function o(e){return!0===e}function s(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function u(e){return null!==e&&"object"==typeof e}var p=Object.prototype.toString;function l(e){return"[object Object]"===p.call(e)}function d(e){return"[object RegExp]"===p.call(e)}function y(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function c(e){return r(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function m(e){return null==e?"":Array.isArray(e)||l(e)&&e.toString===p?JSON.stringify(e,null,2):String(e)}function f(e){var t=parseFloat(e);return isNaN(t)?e:t}function h(e,t){for(var n=Object.create(null),i=e.split(","),a=0;a<i.length;a++)n[i[a]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}var T=h("slot,component",!0),v=h("key,ref,slot,slot-scope,is");function b(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var g=Object.prototype.hasOwnProperty;function w(e,t){return g.call(e,t)}function k(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var x=/-(\w)/g,M=k((function(e){return e.replace(x,(function(e,t){return t?t.toUpperCase():""}))})),R=k((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),I=/\B([A-Z])/g,S=k((function(e){return e.replace(I,"-$1").toLowerCase()}));var C=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var i=arguments.length;return i?i>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function A(e,t){t=t||0;for(var n=e.length-t,i=new Array(n);n--;)i[n]=e[n+t];return i}function P(e,t){for(var n in t)e[n]=t[n];return e}function _(e){for(var t={},n=0;n<e.length;n++)e[n]&&P(t,e[n]);return t}function O(e,t,n){}var E=function(e,t,n){return!1},D=function(e){return e};function L(e,t){if(e===t)return!0;var n=u(e),i=u(t);if(!n||!i)return!n&&!i&&String(e)===String(t);try{var a=Array.isArray(e),r=Array.isArray(t);if(a&&r)return e.length===t.length&&e.every((function(e,n){return L(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(a||r)return!1;var o=Object.keys(e),s=Object.keys(t);return o.length===s.length&&o.every((function(n){return L(e[n],t[n])}))}catch(e){return!1}}function F(e,t){for(var n=0;n<e.length;n++)if(L(e[n],t))return n;return-1}function q(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var U=["component","directive","filter"],H=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],z={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:E,isReservedAttr:E,isUnknownElement:E,getTagNamespace:O,parsePlatformTagName:D,mustUseProp:E,async:!0,_lifecycleHooks:H},$=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function B(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function N(e,t,n,i){Object.defineProperty(e,t,{value:n,enumerable:!!i,writable:!0,configurable:!0})}var V=new RegExp("[^"+$.source+".$_\\d]");var j,G="__proto__"in{},W="undefined"!=typeof window,K="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,J=K&&WXEnvironment.platform.toLowerCase(),Y=W&&window.navigator.userAgent.toLowerCase(),X=Y&&/msie|trident/.test(Y),Z=Y&&Y.indexOf("msie 9.0")>0,Q=Y&&Y.indexOf("edge/")>0,ee=(Y&&Y.indexOf("android"),Y&&/iphone|ipad|ipod|ios/.test(Y)||"ios"===J),te=(Y&&/chrome\/\d+/.test(Y),Y&&/phantomjs/.test(Y),Y&&Y.match(/firefox\/(\d+)/)),ne={}.watch,ie=!1;if(W)try{var ae={};Object.defineProperty(ae,"passive",{get:function(){ie=!0}}),window.addEventListener("test-passive",null,ae)}catch(e){}var re=function(){return void 0===j&&(j=!W&&!K&&void 0!==e&&(e.process&&"server"===e.process.env.VUE_ENV)),j},oe=W&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function se(e){return"function"==typeof e&&/native code/.test(e.toString())}var ue,pe="undefined"!=typeof Symbol&&se(Symbol)&&"undefined"!=typeof Reflect&&se(Reflect.ownKeys);ue="undefined"!=typeof Set&&se(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var le=O,de=0,ye=function(){this.id=de++,this.subs=[]};ye.prototype.addSub=function(e){this.subs.push(e)},ye.prototype.removeSub=function(e){b(this.subs,e)},ye.prototype.depend=function(){ye.target&&ye.target.addDep(this)},ye.prototype.notify=function(){var e=this.subs.slice();for(var t=0,n=e.length;t<n;t++)e[t].update()},ye.target=null;var ce=[];function me(e){ce.push(e),ye.target=e}function fe(){ce.pop(),ye.target=ce[ce.length-1]}var he=function(e,t,n,i,a,r,o,s){this.tag=e,this.data=t,this.children=n,this.text=i,this.elm=a,this.ns=void 0,this.context=r,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},Te={child:{configurable:!0}};Te.child.get=function(){return this.componentInstance},Object.defineProperties(he.prototype,Te);var ve=function(e){void 0===e&&(e="");var t=new he;return t.text=e,t.isComment=!0,t};function be(e){return new he(void 0,void 0,void 0,String(e))}function ge(e){var t=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var we=Array.prototype,ke=Object.create(we);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=we[e];N(ke,e,(function(){for(var n=[],i=arguments.length;i--;)n[i]=arguments[i];var a,r=t.apply(this,n),o=this.__ob__;switch(e){case"push":case"unshift":a=n;break;case"splice":a=n.slice(2)}return a&&o.observeArray(a),o.dep.notify(),r}))}));var xe=Object.getOwnPropertyNames(ke),Me=!0;function Re(e){Me=e}var Ie=function(e){this.value=e,this.dep=new ye,this.vmCount=0,N(e,"__ob__",this),Array.isArray(e)?(G?function(e,t){e.__proto__=t}(e,ke):function(e,t,n){for(var i=0,a=n.length;i<a;i++){var r=n[i];N(e,r,t[r])}}(e,ke,xe),this.observeArray(e)):this.walk(e)};function Se(e,t){var n;if(u(e)&&!(e instanceof he))return w(e,"__ob__")&&e.__ob__ instanceof Ie?n=e.__ob__:Me&&!re()&&(Array.isArray(e)||l(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new Ie(e)),t&&n&&n.vmCount++,n}function Ce(e,t,n,i,a){var r=new ye,o=Object.getOwnPropertyDescriptor(e,t);if(!o||!1!==o.configurable){var s=o&&o.get,u=o&&o.set;s&&!u||2!==arguments.length||(n=e[t]);var p=!a&&Se(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return ye.target&&(r.depend(),p&&(p.dep.depend(),Array.isArray(t)&&_e(t))),t},set:function(t){var i=s?s.call(e):n;t===i||t!=t&&i!=i||s&&!u||(u?u.call(e,t):n=t,p=!a&&Se(t),r.notify())}})}}function Ae(e,t,n){if(Array.isArray(e)&&y(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var i=e.__ob__;return e._isVue||i&&i.vmCount?n:i?(Ce(i.value,t,n),i.dep.notify(),n):(e[t]=n,n)}function Pe(e,t){if(Array.isArray(e)&&y(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||w(e,t)&&(delete e[t],n&&n.dep.notify())}}function _e(e){for(var t=void 0,n=0,i=e.length;n<i;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&_e(t)}Ie.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)Ce(e,t[n])},Ie.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Se(e[t])};var Oe=z.optionMergeStrategies;function Ee(e,t){if(!t)return e;for(var n,i,a,r=pe?Reflect.ownKeys(t):Object.keys(t),o=0;o<r.length;o++)"__ob__"!==(n=r[o])&&(i=e[n],a=t[n],w(e,n)?i!==a&&l(i)&&l(a)&&Ee(i,a):Ae(e,n,a));return e}function De(e,t,n){return n?function(){var i="function"==typeof t?t.call(n,n):t,a="function"==typeof e?e.call(n,n):e;return i?Ee(i,a):a}:t?e?function(){return Ee("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Le(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Fe(e,t,n,i){var a=Object.create(e||null);return t?P(a,t):a}Oe.data=function(e,t,n){return n?De(e,t,n):t&&"function"!=typeof t?e:De(e,t)},H.forEach((function(e){Oe[e]=Le})),U.forEach((function(e){Oe[e+"s"]=Fe})),Oe.watch=function(e,t,n,i){if(e===ne&&(e=void 0),t===ne&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var a={};for(var r in P(a,e),t){var o=a[r],s=t[r];o&&!Array.isArray(o)&&(o=[o]),a[r]=o?o.concat(s):Array.isArray(s)?s:[s]}return a},Oe.props=Oe.methods=Oe.inject=Oe.computed=function(e,t,n,i){if(!e)return t;var a=Object.create(null);return P(a,e),t&&P(a,t),a},Oe.provide=De;var qe=function(e,t){return void 0===t?e:t};function Ue(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var i,a,r={};if(Array.isArray(n))for(i=n.length;i--;)"string"==typeof(a=n[i])&&(r[M(a)]={type:null});else if(l(n))for(var o in n)a=n[o],r[M(o)]=l(a)?a:{type:a};else 0;e.props=r}}(t),function(e,t){var n=e.inject;if(n){var i=e.inject={};if(Array.isArray(n))for(var a=0;a<n.length;a++)i[n[a]]={from:n[a]};else if(l(n))for(var r in n){var o=n[r];i[r]=l(o)?P({from:r},o):{from:o}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var i=t[n];"function"==typeof i&&(t[n]={bind:i,update:i})}}(t),!t._base&&(t.extends&&(e=Ue(e,t.extends,n)),t.mixins))for(var i=0,a=t.mixins.length;i<a;i++)e=Ue(e,t.mixins[i],n);var r,o={};for(r in e)s(r);for(r in t)w(e,r)||s(r);function s(i){var a=Oe[i]||qe;o[i]=a(e[i],t[i],n,i)}return o}function He(e,t,n,i){if("string"==typeof n){var a=e[t];if(w(a,n))return a[n];var r=M(n);if(w(a,r))return a[r];var o=R(r);return w(a,o)?a[o]:a[n]||a[r]||a[o]}}function ze(e,t,n,i){var a=t[e],r=!w(n,e),o=n[e],s=Ve(Boolean,a.type);if(s>-1)if(r&&!w(a,"default"))o=!1;else if(""===o||o===S(e)){var u=Ve(String,a.type);(u<0||s<u)&&(o=!0)}if(void 0===o){o=function(e,t,n){if(!w(t,"default"))return;var i=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof i&&"Function"!==Be(t.type)?i.call(e):i}(i,a,e);var p=Me;Re(!0),Se(o),Re(p)}return o}var $e=/^\s*function (\w+)/;function Be(e){var t=e&&e.toString().match($e);return t?t[1]:""}function Ne(e,t){return Be(e)===Be(t)}function Ve(e,t){if(!Array.isArray(t))return Ne(t,e)?0:-1;for(var n=0,i=t.length;n<i;n++)if(Ne(t[n],e))return n;return-1}function je(e,t,n){me();try{if(t)for(var i=t;i=i.$parent;){var a=i.$options.errorCaptured;if(a)for(var r=0;r<a.length;r++)try{if(!1===a[r].call(i,e,t,n))return}catch(e){We(e,i,"errorCaptured hook")}}We(e,t,n)}finally{fe()}}function Ge(e,t,n,i,a){var r;try{(r=n?e.apply(t,n):e.call(t))&&!r._isVue&&c(r)&&!r._handled&&(r.catch((function(e){return je(e,i,a+" (Promise/async)")})),r._handled=!0)}catch(e){je(e,i,a)}return r}function We(e,t,n){if(z.errorHandler)try{return z.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Ke(t,null,"config.errorHandler")}Ke(e,t,n)}function Ke(e,t,n){if(!W&&!K||"undefined"==typeof console)throw e;console.error(e)}var Je,Ye=!1,Xe=[],Ze=!1;function Qe(){Ze=!1;var e=Xe.slice(0);Xe.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&se(Promise)){var et=Promise.resolve();Je=function(){et.then(Qe),ee&&setTimeout(O)},Ye=!0}else if(X||"undefined"==typeof MutationObserver||!se(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Je=void 0!==n&&se(n)?function(){n(Qe)}:function(){setTimeout(Qe,0)};else{var tt=1,nt=new MutationObserver(Qe),it=document.createTextNode(String(tt));nt.observe(it,{characterData:!0}),Je=function(){tt=(tt+1)%2,it.data=String(tt)},Ye=!0}function at(e,t){var n;if(Xe.push((function(){if(e)try{e.call(t)}catch(e){je(e,t,"nextTick")}else n&&n(t)})),Ze||(Ze=!0,Je()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var rt=new ue;function ot(e){!function e(t,n){var i,a,r=Array.isArray(t);if(!r&&!u(t)||Object.isFrozen(t)||t instanceof he)return;if(t.__ob__){var o=t.__ob__.dep.id;if(n.has(o))return;n.add(o)}if(r)for(i=t.length;i--;)e(t[i],n);else for(a=Object.keys(t),i=a.length;i--;)e(t[a[i]],n)}(e,rt),rt.clear()}var st=k((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),i="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=i?e.slice(1):e,once:n,capture:i,passive:t}}));function ut(e,t){function n(){var e=arguments,i=n.fns;if(!Array.isArray(i))return Ge(i,null,arguments,t,"v-on handler");for(var a=i.slice(),r=0;r<a.length;r++)Ge(a[r],null,e,t,"v-on handler")}return n.fns=e,n}function pt(e,t,n,i,r,s){var u,p,l,d;for(u in e)p=e[u],l=t[u],d=st(u),a(p)||(a(l)?(a(p.fns)&&(p=e[u]=ut(p,s)),o(d.once)&&(p=e[u]=r(d.name,p,d.capture)),n(d.name,p,d.capture,d.passive,d.params)):p!==l&&(l.fns=p,e[u]=l));for(u in t)a(e[u])&&i((d=st(u)).name,t[u],d.capture)}function lt(e,t,n){var i;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var s=e[t];function u(){n.apply(this,arguments),b(i.fns,u)}a(s)?i=ut([u]):r(s.fns)&&o(s.merged)?(i=s).fns.push(u):i=ut([s,u]),i.merged=!0,e[t]=i}function dt(e,t,n,i,a){if(r(t)){if(w(t,n))return e[n]=t[n],a||delete t[n],!0;if(w(t,i))return e[n]=t[i],a||delete t[i],!0}return!1}function yt(e){return s(e)?[be(e)]:Array.isArray(e)?function e(t,n){var i,u,p,l,d=[];for(i=0;i<t.length;i++)a(u=t[i])||"boolean"==typeof u||(p=d.length-1,l=d[p],Array.isArray(u)?u.length>0&&(ct((u=e(u,(n||"")+"_"+i))[0])&&ct(l)&&(d[p]=be(l.text+u[0].text),u.shift()),d.push.apply(d,u)):s(u)?ct(l)?d[p]=be(l.text+u):""!==u&&d.push(be(u)):ct(u)&&ct(l)?d[p]=be(l.text+u.text):(o(t._isVList)&&r(u.tag)&&a(u.key)&&r(n)&&(u.key="__vlist"+n+"_"+i+"__"),d.push(u)));return d}(e):void 0}function ct(e){return r(e)&&r(e.text)&&!1===e.isComment}function mt(e,t){if(e){for(var n=Object.create(null),i=pe?Reflect.ownKeys(e):Object.keys(e),a=0;a<i.length;a++){var r=i[a];if("__ob__"!==r){for(var o=e[r].from,s=t;s;){if(s._provided&&w(s._provided,o)){n[r]=s._provided[o];break}s=s.$parent}if(!s)if("default"in e[r]){var u=e[r].default;n[r]="function"==typeof u?u.call(t):u}else 0}}return n}}function ft(e,t){if(!e||!e.length)return{};for(var n={},i=0,a=e.length;i<a;i++){var r=e[i],o=r.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,r.context!==t&&r.fnContext!==t||!o||null==o.slot)(n.default||(n.default=[])).push(r);else{var s=o.slot,u=n[s]||(n[s]=[]);"template"===r.tag?u.push.apply(u,r.children||[]):u.push(r)}}for(var p in n)n[p].every(ht)&&delete n[p];return n}function ht(e){return e.isComment&&!e.asyncFactory||" "===e.text}function Tt(e){return e.isComment&&e.asyncFactory}function vt(e,t,n){var a,r=Object.keys(t).length>0,o=e?!!e.$stable:!r,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(o&&n&&n!==i&&s===n.$key&&!r&&!n.$hasNormal)return n;for(var u in a={},e)e[u]&&"$"!==u[0]&&(a[u]=bt(t,u,e[u]))}else a={};for(var p in t)p in a||(a[p]=gt(t,p));return e&&Object.isExtensible(e)&&(e._normalized=a),N(a,"$stable",o),N(a,"$key",s),N(a,"$hasNormal",r),a}function bt(e,t,n){var i=function(){var e=arguments.length?n.apply(null,arguments):n({}),t=(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:yt(e))&&e[0];return e&&(!t||1===e.length&&t.isComment&&!Tt(t))?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:i,enumerable:!0,configurable:!0}),i}function gt(e,t){return function(){return e[t]}}function wt(e,t){var n,i,a,o,s;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),i=0,a=e.length;i<a;i++)n[i]=t(e[i],i);else if("number"==typeof e)for(n=new Array(e),i=0;i<e;i++)n[i]=t(i+1,i);else if(u(e))if(pe&&e[Symbol.iterator]){n=[];for(var p=e[Symbol.iterator](),l=p.next();!l.done;)n.push(t(l.value,n.length)),l=p.next()}else for(o=Object.keys(e),n=new Array(o.length),i=0,a=o.length;i<a;i++)s=o[i],n[i]=t(e[s],s,i);return r(n)||(n=[]),n._isVList=!0,n}function kt(e,t,n,i){var a,r=this.$scopedSlots[e];r?(n=n||{},i&&(n=P(P({},i),n)),a=r(n)||("function"==typeof t?t():t)):a=this.$slots[e]||("function"==typeof t?t():t);var o=n&&n.slot;return o?this.$createElement("template",{slot:o},a):a}function xt(e){return He(this.$options,"filters",e)||D}function Mt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function Rt(e,t,n,i,a){var r=z.keyCodes[t]||n;return a&&i&&!z.keyCodes[t]?Mt(a,i):r?Mt(r,e):i?S(i)!==t:void 0===e}function It(e,t,n,i,a){if(n)if(u(n)){var r;Array.isArray(n)&&(n=_(n));var o=function(o){if("class"===o||"style"===o||v(o))r=e;else{var s=e.attrs&&e.attrs.type;r=i||z.mustUseProp(t,s,o)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var u=M(o),p=S(o);u in r||p in r||(r[o]=n[o],a&&((e.on||(e.on={}))["update:"+o]=function(e){n[o]=e}))};for(var s in n)o(s)}else;return e}function St(e,t){var n=this._staticTrees||(this._staticTrees=[]),i=n[e];return i&&!t||At(i=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),i}function Ct(e,t,n){return At(e,"__once__"+t+(n?"_"+n:""),!0),e}function At(e,t,n){if(Array.isArray(e))for(var i=0;i<e.length;i++)e[i]&&"string"!=typeof e[i]&&Pt(e[i],t+"_"+i,n);else Pt(e,t,n)}function Pt(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function _t(e,t){if(t)if(l(t)){var n=e.on=e.on?P({},e.on):{};for(var i in t){var a=n[i],r=t[i];n[i]=a?[].concat(a,r):r}}else;return e}function Ot(e,t,n,i){t=t||{$stable:!n};for(var a=0;a<e.length;a++){var r=e[a];Array.isArray(r)?Ot(r,t,n):r&&(r.proxy&&(r.fn.proxy=!0),t[r.key]=r.fn)}return i&&(t.$key=i),t}function Et(e,t){for(var n=0;n<t.length;n+=2){var i=t[n];"string"==typeof i&&i&&(e[t[n]]=t[n+1])}return e}function Dt(e,t){return"string"==typeof e?t+e:e}function Lt(e){e._o=Ct,e._n=f,e._s=m,e._l=wt,e._t=kt,e._q=L,e._i=F,e._m=St,e._f=xt,e._k=Rt,e._b=It,e._v=be,e._e=ve,e._u=Ot,e._g=_t,e._d=Et,e._p=Dt}function Ft(e,t,n,a,r){var s,u=this,p=r.options;w(a,"_uid")?(s=Object.create(a))._original=a:(s=a,a=a._original);var l=o(p._compiled),d=!l;this.data=e,this.props=t,this.children=n,this.parent=a,this.listeners=e.on||i,this.injections=mt(p.inject,a),this.slots=function(){return u.$slots||vt(e.scopedSlots,u.$slots=ft(n,a)),u.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return vt(e.scopedSlots,this.slots())}}),l&&(this.$options=p,this.$slots=this.slots(),this.$scopedSlots=vt(e.scopedSlots,this.$slots)),p._scopeId?this._c=function(e,t,n,i){var r=Nt(s,e,t,n,i,d);return r&&!Array.isArray(r)&&(r.fnScopeId=p._scopeId,r.fnContext=a),r}:this._c=function(e,t,n,i){return Nt(s,e,t,n,i,d)}}function qt(e,t,n,i,a){var r=ge(e);return r.fnContext=n,r.fnOptions=i,t.slot&&((r.data||(r.data={})).slot=t.slot),r}function Ut(e,t){for(var n in t)e[M(n)]=t[n]}Lt(Ft.prototype);var Ht={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;Ht.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},i=e.data.inlineTemplate;r(i)&&(n.render=i.render,n.staticRenderFns=i.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Zt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,a,r){0;var o=a.data.scopedSlots,s=e.$scopedSlots,u=!!(o&&!o.$stable||s!==i&&!s.$stable||o&&e.$scopedSlots.$key!==o.$key||!o&&e.$scopedSlots.$key),p=!!(r||e.$options._renderChildren||u);e.$options._parentVnode=a,e.$vnode=a,e._vnode&&(e._vnode.parent=a);if(e.$options._renderChildren=r,e.$attrs=a.data.attrs||i,e.$listeners=n||i,t&&e.$options.props){Re(!1);for(var l=e._props,d=e.$options._propKeys||[],y=0;y<d.length;y++){var c=d[y],m=e.$options.props;l[c]=ze(c,m,t,e)}Re(!0),e.$options.propsData=t}n=n||i;var f=e.$options._parentListeners;e.$options._parentListeners=n,Xt(e,n,f),p&&(e.$slots=ft(r,a.context),e.$forceUpdate());0}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,i=e.componentInstance;i._isMounted||(i._isMounted=!0,nn(i,"mounted")),e.data.keepAlive&&(n._isMounted?((t=i)._inactive=!1,rn.push(t)):tn(i,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,en(t)))return;if(!t._inactive){t._inactive=!0;for(var i=0;i<t.$children.length;i++)e(t.$children[i]);nn(t,"deactivated")}}(t,!0):t.$destroy())}},zt=Object.keys(Ht);function $t(e,t,n,s,p){if(!a(e)){var l=n.$options._base;if(u(e)&&(e=l.extend(e)),"function"==typeof e){var d;if(a(e.cid)&&void 0===(e=function(e,t){if(o(e.error)&&r(e.errorComp))return e.errorComp;if(r(e.resolved))return e.resolved;var n=jt;n&&r(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(o(e.loading)&&r(e.loadingComp))return e.loadingComp;if(n&&!r(e.owners)){var i=e.owners=[n],s=!0,p=null,l=null;n.$on("hook:destroyed",(function(){return b(i,n)}));var d=function(e){for(var t=0,n=i.length;t<n;t++)i[t].$forceUpdate();e&&(i.length=0,null!==p&&(clearTimeout(p),p=null),null!==l&&(clearTimeout(l),l=null))},y=q((function(n){e.resolved=Gt(n,t),s?i.length=0:d(!0)})),m=q((function(t){r(e.errorComp)&&(e.error=!0,d(!0))})),f=e(y,m);return u(f)&&(c(f)?a(e.resolved)&&f.then(y,m):c(f.component)&&(f.component.then(y,m),r(f.error)&&(e.errorComp=Gt(f.error,t)),r(f.loading)&&(e.loadingComp=Gt(f.loading,t),0===f.delay?e.loading=!0:p=setTimeout((function(){p=null,a(e.resolved)&&a(e.error)&&(e.loading=!0,d(!1))}),f.delay||200)),r(f.timeout)&&(l=setTimeout((function(){l=null,a(e.resolved)&&m(null)}),f.timeout)))),s=!1,e.loading?e.loadingComp:e.resolved}}(d=e,l)))return function(e,t,n,i,a){var r=ve();return r.asyncFactory=e,r.asyncMeta={data:t,context:n,children:i,tag:a},r}(d,t,n,s,p);t=t||{},Rn(e),r(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",i=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var a=t.on||(t.on={}),o=a[i],s=t.model.callback;r(o)?(Array.isArray(o)?-1===o.indexOf(s):o!==s)&&(a[i]=[s].concat(o)):a[i]=s}(e.options,t);var y=function(e,t,n){var i=t.options.props;if(!a(i)){var o={},s=e.attrs,u=e.props;if(r(s)||r(u))for(var p in i){var l=S(p);dt(o,u,p,l,!0)||dt(o,s,p,l,!1)}return o}}(t,e);if(o(e.options.functional))return function(e,t,n,a,o){var s=e.options,u={},p=s.props;if(r(p))for(var l in p)u[l]=ze(l,p,t||i);else r(n.attrs)&&Ut(u,n.attrs),r(n.props)&&Ut(u,n.props);var d=new Ft(n,u,o,a,e),y=s.render.call(null,d._c,d);if(y instanceof he)return qt(y,n,d.parent,s,d);if(Array.isArray(y)){for(var c=yt(y)||[],m=new Array(c.length),f=0;f<c.length;f++)m[f]=qt(c[f],n,d.parent,s,d);return m}}(e,y,t,n,s);var m=t.on;if(t.on=t.nativeOn,o(e.options.abstract)){var f=t.slot;t={},f&&(t.slot=f)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<zt.length;n++){var i=zt[n],a=t[i],r=Ht[i];a===r||a&&a._merged||(t[i]=a?Bt(r,a):r)}}(t);var h=e.options.name||p;return new he("vue-component-"+e.cid+(h?"-"+h:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:y,listeners:m,tag:p,children:s},d)}}}function Bt(e,t){var n=function(n,i){e(n,i),t(n,i)};return n._merged=!0,n}function Nt(e,t,n,i,p,l){return(Array.isArray(n)||s(n))&&(p=i,i=n,n=void 0),o(l)&&(p=2),function(e,t,n,i,s){if(r(n)&&r(n.__ob__))return ve();r(n)&&r(n.is)&&(t=n.is);if(!t)return ve();0;Array.isArray(i)&&"function"==typeof i[0]&&((n=n||{}).scopedSlots={default:i[0]},i.length=0);2===s?i=yt(i):1===s&&(i=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(i));var p,l;if("string"==typeof t){var d;l=e.$vnode&&e.$vnode.ns||z.getTagNamespace(t),p=z.isReservedTag(t)?new he(z.parsePlatformTagName(t),n,i,void 0,void 0,e):n&&n.pre||!r(d=He(e.$options,"components",t))?new he(t,n,i,void 0,void 0,e):$t(d,n,e,i,t)}else p=$t(t,n,e,i);return Array.isArray(p)?p:r(p)?(r(l)&&function e(t,n,i){t.ns=n,"foreignObject"===t.tag&&(n=void 0,i=!0);if(r(t.children))for(var s=0,u=t.children.length;s<u;s++){var p=t.children[s];r(p.tag)&&(a(p.ns)||o(i)&&"svg"!==p.tag)&&e(p,n,i)}}(p,l),r(n)&&function(e){u(e.style)&&ot(e.style);u(e.class)&&ot(e.class)}(n),p):ve()}(e,t,n,i,p)}var Vt,jt=null;function Gt(e,t){return(e.__esModule||pe&&"Module"===e[Symbol.toStringTag])&&(e=e.default),u(e)?t.extend(e):e}function Wt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(r(n)&&(r(n.componentOptions)||Tt(n)))return n}}function Kt(e,t){Vt.$on(e,t)}function Jt(e,t){Vt.$off(e,t)}function Yt(e,t){var n=Vt;return function i(){var a=t.apply(null,arguments);null!==a&&n.$off(e,i)}}function Xt(e,t,n){Vt=e,pt(t,n||{},Kt,Jt,Yt,e),Vt=void 0}var Zt=null;function Qt(e){var t=Zt;return Zt=e,function(){Zt=t}}function en(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function tn(e,t){if(t){if(e._directInactive=!1,en(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)tn(e.$children[n]);nn(e,"activated")}}function nn(e,t){me();var n=e.$options[t],i=t+" hook";if(n)for(var a=0,r=n.length;a<r;a++)Ge(n[a],e,null,e,i);e._hasHookEvent&&e.$emit("hook:"+t),fe()}var an=[],rn=[],on={},sn=!1,un=!1,pn=0;var ln=0,dn=Date.now;if(W&&!X){var yn=window.performance;yn&&"function"==typeof yn.now&&dn()>document.createEvent("Event").timeStamp&&(dn=function(){return yn.now()})}function cn(){var e,t;for(ln=dn(),un=!0,an.sort((function(e,t){return e.id-t.id})),pn=0;pn<an.length;pn++)(e=an[pn]).before&&e.before(),t=e.id,on[t]=null,e.run();var n=rn.slice(),i=an.slice();pn=an.length=rn.length=0,on={},sn=un=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,tn(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],i=n.vm;i._watcher===n&&i._isMounted&&!i._isDestroyed&&nn(i,"updated")}}(i),oe&&z.devtools&&oe.emit("flush")}var mn=0,fn=function(e,t,n,i,a){this.vm=e,a&&(e._watcher=this),e._watchers.push(this),i?(this.deep=!!i.deep,this.user=!!i.user,this.lazy=!!i.lazy,this.sync=!!i.sync,this.before=i.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++mn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ue,this.newDepIds=new ue,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!V.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=O)),this.value=this.lazy?void 0:this.get()};fn.prototype.get=function(){var e;me(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;je(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&ot(e),fe(),this.cleanupDeps()}return e},fn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},fn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},fn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==on[t]){if(on[t]=!0,un){for(var n=an.length-1;n>pn&&an[n].id>e.id;)n--;an.splice(n+1,0,e)}else an.push(e);sn||(sn=!0,at(cn))}}(this)},fn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||u(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'+this.expression+'"';Ge(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},fn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},fn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},fn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||b(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var hn={enumerable:!0,configurable:!0,get:O,set:O};function Tn(e,t,n){hn.get=function(){return this[t][n]},hn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,hn)}function vn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},i=e._props={},a=e.$options._propKeys=[];e.$parent&&Re(!1);var r=function(r){a.push(r);var o=ze(r,t,n,e);Ce(i,r,o),r in e||Tn(e,"_props",r)};for(var o in t)r(o);Re(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?O:C(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;l(t=e._data="function"==typeof t?function(e,t){me();try{return e.call(t,t)}catch(e){return je(e,t,"data()"),{}}finally{fe()}}(t,e):t||{})||(t={});var n=Object.keys(t),i=e.$options.props,a=(e.$options.methods,n.length);for(;a--;){var r=n[a];0,i&&w(i,r)||B(r)||Tn(e,"_data",r)}Se(t,!0)}(e):Se(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),i=re();for(var a in t){var r=t[a],o="function"==typeof r?r:r.get;0,i||(n[a]=new fn(e,o||O,O,bn)),a in e||gn(e,a,r)}}(e,t.computed),t.watch&&t.watch!==ne&&function(e,t){for(var n in t){var i=t[n];if(Array.isArray(i))for(var a=0;a<i.length;a++)xn(e,n,i[a]);else xn(e,n,i)}}(e,t.watch)}var bn={lazy:!0};function gn(e,t,n){var i=!re();"function"==typeof n?(hn.get=i?wn(t):kn(n),hn.set=O):(hn.get=n.get?i&&!1!==n.cache?wn(t):kn(n.get):O,hn.set=n.set||O),Object.defineProperty(e,t,hn)}function wn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),ye.target&&t.depend(),t.value}}function kn(e){return function(){return e.call(this,this)}}function xn(e,t,n,i){return l(n)&&(i=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,i)}var Mn=0;function Rn(e){var t=e.options;if(e.super){var n=Rn(e.super);if(n!==e.superOptions){e.superOptions=n;var i=function(e){var t,n=e.options,i=e.sealedOptions;for(var a in n)n[a]!==i[a]&&(t||(t={}),t[a]=n[a]);return t}(e);i&&P(e.extendOptions,i),(t=e.options=Ue(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function In(e){this._init(e)}function Sn(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,i=n.cid,a=e._Ctor||(e._Ctor={});if(a[i])return a[i];var r=e.name||n.options.name;var o=function(e){this._init(e)};return(o.prototype=Object.create(n.prototype)).constructor=o,o.cid=t++,o.options=Ue(n.options,e),o.super=n,o.options.props&&function(e){var t=e.options.props;for(var n in t)Tn(e.prototype,"_props",n)}(o),o.options.computed&&function(e){var t=e.options.computed;for(var n in t)gn(e.prototype,n,t[n])}(o),o.extend=n.extend,o.mixin=n.mixin,o.use=n.use,U.forEach((function(e){o[e]=n[e]})),r&&(o.options.components[r]=o),o.superOptions=n.options,o.extendOptions=e,o.sealedOptions=P({},o.options),a[i]=o,o}}function Cn(e){return e&&(e.Ctor.options.name||e.tag)}function An(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!d(e)&&e.test(t)}function Pn(e,t){var n=e.cache,i=e.keys,a=e._vnode;for(var r in n){var o=n[r];if(o){var s=o.name;s&&!t(s)&&_n(n,r,i,a)}}}function _n(e,t,n,i){var a=e[t];!a||i&&a.tag===i.tag||a.componentInstance.$destroy(),e[t]=null,b(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=Mn++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),i=t._parentVnode;n.parent=t.parent,n._parentVnode=i;var a=i.componentOptions;n.propsData=a.propsData,n._parentListeners=a.listeners,n._renderChildren=a.children,n._componentTag=a.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Ue(Rn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Xt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,a=n&&n.context;e.$slots=ft(t._renderChildren,a),e.$scopedSlots=i,e._c=function(t,n,i,a){return Nt(e,t,n,i,a,!1)},e.$createElement=function(t,n,i,a){return Nt(e,t,n,i,a,!0)};var r=n&&n.data;Ce(e,"$attrs",r&&r.attrs||i,null,!0),Ce(e,"$listeners",t._parentListeners||i,null,!0)}(t),nn(t,"beforeCreate"),function(e){var t=mt(e.$options.inject,e);t&&(Re(!1),Object.keys(t).forEach((function(n){Ce(e,n,t[n])})),Re(!0))}(t),vn(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),nn(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(In),function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Ae,e.prototype.$delete=Pe,e.prototype.$watch=function(e,t,n){if(l(t))return xn(this,e,t,n);(n=n||{}).user=!0;var i=new fn(this,e,t,n);if(n.immediate){var a='callback for immediate watcher "'+i.expression+'"';me(),Ge(t,this,[i.value],this,a),fe()}return function(){i.teardown()}}}(In),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var i=this;if(Array.isArray(e))for(var a=0,r=e.length;a<r;a++)i.$on(e[a],n);else(i._events[e]||(i._events[e]=[])).push(n),t.test(e)&&(i._hasHookEvent=!0);return i},e.prototype.$once=function(e,t){var n=this;function i(){n.$off(e,i),t.apply(n,arguments)}return i.fn=t,n.$on(e,i),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var i=0,a=e.length;i<a;i++)n.$off(e[i],t);return n}var r,o=n._events[e];if(!o)return n;if(!t)return n._events[e]=null,n;for(var s=o.length;s--;)if((r=o[s])===t||r.fn===t){o.splice(s,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?A(n):n;for(var i=A(arguments,1),a='event handler for "'+e+'"',r=0,o=n.length;r<o;r++)Ge(n[r],t,i,t,a)}return t}}(In),function(e){e.prototype._update=function(e,t){var n=this,i=n.$el,a=n._vnode,r=Qt(n);n._vnode=e,n.$el=a?n.__patch__(a,e):n.__patch__(n.$el,e,t,!1),r(),i&&(i.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){nn(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||b(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),nn(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(In),function(e){Lt(e.prototype),e.prototype.$nextTick=function(e){return at(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,i=n.render,a=n._parentVnode;a&&(t.$scopedSlots=vt(a.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=a;try{jt=t,e=i.call(t._renderProxy,t.$createElement)}catch(n){je(n,t,"render"),e=t._vnode}finally{jt=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof he||(e=ve()),e.parent=a,e}}(In);var On=[String,RegExp,Array],En={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:On,exclude:On,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,t=this.keys,n=this.vnodeToCache,i=this.keyToCache;if(n){var a=n.tag,r=n.componentInstance,o=n.componentOptions;e[i]={name:Cn(o),tag:a,componentInstance:r},t.push(i),this.max&&t.length>parseInt(this.max)&&_n(e,t[0],t,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)_n(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){Pn(e,(function(e){return An(t,e)}))})),this.$watch("exclude",(function(t){Pn(e,(function(e){return!An(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=Wt(e),n=t&&t.componentOptions;if(n){var i=Cn(n),a=this.include,r=this.exclude;if(a&&(!i||!An(a,i))||r&&i&&An(r,i))return t;var o=this.cache,s=this.keys,u=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;o[u]?(t.componentInstance=o[u].componentInstance,b(s,u),s.push(u)):(this.vnodeToCache=t,this.keyToCache=u),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return z}};Object.defineProperty(e,"config",t),e.util={warn:le,extend:P,mergeOptions:Ue,defineReactive:Ce},e.set=Ae,e.delete=Pe,e.nextTick=at,e.observable=function(e){return Se(e),e},e.options=Object.create(null),U.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,P(e.options.components,En),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=A(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Ue(this.options,e),this}}(e),Sn(e),function(e){U.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&l(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(In),Object.defineProperty(In.prototype,"$isServer",{get:re}),Object.defineProperty(In.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(In,"FunctionalRenderContext",{value:Ft}),In.version="2.6.14";var Dn=h("style,class"),Ln=h("input,textarea,option,select,progress"),Fn=function(e,t,n){return"value"===n&&Ln(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},qn=h("contenteditable,draggable,spellcheck"),Un=h("events,caret,typing,plaintext-only"),Hn=h("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),zn="http://www.w3.org/1999/xlink",$n=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Bn=function(e){return $n(e)?e.slice(6,e.length):""},Nn=function(e){return null==e||!1===e};function Vn(e){for(var t=e.data,n=e,i=e;r(i.componentInstance);)(i=i.componentInstance._vnode)&&i.data&&(t=jn(i.data,t));for(;r(n=n.parent);)n&&n.data&&(t=jn(t,n.data));return function(e,t){if(r(e)||r(t))return Gn(e,Wn(t));return""}(t.staticClass,t.class)}function jn(e,t){return{staticClass:Gn(e.staticClass,t.staticClass),class:r(e.class)?[e.class,t.class]:t.class}}function Gn(e,t){return e?t?e+" "+t:e:t||""}function Wn(e){return Array.isArray(e)?function(e){for(var t,n="",i=0,a=e.length;i<a;i++)r(t=Wn(e[i]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):u(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Kn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Jn=h("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Yn=h("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Xn=function(e){return Jn(e)||Yn(e)};function Zn(e){return Yn(e)?"svg":"math"===e?"math":void 0}var Qn=Object.create(null);var ei=h("text,number,password,search,email,tel,url");function ti(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}var ni=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Kn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),ii={create:function(e,t){ai(t)},update:function(e,t){e.data.ref!==t.data.ref&&(ai(e,!0),ai(t))},destroy:function(e){ai(e,!0)}};function ai(e,t){var n=e.data.ref;if(r(n)){var i=e.context,a=e.componentInstance||e.elm,o=i.$refs;t?Array.isArray(o[n])?b(o[n],a):o[n]===a&&(o[n]=void 0):e.data.refInFor?Array.isArray(o[n])?o[n].indexOf(a)<0&&o[n].push(a):o[n]=[a]:o[n]=a}}var ri=new he("",{},[]),oi=["create","activate","update","remove","destroy"];function si(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&r(e.data)===r(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,i=r(n=e.data)&&r(n=n.attrs)&&n.type,a=r(n=t.data)&&r(n=n.attrs)&&n.type;return i===a||ei(i)&&ei(a)}(e,t)||o(e.isAsyncPlaceholder)&&a(t.asyncFactory.error))}function ui(e,t,n){var i,a,o={};for(i=t;i<=n;++i)r(a=e[i].key)&&(o[a]=i);return o}var pi={create:li,update:li,destroy:function(e){li(e,ri)}};function li(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,i,a,r=e===ri,o=t===ri,s=yi(e.data.directives,e.context),u=yi(t.data.directives,t.context),p=[],l=[];for(n in u)i=s[n],a=u[n],i?(a.oldValue=i.value,a.oldArg=i.arg,mi(a,"update",t,e),a.def&&a.def.componentUpdated&&l.push(a)):(mi(a,"bind",t,e),a.def&&a.def.inserted&&p.push(a));if(p.length){var d=function(){for(var n=0;n<p.length;n++)mi(p[n],"inserted",t,e)};r?lt(t,"insert",d):d()}l.length&&lt(t,"postpatch",(function(){for(var n=0;n<l.length;n++)mi(l[n],"componentUpdated",t,e)}));if(!r)for(n in s)u[n]||mi(s[n],"unbind",e,e,o)}(e,t)}var di=Object.create(null);function yi(e,t){var n,i,a=Object.create(null);if(!e)return a;for(n=0;n<e.length;n++)(i=e[n]).modifiers||(i.modifiers=di),a[ci(i)]=i,i.def=He(t.$options,"directives",i.name);return a}function ci(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function mi(e,t,n,i,a){var r=e.def&&e.def[t];if(r)try{r(n.elm,e,n,i,a)}catch(i){je(i,n.context,"directive "+e.name+" "+t+" hook")}}var fi=[ii,pi];function hi(e,t){var n=t.componentOptions;if(!(r(n)&&!1===n.Ctor.options.inheritAttrs||a(e.data.attrs)&&a(t.data.attrs))){var i,o,s=t.elm,u=e.data.attrs||{},p=t.data.attrs||{};for(i in r(p.__ob__)&&(p=t.data.attrs=P({},p)),p)o=p[i],u[i]!==o&&Ti(s,i,o,t.data.pre);for(i in(X||Q)&&p.value!==u.value&&Ti(s,"value",p.value),u)a(p[i])&&($n(i)?s.removeAttributeNS(zn,Bn(i)):qn(i)||s.removeAttribute(i))}}function Ti(e,t,n,i){i||e.tagName.indexOf("-")>-1?vi(e,t,n):Hn(t)?Nn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):qn(t)?e.setAttribute(t,function(e,t){return Nn(t)||"false"===t?"false":"contenteditable"===e&&Un(t)?t:"true"}(t,n)):$n(t)?Nn(n)?e.removeAttributeNS(zn,Bn(t)):e.setAttributeNS(zn,t,n):vi(e,t,n)}function vi(e,t,n){if(Nn(n))e.removeAttribute(t);else{if(X&&!Z&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var i=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",i)};e.addEventListener("input",i),e.__ieph=!0}e.setAttribute(t,n)}}var bi={create:hi,update:hi};function gi(e,t){var n=t.elm,i=t.data,o=e.data;if(!(a(i.staticClass)&&a(i.class)&&(a(o)||a(o.staticClass)&&a(o.class)))){var s=Vn(t),u=n._transitionClasses;r(u)&&(s=Gn(s,Wn(u))),s!==n._prevClass&&(n.setAttribute("class",s),n._prevClass=s)}}var wi,ki,xi,Mi,Ri,Ii,Si={create:gi,update:gi},Ci=/[\w).+\-_$\]]/;function Ai(e){var t,n,i,a,r,o=!1,s=!1,u=!1,p=!1,l=0,d=0,y=0,c=0;for(i=0;i<e.length;i++)if(n=t,t=e.charCodeAt(i),o)39===t&&92!==n&&(o=!1);else if(s)34===t&&92!==n&&(s=!1);else if(u)96===t&&92!==n&&(u=!1);else if(p)47===t&&92!==n&&(p=!1);else if(124!==t||124===e.charCodeAt(i+1)||124===e.charCodeAt(i-1)||l||d||y){switch(t){case 34:s=!0;break;case 39:o=!0;break;case 96:u=!0;break;case 40:y++;break;case 41:y--;break;case 91:d++;break;case 93:d--;break;case 123:l++;break;case 125:l--}if(47===t){for(var m=i-1,f=void 0;m>=0&&" "===(f=e.charAt(m));m--);f&&Ci.test(f)||(p=!0)}}else void 0===a?(c=i+1,a=e.slice(0,i).trim()):h();function h(){(r||(r=[])).push(e.slice(c,i).trim()),c=i+1}if(void 0===a?a=e.slice(0,i).trim():0!==c&&h(),r)for(i=0;i<r.length;i++)a=Pi(a,r[i]);return a}function Pi(e,t){var n=t.indexOf("(");if(n<0)return'_f("'+t+'")('+e+")";var i=t.slice(0,n),a=t.slice(n+1);return'_f("'+i+'")('+e+(")"!==a?","+a:a)}function _i(e,t){console.error("[Vue compiler]: "+e)}function Oi(e,t){return e?e.map((function(e){return e[t]})).filter((function(e){return e})):[]}function Ei(e,t,n,i,a){(e.props||(e.props=[])).push(Bi({name:t,value:n,dynamic:a},i)),e.plain=!1}function Di(e,t,n,i,a){(a?e.dynamicAttrs||(e.dynamicAttrs=[]):e.attrs||(e.attrs=[])).push(Bi({name:t,value:n,dynamic:a},i)),e.plain=!1}function Li(e,t,n,i){e.attrsMap[t]=n,e.attrsList.push(Bi({name:t,value:n},i))}function Fi(e,t,n,i,a,r,o,s){(e.directives||(e.directives=[])).push(Bi({name:t,rawName:n,value:i,arg:a,isDynamicArg:r,modifiers:o},s)),e.plain=!1}function qi(e,t,n){return n?"_p("+t+',"'+e+'")':e+t}function Ui(e,t,n,a,r,o,s,u){var p;(a=a||i).right?u?t="("+t+")==='click'?'contextmenu':("+t+")":"click"===t&&(t="contextmenu",delete a.right):a.middle&&(u?t="("+t+")==='click'?'mouseup':("+t+")":"click"===t&&(t="mouseup")),a.capture&&(delete a.capture,t=qi("!",t,u)),a.once&&(delete a.once,t=qi("~",t,u)),a.passive&&(delete a.passive,t=qi("&",t,u)),a.native?(delete a.native,p=e.nativeEvents||(e.nativeEvents={})):p=e.events||(e.events={});var l=Bi({value:n.trim(),dynamic:u},s);a!==i&&(l.modifiers=a);var d=p[t];Array.isArray(d)?r?d.unshift(l):d.push(l):p[t]=d?r?[l,d]:[d,l]:l,e.plain=!1}function Hi(e,t,n){var i=zi(e,":"+t)||zi(e,"v-bind:"+t);if(null!=i)return Ai(i);if(!1!==n){var a=zi(e,t);if(null!=a)return JSON.stringify(a)}}function zi(e,t,n){var i;if(null!=(i=e.attrsMap[t]))for(var a=e.attrsList,r=0,o=a.length;r<o;r++)if(a[r].name===t){a.splice(r,1);break}return n&&delete e.attrsMap[t],i}function $i(e,t){for(var n=e.attrsList,i=0,a=n.length;i<a;i++){var r=n[i];if(t.test(r.name))return n.splice(i,1),r}}function Bi(e,t){return t&&(null!=t.start&&(e.start=t.start),null!=t.end&&(e.end=t.end)),e}function Ni(e,t,n){var i=n||{},a=i.number,r="$$v";i.trim&&(r="(typeof $$v === 'string'? $$v.trim(): $$v)"),a&&(r="_n("+r+")");var o=Vi(t,r);e.model={value:"("+t+")",expression:JSON.stringify(t),callback:"function ($$v) {"+o+"}"}}function Vi(e,t){var n=function(e){if(e=e.trim(),wi=e.length,e.indexOf("[")<0||e.lastIndexOf("]")<wi-1)return(Mi=e.lastIndexOf("."))>-1?{exp:e.slice(0,Mi),key:'"'+e.slice(Mi+1)+'"'}:{exp:e,key:null};ki=e,Mi=Ri=Ii=0;for(;!Gi();)Wi(xi=ji())?Ji(xi):91===xi&&Ki(xi);return{exp:e.slice(0,Ri),key:e.slice(Ri+1,Ii)}}(e);return null===n.key?e+"="+t:"$set("+n.exp+", "+n.key+", "+t+")"}function ji(){return ki.charCodeAt(++Mi)}function Gi(){return Mi>=wi}function Wi(e){return 34===e||39===e}function Ki(e){var t=1;for(Ri=Mi;!Gi();)if(Wi(e=ji()))Ji(e);else if(91===e&&t++,93===e&&t--,0===t){Ii=Mi;break}}function Ji(e){for(var t=e;!Gi()&&(e=ji())!==t;);}var Yi;function Xi(e,t,n){var i=Yi;return function a(){var r=t.apply(null,arguments);null!==r&&ea(e,a,n,i)}}var Zi=Ye&&!(te&&Number(te[1])<=53);function Qi(e,t,n,i){if(Zi){var a=ln,r=t;t=r._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=a||e.timeStamp<=0||e.target.ownerDocument!==document)return r.apply(this,arguments)}}Yi.addEventListener(e,t,ie?{capture:n,passive:i}:n)}function ea(e,t,n,i){(i||Yi).removeEventListener(e,t._wrapper||t,n)}function ta(e,t){if(!a(e.data.on)||!a(t.data.on)){var n=t.data.on||{},i=e.data.on||{};Yi=t.elm,function(e){if(r(e.__r)){var t=X?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}r(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),pt(n,i,Qi,ea,Xi,t.context),Yi=void 0}}var na,ia={create:ta,update:ta};function aa(e,t){if(!a(e.data.domProps)||!a(t.data.domProps)){var n,i,o=t.elm,s=e.data.domProps||{},u=t.data.domProps||{};for(n in r(u.__ob__)&&(u=t.data.domProps=P({},u)),s)n in u||(o[n]="");for(n in u){if(i=u[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),i===s[n])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===n&&"PROGRESS"!==o.tagName){o._value=i;var p=a(i)?"":String(i);ra(o,p)&&(o.value=p)}else if("innerHTML"===n&&Yn(o.tagName)&&a(o.innerHTML)){(na=na||document.createElement("div")).innerHTML="<svg>"+i+"</svg>";for(var l=na.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;l.firstChild;)o.appendChild(l.firstChild)}else if(i!==s[n])try{o[n]=i}catch(e){}}}}function ra(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,i=e._vModifiers;if(r(i)){if(i.number)return f(n)!==f(t);if(i.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var oa={create:aa,update:aa},sa=k((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var i=e.split(n);i.length>1&&(t[i[0].trim()]=i[1].trim())}})),t}));function ua(e){var t=pa(e.style);return e.staticStyle?P(e.staticStyle,t):t}function pa(e){return Array.isArray(e)?_(e):"string"==typeof e?sa(e):e}var la,da=/^--/,ya=/\s*!important$/,ca=function(e,t,n){if(da.test(t))e.style.setProperty(t,n);else if(ya.test(n))e.style.setProperty(S(t),n.replace(ya,""),"important");else{var i=fa(t);if(Array.isArray(n))for(var a=0,r=n.length;a<r;a++)e.style[i]=n[a];else e.style[i]=n}},ma=["Webkit","Moz","ms"],fa=k((function(e){if(la=la||document.createElement("div").style,"filter"!==(e=M(e))&&e in la)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<ma.length;n++){var i=ma[n]+t;if(i in la)return i}}));function ha(e,t){var n=t.data,i=e.data;if(!(a(n.staticStyle)&&a(n.style)&&a(i.staticStyle)&&a(i.style))){var o,s,u=t.elm,p=i.staticStyle,l=i.normalizedStyle||i.style||{},d=p||l,y=pa(t.data.style)||{};t.data.normalizedStyle=r(y.__ob__)?P({},y):y;var c=function(e,t){var n,i={};if(t)for(var a=e;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(n=ua(a.data))&&P(i,n);(n=ua(e.data))&&P(i,n);for(var r=e;r=r.parent;)r.data&&(n=ua(r.data))&&P(i,n);return i}(t,!0);for(s in d)a(c[s])&&ca(u,s,"");for(s in c)(o=c[s])!==d[s]&&ca(u,s,null==o?"":o)}}var Ta={create:ha,update:ha},va=/\s+/;function ba(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(va).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function ga(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(va).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",i=" "+t+" ";n.indexOf(i)>=0;)n=n.replace(i," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function wa(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&P(t,ka(e.name||"v")),P(t,e),t}return"string"==typeof e?ka(e):void 0}}var ka=k((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),xa=W&&!Z,Ma="transition",Ra="transitionend",Ia="animation",Sa="animationend";xa&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Ma="WebkitTransition",Ra="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Ia="WebkitAnimation",Sa="webkitAnimationEnd"));var Ca=W?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Aa(e){Ca((function(){Ca(e)}))}function Pa(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),ba(e,t))}function _a(e,t){e._transitionClasses&&b(e._transitionClasses,t),ga(e,t)}function Oa(e,t,n){var i=Da(e,t),a=i.type,r=i.timeout,o=i.propCount;if(!a)return n();var s="transition"===a?Ra:Sa,u=0,p=function(){e.removeEventListener(s,l),n()},l=function(t){t.target===e&&++u>=o&&p()};setTimeout((function(){u<o&&p()}),r+1),e.addEventListener(s,l)}var Ea=/\b(transform|all)(,|$)/;function Da(e,t){var n,i=window.getComputedStyle(e),a=(i[Ma+"Delay"]||"").split(", "),r=(i[Ma+"Duration"]||"").split(", "),o=La(a,r),s=(i[Ia+"Delay"]||"").split(", "),u=(i[Ia+"Duration"]||"").split(", "),p=La(s,u),l=0,d=0;return"transition"===t?o>0&&(n="transition",l=o,d=r.length):"animation"===t?p>0&&(n="animation",l=p,d=u.length):d=(n=(l=Math.max(o,p))>0?o>p?"transition":"animation":null)?"transition"===n?r.length:u.length:0,{type:n,timeout:l,propCount:d,hasTransform:"transition"===n&&Ea.test(i[Ma+"Property"])}}function La(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return Fa(t)+Fa(e[n])})))}function Fa(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function qa(e,t){var n=e.elm;r(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var i=wa(e.data.transition);if(!a(i)&&!r(n._enterCb)&&1===n.nodeType){for(var o=i.css,s=i.type,p=i.enterClass,l=i.enterToClass,d=i.enterActiveClass,y=i.appearClass,c=i.appearToClass,m=i.appearActiveClass,h=i.beforeEnter,T=i.enter,v=i.afterEnter,b=i.enterCancelled,g=i.beforeAppear,w=i.appear,k=i.afterAppear,x=i.appearCancelled,M=i.duration,R=Zt,I=Zt.$vnode;I&&I.parent;)R=I.context,I=I.parent;var S=!R._isMounted||!e.isRootInsert;if(!S||w||""===w){var C=S&&y?y:p,A=S&&m?m:d,P=S&&c?c:l,_=S&&g||h,O=S&&"function"==typeof w?w:T,E=S&&k||v,D=S&&x||b,L=f(u(M)?M.enter:M);0;var F=!1!==o&&!Z,U=za(O),H=n._enterCb=q((function(){F&&(_a(n,P),_a(n,A)),H.cancelled?(F&&_a(n,C),D&&D(n)):E&&E(n),n._enterCb=null}));e.data.show||lt(e,"insert",(function(){var t=n.parentNode,i=t&&t._pending&&t._pending[e.key];i&&i.tag===e.tag&&i.elm._leaveCb&&i.elm._leaveCb(),O&&O(n,H)})),_&&_(n),F&&(Pa(n,C),Pa(n,A),Aa((function(){_a(n,C),H.cancelled||(Pa(n,P),U||(Ha(L)?setTimeout(H,L):Oa(n,s,H)))}))),e.data.show&&(t&&t(),O&&O(n,H)),F||U||H()}}}function Ua(e,t){var n=e.elm;r(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var i=wa(e.data.transition);if(a(i)||1!==n.nodeType)return t();if(!r(n._leaveCb)){var o=i.css,s=i.type,p=i.leaveClass,l=i.leaveToClass,d=i.leaveActiveClass,y=i.beforeLeave,c=i.leave,m=i.afterLeave,h=i.leaveCancelled,T=i.delayLeave,v=i.duration,b=!1!==o&&!Z,g=za(c),w=f(u(v)?v.leave:v);0;var k=n._leaveCb=q((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),b&&(_a(n,l),_a(n,d)),k.cancelled?(b&&_a(n,p),h&&h(n)):(t(),m&&m(n)),n._leaveCb=null}));T?T(x):x()}function x(){k.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),y&&y(n),b&&(Pa(n,p),Pa(n,d),Aa((function(){_a(n,p),k.cancelled||(Pa(n,l),g||(Ha(w)?setTimeout(k,w):Oa(n,s,k)))}))),c&&c(n,k),b||g||k())}}function Ha(e){return"number"==typeof e&&!isNaN(e)}function za(e){if(a(e))return!1;var t=e.fns;return r(t)?za(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function $a(e,t){!0!==t.data.show&&qa(t)}var Ba=function(e){var t,n,i={},u=e.modules,p=e.nodeOps;for(t=0;t<oi.length;++t)for(i[oi[t]]=[],n=0;n<u.length;++n)r(u[n][oi[t]])&&i[oi[t]].push(u[n][oi[t]]);function l(e){var t=p.parentNode(e);r(t)&&p.removeChild(t,e)}function d(e,t,n,a,s,u,l){if(r(e.elm)&&r(u)&&(e=u[l]=ge(e)),e.isRootInsert=!s,!function(e,t,n,a){var s=e.data;if(r(s)){var u=r(e.componentInstance)&&s.keepAlive;if(r(s=s.hook)&&r(s=s.init)&&s(e,!1),r(e.componentInstance))return y(e,t),c(n,e.elm,a),o(u)&&function(e,t,n,a){var o,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,r(o=s.data)&&r(o=o.transition)){for(o=0;o<i.activate.length;++o)i.activate[o](ri,s);t.push(s);break}c(n,e.elm,a)}(e,t,n,a),!0}}(e,t,n,a)){var d=e.data,f=e.children,h=e.tag;r(h)?(e.elm=e.ns?p.createElementNS(e.ns,h):p.createElement(h,e),v(e),m(e,f,t),r(d)&&T(e,t),c(n,e.elm,a)):o(e.isComment)?(e.elm=p.createComment(e.text),c(n,e.elm,a)):(e.elm=p.createTextNode(e.text),c(n,e.elm,a))}}function y(e,t){r(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,f(e)?(T(e,t),v(e)):(ai(e),t.push(e))}function c(e,t,n){r(e)&&(r(n)?p.parentNode(n)===e&&p.insertBefore(e,t,n):p.appendChild(e,t))}function m(e,t,n){if(Array.isArray(t)){0;for(var i=0;i<t.length;++i)d(t[i],n,e.elm,null,!0,t,i)}else s(e.text)&&p.appendChild(e.elm,p.createTextNode(String(e.text)))}function f(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return r(e.tag)}function T(e,n){for(var a=0;a<i.create.length;++a)i.create[a](ri,e);r(t=e.data.hook)&&(r(t.create)&&t.create(ri,e),r(t.insert)&&n.push(e))}function v(e){var t;if(r(t=e.fnScopeId))p.setStyleScope(e.elm,t);else for(var n=e;n;)r(t=n.context)&&r(t=t.$options._scopeId)&&p.setStyleScope(e.elm,t),n=n.parent;r(t=Zt)&&t!==e.context&&t!==e.fnContext&&r(t=t.$options._scopeId)&&p.setStyleScope(e.elm,t)}function b(e,t,n,i,a,r){for(;i<=a;++i)d(n[i],r,e,t,!1,n,i)}function g(e){var t,n,a=e.data;if(r(a))for(r(t=a.hook)&&r(t=t.destroy)&&t(e),t=0;t<i.destroy.length;++t)i.destroy[t](e);if(r(t=e.children))for(n=0;n<e.children.length;++n)g(e.children[n])}function w(e,t,n){for(;t<=n;++t){var i=e[t];r(i)&&(r(i.tag)?(k(i),g(i)):l(i.elm))}}function k(e,t){if(r(t)||r(e.data)){var n,a=i.remove.length+1;for(r(t)?t.listeners+=a:t=function(e,t){function n(){0==--n.listeners&&l(e)}return n.listeners=t,n}(e.elm,a),r(n=e.componentInstance)&&r(n=n._vnode)&&r(n.data)&&k(n,t),n=0;n<i.remove.length;++n)i.remove[n](e,t);r(n=e.data.hook)&&r(n=n.remove)?n(e,t):t()}else l(e.elm)}function x(e,t,n,i){for(var a=n;a<i;a++){var o=t[a];if(r(o)&&si(e,o))return a}}function M(e,t,n,s,u,l){if(e!==t){r(t.elm)&&r(s)&&(t=s[u]=ge(t));var y=t.elm=e.elm;if(o(e.isAsyncPlaceholder))r(t.asyncFactory.resolved)?S(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(o(t.isStatic)&&o(e.isStatic)&&t.key===e.key&&(o(t.isCloned)||o(t.isOnce)))t.componentInstance=e.componentInstance;else{var c,m=t.data;r(m)&&r(c=m.hook)&&r(c=c.prepatch)&&c(e,t);var h=e.children,T=t.children;if(r(m)&&f(t)){for(c=0;c<i.update.length;++c)i.update[c](e,t);r(c=m.hook)&&r(c=c.update)&&c(e,t)}a(t.text)?r(h)&&r(T)?h!==T&&function(e,t,n,i,o){var s,u,l,y=0,c=0,m=t.length-1,f=t[0],h=t[m],T=n.length-1,v=n[0],g=n[T],k=!o;for(0;y<=m&&c<=T;)a(f)?f=t[++y]:a(h)?h=t[--m]:si(f,v)?(M(f,v,i,n,c),f=t[++y],v=n[++c]):si(h,g)?(M(h,g,i,n,T),h=t[--m],g=n[--T]):si(f,g)?(M(f,g,i,n,T),k&&p.insertBefore(e,f.elm,p.nextSibling(h.elm)),f=t[++y],g=n[--T]):si(h,v)?(M(h,v,i,n,c),k&&p.insertBefore(e,h.elm,f.elm),h=t[--m],v=n[++c]):(a(s)&&(s=ui(t,y,m)),a(u=r(v.key)?s[v.key]:x(v,t,y,m))?d(v,i,e,f.elm,!1,n,c):si(l=t[u],v)?(M(l,v,i,n,c),t[u]=void 0,k&&p.insertBefore(e,l.elm,f.elm)):d(v,i,e,f.elm,!1,n,c),v=n[++c]);y>m?b(e,a(n[T+1])?null:n[T+1].elm,n,c,T,i):c>T&&w(t,y,m)}(y,h,T,n,l):r(T)?(r(e.text)&&p.setTextContent(y,""),b(y,null,T,0,T.length-1,n)):r(h)?w(h,0,h.length-1):r(e.text)&&p.setTextContent(y,""):e.text!==t.text&&p.setTextContent(y,t.text),r(m)&&r(c=m.hook)&&r(c=c.postpatch)&&c(e,t)}}}function R(e,t,n){if(o(n)&&r(e.parent))e.parent.data.pendingInsert=t;else for(var i=0;i<t.length;++i)t[i].data.hook.insert(t[i])}var I=h("attrs,class,staticClass,staticStyle,key");function S(e,t,n,i){var a,s=t.tag,u=t.data,p=t.children;if(i=i||u&&u.pre,t.elm=e,o(t.isComment)&&r(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(r(u)&&(r(a=u.hook)&&r(a=a.init)&&a(t,!0),r(a=t.componentInstance)))return y(t,n),!0;if(r(s)){if(r(p))if(e.hasChildNodes())if(r(a=u)&&r(a=a.domProps)&&r(a=a.innerHTML)){if(a!==e.innerHTML)return!1}else{for(var l=!0,d=e.firstChild,c=0;c<p.length;c++){if(!d||!S(d,p[c],n,i)){l=!1;break}d=d.nextSibling}if(!l||d)return!1}else m(t,p,n);if(r(u)){var f=!1;for(var h in u)if(!I(h)){f=!0,T(t,n);break}!f&&u.class&&ot(u.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,s){if(!a(t)){var u,l=!1,y=[];if(a(e))l=!0,d(t,y);else{var c=r(e.nodeType);if(!c&&si(e,t))M(e,t,y,null,null,s);else{if(c){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),o(n)&&S(e,t,y))return R(t,y,!0),e;u=e,e=new he(p.tagName(u).toLowerCase(),{},[],void 0,u)}var m=e.elm,h=p.parentNode(m);if(d(t,y,m._leaveCb?null:h,p.nextSibling(m)),r(t.parent))for(var T=t.parent,v=f(t);T;){for(var b=0;b<i.destroy.length;++b)i.destroy[b](T);if(T.elm=t.elm,v){for(var k=0;k<i.create.length;++k)i.create[k](ri,T);var x=T.data.hook.insert;if(x.merged)for(var I=1;I<x.fns.length;I++)x.fns[I]()}else ai(T);T=T.parent}r(h)?w([e],0,0):r(e.tag)&&g(e)}}return R(t,y,l),t.elm}r(e)&&g(e)}}({nodeOps:ni,modules:[bi,Si,ia,oa,Ta,W?{create:$a,activate:$a,remove:function(e,t){!0!==e.data.show?Ua(e,t):t()}}:{}].concat(fi)});Z&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Ya(e,"input")}));var Na={inserted:function(e,t,n,i){"select"===n.tag?(i.elm&&!i.elm._vOptions?lt(n,"postpatch",(function(){Na.componentUpdated(e,t,n)})):Va(e,t,n.context),e._vOptions=[].map.call(e.options,Wa)):("textarea"===n.tag||ei(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",Ka),e.addEventListener("compositionend",Ja),e.addEventListener("change",Ja),Z&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){Va(e,t,n.context);var i=e._vOptions,a=e._vOptions=[].map.call(e.options,Wa);if(a.some((function(e,t){return!L(e,i[t])})))(e.multiple?t.value.some((function(e){return Ga(e,a)})):t.value!==t.oldValue&&Ga(t.value,a))&&Ya(e,"change")}}};function Va(e,t,n){ja(e,t,n),(X||Q)&&setTimeout((function(){ja(e,t,n)}),0)}function ja(e,t,n){var i=t.value,a=e.multiple;if(!a||Array.isArray(i)){for(var r,o,s=0,u=e.options.length;s<u;s++)if(o=e.options[s],a)r=F(i,Wa(o))>-1,o.selected!==r&&(o.selected=r);else if(L(Wa(o),i))return void(e.selectedIndex!==s&&(e.selectedIndex=s));a||(e.selectedIndex=-1)}}function Ga(e,t){return t.every((function(t){return!L(t,e)}))}function Wa(e){return"_value"in e?e._value:e.value}function Ka(e){e.target.composing=!0}function Ja(e){e.target.composing&&(e.target.composing=!1,Ya(e.target,"input"))}function Ya(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function Xa(e){return!e.componentInstance||e.data&&e.data.transition?e:Xa(e.componentInstance._vnode)}var Za={model:Na,show:{bind:function(e,t,n){var i=t.value,a=(n=Xa(n)).data&&n.data.transition,r=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;i&&a?(n.data.show=!0,qa(n,(function(){e.style.display=r}))):e.style.display=i?r:"none"},update:function(e,t,n){var i=t.value;!i!=!t.oldValue&&((n=Xa(n)).data&&n.data.transition?(n.data.show=!0,i?qa(n,(function(){e.style.display=e.__vOriginalDisplay})):Ua(n,(function(){e.style.display="none"}))):e.style.display=i?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,i,a){a||(e.style.display=e.__vOriginalDisplay)}}},Qa={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function er(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?er(Wt(t.children)):e}function tr(e){var t={},n=e.$options;for(var i in n.propsData)t[i]=e[i];var a=n._parentListeners;for(var r in a)t[M(r)]=a[r];return t}function nr(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var ir=function(e){return e.tag||Tt(e)},ar=function(e){return"show"===e.name},rr={name:"transition",props:Qa,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(ir)).length){0;var i=this.mode;0;var a=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return a;var r=er(a);if(!r)return a;if(this._leaving)return nr(e,a);var o="__transition-"+this._uid+"-";r.key=null==r.key?r.isComment?o+"comment":o+r.tag:s(r.key)?0===String(r.key).indexOf(o)?r.key:o+r.key:r.key;var u=(r.data||(r.data={})).transition=tr(this),p=this._vnode,l=er(p);if(r.data.directives&&r.data.directives.some(ar)&&(r.data.show=!0),l&&l.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(r,l)&&!Tt(l)&&(!l.componentInstance||!l.componentInstance._vnode.isComment)){var d=l.data.transition=P({},u);if("out-in"===i)return this._leaving=!0,lt(d,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),nr(e,a);if("in-out"===i){if(Tt(r))return p;var y,c=function(){y()};lt(u,"afterEnter",c),lt(u,"enterCancelled",c),lt(d,"delayLeave",(function(e){y=e}))}}return a}}},or=P({tag:String,moveClass:String},Qa);function sr(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function ur(e){e.data.newPos=e.elm.getBoundingClientRect()}function pr(e){var t=e.data.pos,n=e.data.newPos,i=t.left-n.left,a=t.top-n.top;if(i||a){e.data.moved=!0;var r=e.elm.style;r.transform=r.WebkitTransform="translate("+i+"px,"+a+"px)",r.transitionDuration="0s"}}delete or.mode;var lr={Transition:rr,TransitionGroup:{props:or,beforeMount:function(){var e=this,t=this._update;this._update=function(n,i){var a=Qt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,a(),t.call(e,n,i)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),i=this.prevChildren=this.children,a=this.$slots.default||[],r=this.children=[],o=tr(this),s=0;s<a.length;s++){var u=a[s];if(u.tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))r.push(u),n[u.key]=u,(u.data||(u.data={})).transition=o;else;}if(i){for(var p=[],l=[],d=0;d<i.length;d++){var y=i[d];y.data.transition=o,y.data.pos=y.elm.getBoundingClientRect(),n[y.key]?p.push(y):l.push(y)}this.kept=e(t,null,p),this.removed=l}return e(t,null,r)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(sr),e.forEach(ur),e.forEach(pr),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,i=n.style;Pa(n,t),i.transform=i.WebkitTransform=i.transitionDuration="",n.addEventListener(Ra,n._moveCb=function e(i){i&&i.target!==n||i&&!/transform$/.test(i.propertyName)||(n.removeEventListener(Ra,e),n._moveCb=null,_a(n,t))})}})))},methods:{hasMove:function(e,t){if(!xa)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){ga(n,e)})),ba(n,t),n.style.display="none",this.$el.appendChild(n);var i=Da(n);return this.$el.removeChild(n),this._hasMove=i.hasTransform}}}};In.config.mustUseProp=Fn,In.config.isReservedTag=Xn,In.config.isReservedAttr=Dn,In.config.getTagNamespace=Zn,In.config.isUnknownElement=function(e){if(!W)return!0;if(Xn(e))return!1;if(e=e.toLowerCase(),null!=Qn[e])return Qn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Qn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Qn[e]=/HTMLUnknownElement/.test(t.toString())},P(In.options.directives,Za),P(In.options.components,lr),In.prototype.__patch__=W?Ba:O,In.prototype.$mount=function(e,t){return function(e,t,n){var i;return e.$el=t,e.$options.render||(e.$options.render=ve),nn(e,"beforeMount"),i=function(){e._update(e._render(),n)},new fn(e,i,O,{before:function(){e._isMounted&&!e._isDestroyed&&nn(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,nn(e,"mounted")),e}(this,e=e&&W?ti(e):void 0,t)},W&&setTimeout((function(){z.devtools&&oe&&oe.emit("init",In)}),0);var dr=/\{\{((?:.|\r?\n)+?)\}\}/g,yr=/[-.*+?^${}()|[\]\/\\]/g,cr=k((function(e){var t=e[0].replace(yr,"\\$&"),n=e[1].replace(yr,"\\$&");return new RegExp(t+"((?:.|\\n)+?)"+n,"g")}));var mr={staticKeys:["staticClass"],transformNode:function(e,t){t.warn;var n=zi(e,"class");n&&(e.staticClass=JSON.stringify(n));var i=Hi(e,"class",!1);i&&(e.classBinding=i)},genData:function(e){var t="";return e.staticClass&&(t+="staticClass:"+e.staticClass+","),e.classBinding&&(t+="class:"+e.classBinding+","),t}};var fr,hr={staticKeys:["staticStyle"],transformNode:function(e,t){t.warn;var n=zi(e,"style");n&&(e.staticStyle=JSON.stringify(sa(n)));var i=Hi(e,"style",!1);i&&(e.styleBinding=i)},genData:function(e){var t="";return e.staticStyle&&(t+="staticStyle:"+e.staticStyle+","),e.styleBinding&&(t+="style:("+e.styleBinding+"),"),t}},Tr=function(e){return(fr=fr||document.createElement("div")).innerHTML=e,fr.textContent},vr=h("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),br=h("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),gr=h("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),wr=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,kr=/^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,xr="[a-zA-Z_][\\-\\.0-9_a-zA-Z"+$.source+"]*",Mr="((?:"+xr+"\\:)?"+xr+")",Rr=new RegExp("^<"+Mr),Ir=/^\s*(\/?)>/,Sr=new RegExp("^<\\/"+Mr+"[^>]*>"),Cr=/^<!DOCTYPE [^>]+>/i,Ar=/^<!\--/,Pr=/^<!\[/,_r=h("script,style,textarea",!0),Or={},Er={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t","&#39;":"'"},Dr=/&(?:lt|gt|quot|amp|#39);/g,Lr=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,Fr=h("pre,textarea",!0),qr=function(e,t){return e&&Fr(e)&&"\n"===t[0]};function Ur(e,t){var n=t?Lr:Dr;return e.replace(n,(function(e){return Er[e]}))}var Hr,zr,$r,Br,Nr,Vr,jr,Gr,Wr=/^@|^v-on:/,Kr=/^v-|^@|^:|^#/,Jr=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,Yr=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,Xr=/^\(|\)$/g,Zr=/^\[.*\]$/,Qr=/:(.*)$/,eo=/^:|^\.|^v-bind:/,to=/\.[^.\]]+(?=[^\]]*$)/g,no=/^v-slot(:|$)|^#/,io=/[\r\n]/,ao=/[ \f\t\r\n]+/g,ro=k(Tr);function oo(e,t,n){return{type:1,tag:e,attrsList:t,attrsMap:mo(t),rawAttrsMap:{},parent:n,children:[]}}function so(e,t){Hr=t.warn||_i,Vr=t.isPreTag||E,jr=t.mustUseProp||E,Gr=t.getTagNamespace||E;var n=t.isReservedTag||E;(function(e){return!(!(e.component||e.attrsMap[":is"]||e.attrsMap["v-bind:is"])&&(e.attrsMap.is?n(e.attrsMap.is):n(e.tag)))}),$r=Oi(t.modules,"transformNode"),Br=Oi(t.modules,"preTransformNode"),Nr=Oi(t.modules,"postTransformNode"),zr=t.delimiters;var i,a,r=[],o=!1!==t.preserveWhitespace,s=t.whitespace,u=!1,p=!1;function l(e){if(d(e),u||e.processed||(e=uo(e,t)),r.length||e===i||i.if&&(e.elseif||e.else)&&lo(i,{exp:e.elseif,block:e}),a&&!e.forbidden)if(e.elseif||e.else)o=e,(s=function(e){for(var t=e.length;t--;){if(1===e[t].type)return e[t];e.pop()}}(a.children))&&s.if&&lo(s,{exp:o.elseif,block:o});else{if(e.slotScope){var n=e.slotTarget||'"default"';(a.scopedSlots||(a.scopedSlots={}))[n]=e}a.children.push(e),e.parent=a}var o,s;e.children=e.children.filter((function(e){return!e.slotScope})),d(e),e.pre&&(u=!1),Vr(e.tag)&&(p=!1);for(var l=0;l<Nr.length;l++)Nr[l](e,t)}function d(e){if(!p)for(var t;(t=e.children[e.children.length-1])&&3===t.type&&" "===t.text;)e.children.pop()}return function(e,t){for(var n,i,a=[],r=t.expectHTML,o=t.isUnaryTag||E,s=t.canBeLeftOpenTag||E,u=0;e;){if(n=e,i&&_r(i)){var p=0,l=i.toLowerCase(),d=Or[l]||(Or[l]=new RegExp("([\\s\\S]*?)(</"+l+"[^>]*>)","i")),y=e.replace(d,(function(e,n,i){return p=i.length,_r(l)||"noscript"===l||(n=n.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),qr(l,n)&&(n=n.slice(1)),t.chars&&t.chars(n),""}));u+=e.length-y.length,e=y,I(l,u-p,u)}else{var c=e.indexOf("<");if(0===c){if(Ar.test(e)){var m=e.indexOf("--\x3e");if(m>=0){t.shouldKeepComment&&t.comment(e.substring(4,m),u,u+m+3),x(m+3);continue}}if(Pr.test(e)){var f=e.indexOf("]>");if(f>=0){x(f+2);continue}}var h=e.match(Cr);if(h){x(h[0].length);continue}var T=e.match(Sr);if(T){var v=u;x(T[0].length),I(T[1],v,u);continue}var b=M();if(b){R(b),qr(b.tagName,e)&&x(1);continue}}var g=void 0,w=void 0,k=void 0;if(c>=0){for(w=e.slice(c);!(Sr.test(w)||Rr.test(w)||Ar.test(w)||Pr.test(w)||(k=w.indexOf("<",1))<0);)c+=k,w=e.slice(c);g=e.substring(0,c)}c<0&&(g=e),g&&x(g.length),t.chars&&g&&t.chars(g,u-g.length,u)}if(e===n){t.chars&&t.chars(e);break}}function x(t){u+=t,e=e.substring(t)}function M(){var t=e.match(Rr);if(t){var n,i,a={tagName:t[1],attrs:[],start:u};for(x(t[0].length);!(n=e.match(Ir))&&(i=e.match(kr)||e.match(wr));)i.start=u,x(i[0].length),i.end=u,a.attrs.push(i);if(n)return a.unarySlash=n[1],x(n[0].length),a.end=u,a}}function R(e){var n=e.tagName,u=e.unarySlash;r&&("p"===i&&gr(n)&&I(i),s(n)&&i===n&&I(n));for(var p=o(n)||!!u,l=e.attrs.length,d=new Array(l),y=0;y<l;y++){var c=e.attrs[y],m=c[3]||c[4]||c[5]||"",f="a"===n&&"href"===c[1]?t.shouldDecodeNewlinesForHref:t.shouldDecodeNewlines;d[y]={name:c[1],value:Ur(m,f)}}p||(a.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:d,start:e.start,end:e.end}),i=n),t.start&&t.start(n,d,p,e.start,e.end)}function I(e,n,r){var o,s;if(null==n&&(n=u),null==r&&(r=u),e)for(s=e.toLowerCase(),o=a.length-1;o>=0&&a[o].lowerCasedTag!==s;o--);else o=0;if(o>=0){for(var p=a.length-1;p>=o;p--)t.end&&t.end(a[p].tag,n,r);a.length=o,i=o&&a[o-1].tag}else"br"===s?t.start&&t.start(e,[],!0,n,r):"p"===s&&(t.start&&t.start(e,[],!1,n,r),t.end&&t.end(e,n,r))}I()}(e,{warn:Hr,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,shouldDecodeNewlinesForHref:t.shouldDecodeNewlinesForHref,shouldKeepComment:t.comments,outputSourceRange:t.outputSourceRange,start:function(e,n,o,s,d){var y=a&&a.ns||Gr(e);X&&"svg"===y&&(n=function(e){for(var t=[],n=0;n<e.length;n++){var i=e[n];fo.test(i.name)||(i.name=i.name.replace(ho,""),t.push(i))}return t}(n));var c,m=oo(e,n,a);y&&(m.ns=y),"style"!==(c=m).tag&&("script"!==c.tag||c.attrsMap.type&&"text/javascript"!==c.attrsMap.type)||re()||(m.forbidden=!0);for(var f=0;f<Br.length;f++)m=Br[f](m,t)||m;u||(!function(e){null!=zi(e,"v-pre")&&(e.pre=!0)}(m),m.pre&&(u=!0)),Vr(m.tag)&&(p=!0),u?function(e){var t=e.attrsList,n=t.length;if(n)for(var i=e.attrs=new Array(n),a=0;a<n;a++)i[a]={name:t[a].name,value:JSON.stringify(t[a].value)},null!=t[a].start&&(i[a].start=t[a].start,i[a].end=t[a].end);else e.pre||(e.plain=!0)}(m):m.processed||(po(m),function(e){var t=zi(e,"v-if");if(t)e.if=t,lo(e,{exp:t,block:e});else{null!=zi(e,"v-else")&&(e.else=!0);var n=zi(e,"v-else-if");n&&(e.elseif=n)}}(m),function(e){null!=zi(e,"v-once")&&(e.once=!0)}(m)),i||(i=m),o?l(m):(a=m,r.push(m))},end:function(e,t,n){var i=r[r.length-1];r.length-=1,a=r[r.length-1],l(i)},chars:function(e,t,n){if(a&&(!X||"textarea"!==a.tag||a.attrsMap.placeholder!==e)){var i,r,l,d=a.children;if(e=p||e.trim()?"script"===(i=a).tag||"style"===i.tag?e:ro(e):d.length?s?"condense"===s&&io.test(e)?"":" ":o?" ":"":"")p||"condense"!==s||(e=e.replace(ao," ")),!u&&" "!==e&&(r=function(e,t){var n=t?cr(t):dr;if(n.test(e)){for(var i,a,r,o=[],s=[],u=n.lastIndex=0;i=n.exec(e);){(a=i.index)>u&&(s.push(r=e.slice(u,a)),o.push(JSON.stringify(r)));var p=Ai(i[1].trim());o.push("_s("+p+")"),s.push({"@binding":p}),u=a+i[0].length}return u<e.length&&(s.push(r=e.slice(u)),o.push(JSON.stringify(r))),{expression:o.join("+"),tokens:s}}}(e,zr))?l={type:2,expression:r.expression,tokens:r.tokens,text:e}:" "===e&&d.length&&" "===d[d.length-1].text||(l={type:3,text:e}),l&&d.push(l)}},comment:function(e,t,n){if(a){var i={type:3,text:e,isComment:!0};0,a.children.push(i)}}}),i}function uo(e,t){var n;!function(e){var t=Hi(e,"key");if(t){e.key=t}}(e),e.plain=!e.key&&!e.scopedSlots&&!e.attrsList.length,function(e){var t=Hi(e,"ref");t&&(e.ref=t,e.refInFor=function(e){var t=e;for(;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}(e))}(e),function(e){var t;"template"===e.tag?(t=zi(e,"scope"),e.slotScope=t||zi(e,"slot-scope")):(t=zi(e,"slot-scope"))&&(e.slotScope=t);var n=Hi(e,"slot");n&&(e.slotTarget='""'===n?'"default"':n,e.slotTargetDynamic=!(!e.attrsMap[":slot"]&&!e.attrsMap["v-bind:slot"]),"template"===e.tag||e.slotScope||Di(e,"slot",n,function(e,t){return e.rawAttrsMap[":"+t]||e.rawAttrsMap["v-bind:"+t]||e.rawAttrsMap[t]}(e,"slot")));if("template"===e.tag){var i=$i(e,no);if(i){0;var a=yo(i),r=a.name,o=a.dynamic;e.slotTarget=r,e.slotTargetDynamic=o,e.slotScope=i.value||"_empty_"}}else{var s=$i(e,no);if(s){0;var u=e.scopedSlots||(e.scopedSlots={}),p=yo(s),l=p.name,d=p.dynamic,y=u[l]=oo("template",[],e);y.slotTarget=l,y.slotTargetDynamic=d,y.children=e.children.filter((function(e){if(!e.slotScope)return e.parent=y,!0})),y.slotScope=s.value||"_empty_",e.children=[],e.plain=!1}}}(e),"slot"===(n=e).tag&&(n.slotName=Hi(n,"name")),function(e){var t;(t=Hi(e,"is"))&&(e.component=t);null!=zi(e,"inline-template")&&(e.inlineTemplate=!0)}(e);for(var i=0;i<$r.length;i++)e=$r[i](e,t)||e;return function(e){var t,n,i,a,r,o,s,u,p=e.attrsList;for(t=0,n=p.length;t<n;t++){if(i=a=p[t].name,r=p[t].value,Kr.test(i))if(e.hasBindings=!0,(o=co(i.replace(Kr,"")))&&(i=i.replace(to,"")),eo.test(i))i=i.replace(eo,""),r=Ai(r),(u=Zr.test(i))&&(i=i.slice(1,-1)),o&&(o.prop&&!u&&"innerHtml"===(i=M(i))&&(i="innerHTML"),o.camel&&!u&&(i=M(i)),o.sync&&(s=Vi(r,"$event"),u?Ui(e,'"update:"+('+i+")",s,null,!1,0,p[t],!0):(Ui(e,"update:"+M(i),s,null,!1,0,p[t]),S(i)!==M(i)&&Ui(e,"update:"+S(i),s,null,!1,0,p[t])))),o&&o.prop||!e.component&&jr(e.tag,e.attrsMap.type,i)?Ei(e,i,r,p[t],u):Di(e,i,r,p[t],u);else if(Wr.test(i))i=i.replace(Wr,""),(u=Zr.test(i))&&(i=i.slice(1,-1)),Ui(e,i,r,o,!1,0,p[t],u);else{var l=(i=i.replace(Kr,"")).match(Qr),d=l&&l[1];u=!1,d&&(i=i.slice(0,-(d.length+1)),Zr.test(d)&&(d=d.slice(1,-1),u=!0)),Fi(e,i,a,r,d,u,o,p[t])}else Di(e,i,JSON.stringify(r),p[t]),!e.component&&"muted"===i&&jr(e.tag,e.attrsMap.type,i)&&Ei(e,i,"true",p[t])}}(e),e}function po(e){var t;if(t=zi(e,"v-for")){var n=function(e){var t=e.match(Jr);if(!t)return;var n={};n.for=t[2].trim();var i=t[1].trim().replace(Xr,""),a=i.match(Yr);a?(n.alias=i.replace(Yr,"").trim(),n.iterator1=a[1].trim(),a[2]&&(n.iterator2=a[2].trim())):n.alias=i;return n}(t);n&&P(e,n)}}function lo(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function yo(e){var t=e.name.replace(no,"");return t||"#"!==e.name[0]&&(t="default"),Zr.test(t)?{name:t.slice(1,-1),dynamic:!0}:{name:'"'+t+'"',dynamic:!1}}function co(e){var t=e.match(to);if(t){var n={};return t.forEach((function(e){n[e.slice(1)]=!0})),n}}function mo(e){for(var t={},n=0,i=e.length;n<i;n++)t[e[n].name]=e[n].value;return t}var fo=/^xmlns:NS\d+/,ho=/^NS\d+:/;function To(e){return oo(e.tag,e.attrsList.slice(),e.parent)}var vo=[mr,hr,{preTransformNode:function(e,t){if("input"===e.tag){var n,i=e.attrsMap;if(!i["v-model"])return;if((i[":type"]||i["v-bind:type"])&&(n=Hi(e,"type")),i.type||n||!i["v-bind"]||(n="("+i["v-bind"]+").type"),n){var a=zi(e,"v-if",!0),r=a?"&&("+a+")":"",o=null!=zi(e,"v-else",!0),s=zi(e,"v-else-if",!0),u=To(e);po(u),Li(u,"type","checkbox"),uo(u,t),u.processed=!0,u.if="("+n+")==='checkbox'"+r,lo(u,{exp:u.if,block:u});var p=To(e);zi(p,"v-for",!0),Li(p,"type","radio"),uo(p,t),lo(u,{exp:"("+n+")==='radio'"+r,block:p});var l=To(e);return zi(l,"v-for",!0),Li(l,":type",n),uo(l,t),lo(u,{exp:a,block:l}),o?u.else=!0:s&&(u.elseif=s),u}}}}];var bo,go,wo={expectHTML:!0,modules:vo,directives:{model:function(e,t,n){n;var i=t.value,a=t.modifiers,r=e.tag,o=e.attrsMap.type;if(e.component)return Ni(e,i,a),!1;if("select"===r)!function(e,t,n){var i='var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return '+(n&&n.number?"_n(val)":"val")+"});";i=i+" "+Vi(t,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]"),Ui(e,"change",i,null,!0)}(e,i,a);else if("input"===r&&"checkbox"===o)!function(e,t,n){var i=n&&n.number,a=Hi(e,"value")||"null",r=Hi(e,"true-value")||"true",o=Hi(e,"false-value")||"false";Ei(e,"checked","Array.isArray("+t+")?_i("+t+","+a+")>-1"+("true"===r?":("+t+")":":_q("+t+","+r+")")),Ui(e,"change","var $$a="+t+",$$el=$event.target,$$c=$$el.checked?("+r+"):("+o+");if(Array.isArray($$a)){var $$v="+(i?"_n("+a+")":a)+",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&("+Vi(t,"$$a.concat([$$v])")+")}else{$$i>-1&&("+Vi(t,"$$a.slice(0,$$i).concat($$a.slice($$i+1))")+")}}else{"+Vi(t,"$$c")+"}",null,!0)}(e,i,a);else if("input"===r&&"radio"===o)!function(e,t,n){var i=n&&n.number,a=Hi(e,"value")||"null";Ei(e,"checked","_q("+t+","+(a=i?"_n("+a+")":a)+")"),Ui(e,"change",Vi(t,a),null,!0)}(e,i,a);else if("input"===r||"textarea"===r)!function(e,t,n){var i=e.attrsMap.type;0;var a=n||{},r=a.lazy,o=a.number,s=a.trim,u=!r&&"range"!==i,p=r?"change":"range"===i?"__r":"input",l="$event.target.value";s&&(l="$event.target.value.trim()");o&&(l="_n("+l+")");var d=Vi(t,l);u&&(d="if($event.target.composing)return;"+d);Ei(e,"value","("+t+")"),Ui(e,p,d,null,!0),(s||o)&&Ui(e,"blur","$forceUpdate()")}(e,i,a);else{if(!z.isReservedTag(r))return Ni(e,i,a),!1}return!0},text:function(e,t){t.value&&Ei(e,"textContent","_s("+t.value+")",t)},html:function(e,t){t.value&&Ei(e,"innerHTML","_s("+t.value+")",t)}},isPreTag:function(e){return"pre"===e},isUnaryTag:vr,mustUseProp:Fn,canBeLeftOpenTag:br,isReservedTag:Xn,getTagNamespace:Zn,staticKeys:function(e){return e.reduce((function(e,t){return e.concat(t.staticKeys||[])}),[]).join(",")}(vo)},ko=k((function(e){return h("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap"+(e?","+e:""))}));function xo(e,t){e&&(bo=ko(t.staticKeys||""),go=t.isReservedTag||E,function e(t){if(t.static=function(e){if(2===e.type)return!1;if(3===e.type)return!0;return!(!e.pre&&(e.hasBindings||e.if||e.for||T(e.tag)||!go(e.tag)||function(e){for(;e.parent;){if("template"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}(e)||!Object.keys(e).every(bo)))}(t),1===t.type){if(!go(t.tag)&&"slot"!==t.tag&&null==t.attrsMap["inline-template"])return;for(var n=0,i=t.children.length;n<i;n++){var a=t.children[n];e(a),a.static||(t.static=!1)}if(t.ifConditions)for(var r=1,o=t.ifConditions.length;r<o;r++){var s=t.ifConditions[r].block;e(s),s.static||(t.static=!1)}}}(e),function e(t,n){if(1===t.type){if((t.static||t.once)&&(t.staticInFor=n),t.static&&t.children.length&&(1!==t.children.length||3!==t.children[0].type))return void(t.staticRoot=!0);if(t.staticRoot=!1,t.children)for(var i=0,a=t.children.length;i<a;i++)e(t.children[i],n||!!t.for);if(t.ifConditions)for(var r=1,o=t.ifConditions.length;r<o;r++)e(t.ifConditions[r].block,n)}}(e,!1))}var Mo=/^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,Ro=/\([^)]*?\);*$/,Io=/^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,So={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},Co={esc:["Esc","Escape"],tab:"Tab",enter:"Enter",space:[" ","Spacebar"],up:["Up","ArrowUp"],left:["Left","ArrowLeft"],right:["Right","ArrowRight"],down:["Down","ArrowDown"],delete:["Backspace","Delete","Del"]},Ao=function(e){return"if("+e+")return null;"},Po={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:Ao("$event.target !== $event.currentTarget"),ctrl:Ao("!$event.ctrlKey"),shift:Ao("!$event.shiftKey"),alt:Ao("!$event.altKey"),meta:Ao("!$event.metaKey"),left:Ao("'button' in $event && $event.button !== 0"),middle:Ao("'button' in $event && $event.button !== 1"),right:Ao("'button' in $event && $event.button !== 2")};function _o(e,t){var n=t?"nativeOn:":"on:",i="",a="";for(var r in e){var o=Oo(e[r]);e[r]&&e[r].dynamic?a+=r+","+o+",":i+='"'+r+'":'+o+","}return i="{"+i.slice(0,-1)+"}",a?n+"_d("+i+",["+a.slice(0,-1)+"])":n+i}function Oo(e){if(!e)return"function(){}";if(Array.isArray(e))return"["+e.map((function(e){return Oo(e)})).join(",")+"]";var t=Io.test(e.value),n=Mo.test(e.value),i=Io.test(e.value.replace(Ro,""));if(e.modifiers){var a="",r="",o=[];for(var s in e.modifiers)if(Po[s])r+=Po[s],So[s]&&o.push(s);else if("exact"===s){var u=e.modifiers;r+=Ao(["ctrl","shift","alt","meta"].filter((function(e){return!u[e]})).map((function(e){return"$event."+e+"Key"})).join("||"))}else o.push(s);return o.length&&(a+=function(e){return"if(!$event.type.indexOf('key')&&"+e.map(Eo).join("&&")+")return null;"}(o)),r&&(a+=r),"function($event){"+a+(t?"return "+e.value+".apply(null, arguments)":n?"return ("+e.value+").apply(null, arguments)":i?"return "+e.value:e.value)+"}"}return t||n?e.value:"function($event){"+(i?"return "+e.value:e.value)+"}"}function Eo(e){var t=parseInt(e,10);if(t)return"$event.keyCode!=="+t;var n=So[e],i=Co[e];return"_k($event.keyCode,"+JSON.stringify(e)+","+JSON.stringify(n)+",$event.key,"+JSON.stringify(i)+")"}var Do={on:function(e,t){e.wrapListeners=function(e){return"_g("+e+","+t.value+")"}},bind:function(e,t){e.wrapData=function(n){return"_b("+n+",'"+e.tag+"',"+t.value+","+(t.modifiers&&t.modifiers.prop?"true":"false")+(t.modifiers&&t.modifiers.sync?",true":"")+")"}},cloak:O},Lo=function(e){this.options=e,this.warn=e.warn||_i,this.transforms=Oi(e.modules,"transformCode"),this.dataGenFns=Oi(e.modules,"genData"),this.directives=P(P({},Do),e.directives);var t=e.isReservedTag||E;this.maybeComponent=function(e){return!!e.component||!t(e.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function Fo(e,t){var n=new Lo(t);return{render:"with(this){return "+(e?"script"===e.tag?"null":qo(e,n):'_c("div")')+"}",staticRenderFns:n.staticRenderFns}}function qo(e,t){if(e.parent&&(e.pre=e.pre||e.parent.pre),e.staticRoot&&!e.staticProcessed)return Uo(e,t);if(e.once&&!e.onceProcessed)return Ho(e,t);if(e.for&&!e.forProcessed)return $o(e,t);if(e.if&&!e.ifProcessed)return zo(e,t);if("template"!==e.tag||e.slotTarget||t.pre){if("slot"===e.tag)return function(e,t){var n=e.slotName||'"default"',i=jo(e,t),a="_t("+n+(i?",function(){return "+i+"}":""),r=e.attrs||e.dynamicAttrs?Ko((e.attrs||[]).concat(e.dynamicAttrs||[]).map((function(e){return{name:M(e.name),value:e.value,dynamic:e.dynamic}}))):null,o=e.attrsMap["v-bind"];!r&&!o||i||(a+=",null");r&&(a+=","+r);o&&(a+=(r?"":",null")+","+o);return a+")"}(e,t);var n;if(e.component)n=function(e,t,n){var i=t.inlineTemplate?null:jo(t,n,!0);return"_c("+e+","+Bo(t,n)+(i?","+i:"")+")"}(e.component,e,t);else{var i;(!e.plain||e.pre&&t.maybeComponent(e))&&(i=Bo(e,t));var a=e.inlineTemplate?null:jo(e,t,!0);n="_c('"+e.tag+"'"+(i?","+i:"")+(a?","+a:"")+")"}for(var r=0;r<t.transforms.length;r++)n=t.transforms[r](e,n);return n}return jo(e,t)||"void 0"}function Uo(e,t){e.staticProcessed=!0;var n=t.pre;return e.pre&&(t.pre=e.pre),t.staticRenderFns.push("with(this){return "+qo(e,t)+"}"),t.pre=n,"_m("+(t.staticRenderFns.length-1)+(e.staticInFor?",true":"")+")"}function Ho(e,t){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return zo(e,t);if(e.staticInFor){for(var n="",i=e.parent;i;){if(i.for){n=i.key;break}i=i.parent}return n?"_o("+qo(e,t)+","+t.onceId+++","+n+")":qo(e,t)}return Uo(e,t)}function zo(e,t,n,i){return e.ifProcessed=!0,function e(t,n,i,a){if(!t.length)return a||"_e()";var r=t.shift();return r.exp?"("+r.exp+")?"+o(r.block)+":"+e(t,n,i,a):""+o(r.block);function o(e){return i?i(e,n):e.once?Ho(e,n):qo(e,n)}}(e.ifConditions.slice(),t,n,i)}function $o(e,t,n,i){var a=e.for,r=e.alias,o=e.iterator1?","+e.iterator1:"",s=e.iterator2?","+e.iterator2:"";return e.forProcessed=!0,(i||"_l")+"(("+a+"),function("+r+o+s+"){return "+(n||qo)(e,t)+"})"}function Bo(e,t){var n="{",i=function(e,t){var n=e.directives;if(!n)return;var i,a,r,o,s="directives:[",u=!1;for(i=0,a=n.length;i<a;i++){r=n[i],o=!0;var p=t.directives[r.name];p&&(o=!!p(e,r,t.warn)),o&&(u=!0,s+='{name:"'+r.name+'",rawName:"'+r.rawName+'"'+(r.value?",value:("+r.value+"),expression:"+JSON.stringify(r.value):"")+(r.arg?",arg:"+(r.isDynamicArg?r.arg:'"'+r.arg+'"'):"")+(r.modifiers?",modifiers:"+JSON.stringify(r.modifiers):"")+"},")}if(u)return s.slice(0,-1)+"]"}(e,t);i&&(n+=i+","),e.key&&(n+="key:"+e.key+","),e.ref&&(n+="ref:"+e.ref+","),e.refInFor&&(n+="refInFor:true,"),e.pre&&(n+="pre:true,"),e.component&&(n+='tag:"'+e.tag+'",');for(var a=0;a<t.dataGenFns.length;a++)n+=t.dataGenFns[a](e);if(e.attrs&&(n+="attrs:"+Ko(e.attrs)+","),e.props&&(n+="domProps:"+Ko(e.props)+","),e.events&&(n+=_o(e.events,!1)+","),e.nativeEvents&&(n+=_o(e.nativeEvents,!0)+","),e.slotTarget&&!e.slotScope&&(n+="slot:"+e.slotTarget+","),e.scopedSlots&&(n+=function(e,t,n){var i=e.for||Object.keys(t).some((function(e){var n=t[e];return n.slotTargetDynamic||n.if||n.for||No(n)})),a=!!e.if;if(!i)for(var r=e.parent;r;){if(r.slotScope&&"_empty_"!==r.slotScope||r.for){i=!0;break}r.if&&(a=!0),r=r.parent}var o=Object.keys(t).map((function(e){return Vo(t[e],n)})).join(",");return"scopedSlots:_u(["+o+"]"+(i?",null,true":"")+(!i&&a?",null,false,"+function(e){var t=5381,n=e.length;for(;n;)t=33*t^e.charCodeAt(--n);return t>>>0}(o):"")+")"}(e,e.scopedSlots,t)+","),e.model&&(n+="model:{value:"+e.model.value+",callback:"+e.model.callback+",expression:"+e.model.expression+"},"),e.inlineTemplate){var r=function(e,t){var n=e.children[0];0;if(n&&1===n.type){var i=Fo(n,t.options);return"inlineTemplate:{render:function(){"+i.render+"},staticRenderFns:["+i.staticRenderFns.map((function(e){return"function(){"+e+"}"})).join(",")+"]}"}}(e,t);r&&(n+=r+",")}return n=n.replace(/,$/,"")+"}",e.dynamicAttrs&&(n="_b("+n+',"'+e.tag+'",'+Ko(e.dynamicAttrs)+")"),e.wrapData&&(n=e.wrapData(n)),e.wrapListeners&&(n=e.wrapListeners(n)),n}function No(e){return 1===e.type&&("slot"===e.tag||e.children.some(No))}function Vo(e,t){var n=e.attrsMap["slot-scope"];if(e.if&&!e.ifProcessed&&!n)return zo(e,t,Vo,"null");if(e.for&&!e.forProcessed)return $o(e,t,Vo);var i="_empty_"===e.slotScope?"":String(e.slotScope),a="function("+i+"){return "+("template"===e.tag?e.if&&n?"("+e.if+")?"+(jo(e,t)||"undefined")+":undefined":jo(e,t)||"undefined":qo(e,t))+"}",r=i?"":",proxy:true";return"{key:"+(e.slotTarget||'"default"')+",fn:"+a+r+"}"}function jo(e,t,n,i,a){var r=e.children;if(r.length){var o=r[0];if(1===r.length&&o.for&&"template"!==o.tag&&"slot"!==o.tag){var s=n?t.maybeComponent(o)?",1":",0":"";return""+(i||qo)(o,t)+s}var u=n?function(e,t){for(var n=0,i=0;i<e.length;i++){var a=e[i];if(1===a.type){if(Go(a)||a.ifConditions&&a.ifConditions.some((function(e){return Go(e.block)}))){n=2;break}(t(a)||a.ifConditions&&a.ifConditions.some((function(e){return t(e.block)})))&&(n=1)}}return n}(r,t.maybeComponent):0,p=a||Wo;return"["+r.map((function(e){return p(e,t)})).join(",")+"]"+(u?","+u:"")}}function Go(e){return void 0!==e.for||"template"===e.tag||"slot"===e.tag}function Wo(e,t){return 1===e.type?qo(e,t):3===e.type&&e.isComment?function(e){return"_e("+JSON.stringify(e.text)+")"}(e):function(e){return"_v("+(2===e.type?e.expression:Jo(JSON.stringify(e.text)))+")"}(e)}function Ko(e){for(var t="",n="",i=0;i<e.length;i++){var a=e[i],r=Jo(a.value);a.dynamic?n+=a.name+","+r+",":t+='"'+a.name+'":'+r+","}return t="{"+t.slice(0,-1)+"}",n?"_d("+t+",["+n.slice(0,-1)+"])":t}function Jo(e){return e.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b"),new RegExp("\\b"+"delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b")+"\\s*\\([^\\)]*\\)");function Yo(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),O}}function Xo(e){var t=Object.create(null);return function(n,i,a){(i=P({},i)).warn;delete i.warn;var r=i.delimiters?String(i.delimiters)+n:n;if(t[r])return t[r];var o=e(n,i);var s={},u=[];return s.render=Yo(o.render,u),s.staticRenderFns=o.staticRenderFns.map((function(e){return Yo(e,u)})),t[r]=s}}var Zo,Qo,es=(Zo=function(e,t){var n=so(e.trim(),t);!1!==t.optimize&&xo(n,t);var i=Fo(n,t);return{ast:n,render:i.render,staticRenderFns:i.staticRenderFns}},function(e){function t(t,n){var i=Object.create(e),a=[],r=[];if(n)for(var o in n.modules&&(i.modules=(e.modules||[]).concat(n.modules)),n.directives&&(i.directives=P(Object.create(e.directives||null),n.directives)),n)"modules"!==o&&"directives"!==o&&(i[o]=n[o]);i.warn=function(e,t,n){(n?r:a).push(e)};var s=Zo(t.trim(),i);return s.errors=a,s.tips=r,s}return{compile:t,compileToFunctions:Xo(t)}})(wo),ts=(es.compile,es.compileToFunctions);function ns(e){return(Qo=Qo||document.createElement("div")).innerHTML=e?'<a href="\n"/>':'<div a="\n"/>',Qo.innerHTML.indexOf("&#10;")>0}var is=!!W&&ns(!1),as=!!W&&ns(!0),rs=k((function(e){var t=ti(e);return t&&t.innerHTML})),os=In.prototype.$mount;In.prototype.$mount=function(e,t){if((e=e&&ti(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var i=n.template;if(i)if("string"==typeof i)"#"===i.charAt(0)&&(i=rs(i));else{if(!i.nodeType)return this;i=i.innerHTML}else e&&(i=function(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML}(e));if(i){0;var a=ts(i,{outputSourceRange:!1,shouldDecodeNewlines:is,shouldDecodeNewlinesForHref:as,delimiters:n.delimiters,comments:n.comments},this),r=a.render,o=a.staticRenderFns;n.render=r,n.staticRenderFns=o}}return os.call(this,e,t)},In.compile=ts,t.a=In}).call(this,n(0),n(7).setImmediate)},function(e){e.exports=JSON.parse('{"a":"hardhat-docgen","b":"https://github.com/ItsNickBarry/hardhat-docgen"}')},function(e,t,n){var i=n(5);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,n(11).default)("0b345cf4",i,!1,{})},function(e,t,n){"use strict";n(3)},function(e,t,n){(t=e.exports=n(6)(!1)).push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;500;600;700&display=swap);",""]),t.push([e.i,"\nhtml,\nbody {\n  font-family: 'Source Code Pro', monospace;\n}\n",""])},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",i=e[3];if(!i)return n;if(t&&"function"==typeof btoa){var a=(o=i,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */"),r=i.sources.map((function(e){return"/*# sourceURL="+i.sourceRoot+e+" */"}));return[n].concat(r).concat([a]).join("\n")}var o;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n})).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var i={},a=0;a<this.length;a++){var r=this[a][0];null!=r&&(i[r]=!0)}for(a=0;a<e.length;a++){var o=e[a];null!=o[0]&&i[o[0]]||(n&&!o[2]?o[2]=n:n&&(o[2]="("+o[2]+") and ("+n+")"),t.push(o))}},t}},function(e,t,n){(function(e){var i=void 0!==e&&e||"undefined"!=typeof self&&self||window,a=Function.prototype.apply;function r(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new r(a.call(setTimeout,i,arguments),clearTimeout)},t.setInterval=function(){return new r(a.call(setInterval,i,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},r.prototype.unref=r.prototype.ref=function(){},r.prototype.close=function(){this._clearFn.call(i,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),t))},n(8),t.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(0))},function(e,t,n){(function(e,t){!function(e,n){"use strict";if(!e.setImmediate){var i,a,r,o,s,u=1,p={},l=!1,d=e.document,y=Object.getPrototypeOf&&Object.getPrototypeOf(e);y=y&&y.setTimeout?y:e,"[object process]"==={}.toString.call(e.process)?i=function(e){t.nextTick((function(){m(e)}))}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?e.MessageChannel?((r=new MessageChannel).port1.onmessage=function(e){m(e.data)},i=function(e){r.port2.postMessage(e)}):d&&"onreadystatechange"in d.createElement("script")?(a=d.documentElement,i=function(e){var t=d.createElement("script");t.onreadystatechange=function(){m(e),t.onreadystatechange=null,a.removeChild(t),t=null},a.appendChild(t)}):i=function(e){setTimeout(m,0,e)}:(o="setImmediate$"+Math.random()+"$",s=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(o)&&m(+t.data.slice(o.length))},e.addEventListener?e.addEventListener("message",s,!1):e.attachEvent("onmessage",s),i=function(t){e.postMessage(o+t,"*")}),y.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var a={callback:e,args:t};return p[u]=a,i(u),u++},y.clearImmediate=c}function c(e){delete p[e]}function m(e){if(l)setTimeout(m,0,e);else{var t=p[e];if(t){l=!0;try{!function(e){var t=e.callback,n=e.args;switch(n.length){case 0:t();break;case 1:t(n[0]);break;case 2:t(n[0],n[1]);break;case 3:t(n[0],n[1],n[2]);break;default:t.apply(void 0,n)}}(t)}finally{c(e),l=!1}}}}}("undefined"==typeof self?void 0===e?this:e:self)}).call(this,n(0),n(9))},function(e,t){var n,i,a=e.exports={};function r(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function s(e){if(n===setTimeout)return setTimeout(e,0);if((n===r||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:r}catch(e){n=r}try{i="function"==typeof clearTimeout?clearTimeout:o}catch(e){i=o}}();var u,p=[],l=!1,d=-1;function y(){l&&u&&(l=!1,u.length?p=u.concat(p):d=-1,p.length&&c())}function c(){if(!l){var e=s(y);l=!0;for(var t=p.length;t;){for(u=p,p=[];++d<t;)u&&u[d].run();d=-1,t=p.length}u=null,l=!1,function(e){if(i===clearTimeout)return clearTimeout(e);if((i===o||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(e);try{i(e)}catch(t){try{return i.call(null,e)}catch(t){return i.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function f(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];p.push(new m(e,t)),1!==p.length||l||s(c)},m.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=f,a.addListener=f,a.once=f,a.off=f,a.removeListener=f,a.removeAllListeners=f,a.emit=f,a.prependListener=f,a.prependOnceListener=f,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(e,t,n){"use strict";n.r(t);var i=n(1);
/*!
  * vue-router v3.5.2
  * (c) 2021 Evan You
  * @license MIT
  */function a(e,t){for(var n in t)e[n]=t[n];return e}var r=/[!'()*]/g,o=function(e){return"%"+e.charCodeAt(0).toString(16)},s=/%2C/g,u=function(e){return encodeURIComponent(e).replace(r,o).replace(s,",")};function p(e){try{return decodeURIComponent(e)}catch(e){0}return e}var l=function(e){return null==e||"object"==typeof e?e:String(e)};function d(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),i=p(n.shift()),a=n.length>0?p(n.join("=")):null;void 0===t[i]?t[i]=a:Array.isArray(t[i])?t[i].push(a):t[i]=[t[i],a]})),t):t}function y(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return u(t);if(Array.isArray(n)){var i=[];return n.forEach((function(e){void 0!==e&&(null===e?i.push(u(t)):i.push(u(t)+"="+u(e)))})),i.join("&")}return u(t)+"="+u(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var c=/\/?$/;function m(e,t,n,i){var a=i&&i.options.stringifyQuery,r=t.query||{};try{r=f(r)}catch(e){}var o={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:r,params:t.params||{},fullPath:v(t,a),matched:e?T(e):[]};return n&&(o.redirectedFrom=v(n,a)),Object.freeze(o)}function f(e){if(Array.isArray(e))return e.map(f);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=f(e[n]);return t}return e}var h=m(null,{path:"/"});function T(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function v(e,t){var n=e.path,i=e.query;void 0===i&&(i={});var a=e.hash;return void 0===a&&(a=""),(n||"/")+(t||y)(i)+a}function b(e,t,n){return t===h?e===t:!!t&&(e.path&&t.path?e.path.replace(c,"")===t.path.replace(c,"")&&(n||e.hash===t.hash&&g(e.query,t.query)):!(!e.name||!t.name)&&(e.name===t.name&&(n||e.hash===t.hash&&g(e.query,t.query)&&g(e.params,t.params))))}function g(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),i=Object.keys(t).sort();return n.length===i.length&&n.every((function(n,a){var r=e[n];if(i[a]!==n)return!1;var o=t[n];return null==r||null==o?r===o:"object"==typeof r&&"object"==typeof o?g(r,o):String(r)===String(o)}))}function w(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var i in n.instances){var a=n.instances[i],r=n.enteredCbs[i];if(a&&r){delete n.enteredCbs[i];for(var o=0;o<r.length;o++)a._isBeingDestroyed||r[o](a)}}}}var k={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,i=t.children,r=t.parent,o=t.data;o.routerView=!0;for(var s=r.$createElement,u=n.name,p=r.$route,l=r._routerViewCache||(r._routerViewCache={}),d=0,y=!1;r&&r._routerRoot!==r;){var c=r.$vnode?r.$vnode.data:{};c.routerView&&d++,c.keepAlive&&r._directInactive&&r._inactive&&(y=!0),r=r.$parent}if(o.routerViewDepth=d,y){var m=l[u],f=m&&m.component;return f?(m.configProps&&x(f,o,m.route,m.configProps),s(f,o,i)):s()}var h=p.matched[d],T=h&&h.components[u];if(!h||!T)return l[u]=null,s();l[u]={component:T},o.registerRouteInstance=function(e,t){var n=h.instances[u];(t&&n!==e||!t&&n===e)&&(h.instances[u]=t)},(o.hook||(o.hook={})).prepatch=function(e,t){h.instances[u]=t.componentInstance},o.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==h.instances[u]&&(h.instances[u]=e.componentInstance),w(p)};var v=h.props&&h.props[u];return v&&(a(l[u],{route:p,configProps:v}),x(T,o,p,v)),s(T,o,i)}};function x(e,t,n,i){var r=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,i);if(r){r=t.props=a({},r);var o=t.attrs=t.attrs||{};for(var s in r)e.props&&s in e.props||(o[s]=r[s],delete r[s])}}function M(e,t,n){var i=e.charAt(0);if("/"===i)return e;if("?"===i||"#"===i)return t+e;var a=t.split("/");n&&a[a.length-1]||a.pop();for(var r=e.replace(/^\//,"").split("/"),o=0;o<r.length;o++){var s=r[o];".."===s?a.pop():"."!==s&&a.push(s)}return""!==a[0]&&a.unshift(""),a.join("/")}function R(e){return e.replace(/\/\//g,"/")}var I=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},S=$,C=E,A=function(e,t){return L(E(e,t),t)},P=L,_=z,O=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function E(e,t){for(var n,i=[],a=0,r=0,o="",s=t&&t.delimiter||"/";null!=(n=O.exec(e));){var u=n[0],p=n[1],l=n.index;if(o+=e.slice(r,l),r=l+u.length,p)o+=p[1];else{var d=e[r],y=n[2],c=n[3],m=n[4],f=n[5],h=n[6],T=n[7];o&&(i.push(o),o="");var v=null!=y&&null!=d&&d!==y,b="+"===h||"*"===h,g="?"===h||"*"===h,w=n[2]||s,k=m||f;i.push({name:c||a++,prefix:y||"",delimiter:w,optional:g,repeat:b,partial:v,asterisk:!!T,pattern:k?q(k):T?".*":"[^"+F(w)+"]+?"})}}return r<e.length&&(o+=e.substr(r)),o&&i.push(o),i}function D(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function L(e,t){for(var n=new Array(e.length),i=0;i<e.length;i++)"object"==typeof e[i]&&(n[i]=new RegExp("^(?:"+e[i].pattern+")$",H(t)));return function(t,i){for(var a="",r=t||{},o=(i||{}).pretty?D:encodeURIComponent,s=0;s<e.length;s++){var u=e[s];if("string"!=typeof u){var p,l=r[u.name];if(null==l){if(u.optional){u.partial&&(a+=u.prefix);continue}throw new TypeError('Expected "'+u.name+'" to be defined')}if(I(l)){if(!u.repeat)throw new TypeError('Expected "'+u.name+'" to not repeat, but received `'+JSON.stringify(l)+"`");if(0===l.length){if(u.optional)continue;throw new TypeError('Expected "'+u.name+'" to not be empty')}for(var d=0;d<l.length;d++){if(p=o(l[d]),!n[s].test(p))throw new TypeError('Expected all "'+u.name+'" to match "'+u.pattern+'", but received `'+JSON.stringify(p)+"`");a+=(0===d?u.prefix:u.delimiter)+p}}else{if(p=u.asterisk?encodeURI(l).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):o(l),!n[s].test(p))throw new TypeError('Expected "'+u.name+'" to match "'+u.pattern+'", but received "'+p+'"');a+=u.prefix+p}}else a+=u}return a}}function F(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function q(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function U(e,t){return e.keys=t,e}function H(e){return e&&e.sensitive?"":"i"}function z(e,t,n){I(t)||(n=t||n,t=[]);for(var i=(n=n||{}).strict,a=!1!==n.end,r="",o=0;o<e.length;o++){var s=e[o];if("string"==typeof s)r+=F(s);else{var u=F(s.prefix),p="(?:"+s.pattern+")";t.push(s),s.repeat&&(p+="(?:"+u+p+")*"),r+=p=s.optional?s.partial?u+"("+p+")?":"(?:"+u+"("+p+"))?":u+"("+p+")"}}var l=F(n.delimiter||"/"),d=r.slice(-l.length)===l;return i||(r=(d?r.slice(0,-l.length):r)+"(?:"+l+"(?=$))?"),r+=a?"$":i&&d?"":"(?="+l+"|$)",U(new RegExp("^"+r,H(n)),t)}function $(e,t,n){return I(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var i=0;i<n.length;i++)t.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return U(e,t)}(e,t):I(e)?function(e,t,n){for(var i=[],a=0;a<e.length;a++)i.push($(e[a],t,n).source);return U(new RegExp("(?:"+i.join("|")+")",H(n)),t)}(e,t,n):function(e,t,n){return z(E(e,n),t,n)}(e,t,n)}S.parse=C,S.compile=A,S.tokensToFunction=P,S.tokensToRegExp=_;var B=Object.create(null);function N(e,t,n){t=t||{};try{var i=B[e]||(B[e]=S.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),i(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function V(e,t,n,i){var r="string"==typeof e?{path:e}:e;if(r._normalized)return r;if(r.name){var o=(r=a({},e)).params;return o&&"object"==typeof o&&(r.params=a({},o)),r}if(!r.path&&r.params&&t){(r=a({},r))._normalized=!0;var s=a(a({},t.params),r.params);if(t.name)r.name=t.name,r.params=s;else if(t.matched.length){var u=t.matched[t.matched.length-1].path;r.path=N(u,s,t.path)}else 0;return r}var p=function(e){var t="",n="",i=e.indexOf("#");i>=0&&(t=e.slice(i),e=e.slice(0,i));var a=e.indexOf("?");return a>=0&&(n=e.slice(a+1),e=e.slice(0,a)),{path:e,query:n,hash:t}}(r.path||""),y=t&&t.path||"/",c=p.path?M(p.path,y,n||r.append):y,m=function(e,t,n){void 0===t&&(t={});var i,a=n||d;try{i=a(e||"")}catch(e){i={}}for(var r in t){var o=t[r];i[r]=Array.isArray(o)?o.map(l):l(o)}return i}(p.query,r.query,i&&i.options.parseQuery),f=r.hash||p.hash;return f&&"#"!==f.charAt(0)&&(f="#"+f),{_normalized:!0,path:c,query:m,hash:f}}var j,G=function(){},W={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,i=this.$route,r=n.resolve(this.to,i,this.append),o=r.location,s=r.route,u=r.href,p={},l=n.options.linkActiveClass,d=n.options.linkExactActiveClass,y=null==l?"router-link-active":l,f=null==d?"router-link-exact-active":d,h=null==this.activeClass?y:this.activeClass,T=null==this.exactActiveClass?f:this.exactActiveClass,v=s.redirectedFrom?m(null,V(s.redirectedFrom),null,n):s;p[T]=b(i,v,this.exactPath),p[h]=this.exact||this.exactPath?p[T]:function(e,t){return 0===e.path.replace(c,"/").indexOf(t.path.replace(c,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(i,v);var g=p[T]?this.ariaCurrentValue:null,w=function(e){K(e)&&(t.replace?n.replace(o,G):n.push(o,G))},k={click:K};Array.isArray(this.event)?this.event.forEach((function(e){k[e]=w})):k[this.event]=w;var x={class:p},M=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:u,route:s,navigate:w,isActive:p[h],isExactActive:p[T]});if(M){if(1===M.length)return M[0];if(M.length>1||!M.length)return 0===M.length?e():e("span",{},M)}if("a"===this.tag)x.on=k,x.attrs={href:u,"aria-current":g};else{var R=function e(t){var n;if(t)for(var i=0;i<t.length;i++){if("a"===(n=t[i]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(R){R.isStatic=!1;var I=R.data=a({},R.data);for(var S in I.on=I.on||{},I.on){var C=I.on[S];S in k&&(I.on[S]=Array.isArray(C)?C:[C])}for(var A in k)A in I.on?I.on[A].push(k[A]):I.on[A]=w;var P=R.data.attrs=a({},R.data.attrs);P.href=u,P["aria-current"]=g}else x.on=k}return e(this.tag,x,this.$slots.default)}};function K(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var J="undefined"!=typeof window;function Y(e,t,n,i,a){var r=t||[],o=n||Object.create(null),s=i||Object.create(null);e.forEach((function(e){!function e(t,n,i,a,r,o){var s=a.path,u=a.name;0;var p=a.pathToRegexpOptions||{},l=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return R(t.path+"/"+e)}(s,r,p.strict);"boolean"==typeof a.caseSensitive&&(p.sensitive=a.caseSensitive);var d={path:l,regex:X(l,p),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:u,parent:r,matchAs:o,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var r=o?R(o+"/"+a.path):void 0;e(t,n,i,a,d,r)}));n[d.path]||(t.push(d.path),n[d.path]=d);if(void 0!==a.alias)for(var y=Array.isArray(a.alias)?a.alias:[a.alias],c=0;c<y.length;++c){0;var m={path:y[c],children:a.children};e(t,n,i,m,r,d.path||"/")}u&&(i[u]||(i[u]=d))}(r,o,s,e,a)}));for(var u=0,p=r.length;u<p;u++)"*"===r[u]&&(r.push(r.splice(u,1)[0]),p--,u--);return{pathList:r,pathMap:o,nameMap:s}}function X(e,t){return S(e,[],t)}function Z(e,t){var n=Y(e),i=n.pathList,a=n.pathMap,r=n.nameMap;function o(e,n,o){var s=V(e,n,!1,t),p=s.name;if(p){var l=r[p];if(!l)return u(null,s);var d=l.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),n&&"object"==typeof n.params)for(var y in n.params)!(y in s.params)&&d.indexOf(y)>-1&&(s.params[y]=n.params[y]);return s.path=N(l.path,s.params),u(l,s,o)}if(s.path){s.params={};for(var c=0;c<i.length;c++){var m=i[c],f=a[m];if(Q(f.regex,s.path,s.params))return u(f,s,o)}}return u(null,s)}function s(e,n){var i=e.redirect,a="function"==typeof i?i(m(e,n,null,t)):i;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return u(null,n);var s=a,p=s.name,l=s.path,d=n.query,y=n.hash,c=n.params;if(d=s.hasOwnProperty("query")?s.query:d,y=s.hasOwnProperty("hash")?s.hash:y,c=s.hasOwnProperty("params")?s.params:c,p){r[p];return o({_normalized:!0,name:p,query:d,hash:y,params:c},void 0,n)}if(l){var f=function(e,t){return M(e,t.parent?t.parent.path:"/",!0)}(l,e);return o({_normalized:!0,path:N(f,c),query:d,hash:y},void 0,n)}return u(null,n)}function u(e,n,i){return e&&e.redirect?s(e,i||n):e&&e.matchAs?function(e,t,n){var i=o({_normalized:!0,path:N(n,t.params)});if(i){var a=i.matched,r=a[a.length-1];return t.params=i.params,u(r,t)}return u(null,t)}(0,n,e.matchAs):m(e,n,i,t)}return{match:o,addRoute:function(e,t){var n="object"!=typeof e?r[e]:void 0;Y([t||e],i,a,r,n),n&&n.alias.length&&Y(n.alias.map((function(e){return{path:e,children:[t]}})),i,a,r,n)},getRoutes:function(){return i.map((function(e){return a[e]}))},addRoutes:function(e){Y(e,i,a,r)}}}function Q(e,t,n){var i=t.match(e);if(!i)return!1;if(!n)return!0;for(var a=1,r=i.length;a<r;++a){var o=e.keys[a-1];o&&(n[o.name||"pathMatch"]="string"==typeof i[a]?p(i[a]):i[a])}return!0}var ee=J&&window.performance&&window.performance.now?window.performance:Date;function te(){return ee.now().toFixed(3)}var ne=te();function ie(){return ne}function ae(e){return ne=e}var re=Object.create(null);function oe(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=a({},window.history.state);return n.key=ie(),window.history.replaceState(n,"",t),window.addEventListener("popstate",pe),function(){window.removeEventListener("popstate",pe)}}function se(e,t,n,i){if(e.app){var a=e.options.scrollBehavior;a&&e.app.$nextTick((function(){var r=function(){var e=ie();if(e)return re[e]}(),o=a.call(e,t,n,i?r:null);o&&("function"==typeof o.then?o.then((function(e){me(e,r)})).catch((function(e){0})):me(o,r))}))}}function ue(){var e=ie();e&&(re[e]={x:window.pageXOffset,y:window.pageYOffset})}function pe(e){ue(),e.state&&e.state.key&&ae(e.state.key)}function le(e){return ye(e.x)||ye(e.y)}function de(e){return{x:ye(e.x)?e.x:window.pageXOffset,y:ye(e.y)?e.y:window.pageYOffset}}function ye(e){return"number"==typeof e}var ce=/^#\d/;function me(e,t){var n,i="object"==typeof e;if(i&&"string"==typeof e.selector){var a=ce.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(a){var r=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),i=e.getBoundingClientRect();return{x:i.left-n.left-t.x,y:i.top-n.top-t.y}}(a,r={x:ye((n=r).x)?n.x:0,y:ye(n.y)?n.y:0})}else le(e)&&(t=de(e))}else i&&le(e)&&(t=de(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var fe,he=J&&((-1===(fe=window.navigator.userAgent).indexOf("Android 2.")&&-1===fe.indexOf("Android 4.0")||-1===fe.indexOf("Mobile Safari")||-1!==fe.indexOf("Chrome")||-1!==fe.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function Te(e,t){ue();var n=window.history;try{if(t){var i=a({},n.state);i.key=ie(),n.replaceState(i,"",e)}else n.pushState({key:ae(te())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function ve(e){Te(e,!0)}function be(e,t,n){var i=function(a){a>=e.length?n():e[a]?t(e[a],(function(){i(a+1)})):i(a+1)};i(0)}var ge={redirected:2,aborted:4,cancelled:8,duplicated:16};function we(e,t){return xe(e,t,ge.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return Me.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function ke(e,t){return xe(e,t,ge.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function xe(e,t,n,i){var a=new Error(i);return a._isRouter=!0,a.from=e,a.to=t,a.type=n,a}var Me=["params","query","hash"];function Re(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Ie(e,t){return Re(e)&&e._isRouter&&(null==t||e.type===t)}function Se(e){return function(t,n,i){var a=!1,r=0,o=null;Ce(e,(function(e,t,n,s){if("function"==typeof e&&void 0===e.cid){a=!0,r++;var u,p=_e((function(t){var a;((a=t).__esModule||Pe&&"Module"===a[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:j.extend(t),n.components[s]=t,--r<=0&&i()})),l=_e((function(e){var t="Failed to resolve async component "+s+": "+e;o||(o=Re(e)?e:new Error(t),i(o))}));try{u=e(p,l)}catch(e){l(e)}if(u)if("function"==typeof u.then)u.then(p,l);else{var d=u.component;d&&"function"==typeof d.then&&d.then(p,l)}}})),a||i()}}function Ce(e,t){return Ae(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function Ae(e){return Array.prototype.concat.apply([],e)}var Pe="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function _e(e){var t=!1;return function(){for(var n=[],i=arguments.length;i--;)n[i]=arguments[i];if(!t)return t=!0,e.apply(this,n)}}var Oe=function(e,t){this.router=e,this.base=function(e){if(!e)if(J){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=h,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Ee(e,t,n,i){var a=Ce(e,(function(e,i,a,r){var o=function(e,t){"function"!=typeof e&&(e=j.extend(e));return e.options[t]}(e,t);if(o)return Array.isArray(o)?o.map((function(e){return n(e,i,a,r)})):n(o,i,a,r)}));return Ae(i?a.reverse():a)}function De(e,t){if(t)return function(){return e.apply(t,arguments)}}Oe.prototype.listen=function(e){this.cb=e},Oe.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},Oe.prototype.onError=function(e){this.errorCbs.push(e)},Oe.prototype.transitionTo=function(e,t,n){var i,a=this;try{i=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var r=this.current;this.confirmTransition(i,(function(){a.updateRoute(i),t&&t(i),a.ensureURL(),a.router.afterHooks.forEach((function(e){e&&e(i,r)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(e){e(i)})))}),(function(e){n&&n(e),e&&!a.ready&&(Ie(e,ge.redirected)&&r===h||(a.ready=!0,a.readyErrorCbs.forEach((function(t){t(e)}))))}))},Oe.prototype.confirmTransition=function(e,t,n){var i=this,a=this.current;this.pending=e;var r,o,s=function(e){!Ie(e)&&Re(e)&&(i.errorCbs.length?i.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},u=e.matched.length-1,p=a.matched.length-1;if(b(e,a)&&u===p&&e.matched[u]===a.matched[p])return this.ensureURL(),s(((o=xe(r=a,e,ge.duplicated,'Avoided redundant navigation to current location: "'+r.fullPath+'".')).name="NavigationDuplicated",o));var l=function(e,t){var n,i=Math.max(e.length,t.length);for(n=0;n<i&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),d=l.updated,y=l.deactivated,c=l.activated,m=[].concat(function(e){return Ee(e,"beforeRouteLeave",De,!0)}(y),this.router.beforeHooks,function(e){return Ee(e,"beforeRouteUpdate",De)}(d),c.map((function(e){return e.beforeEnter})),Se(c)),f=function(t,n){if(i.pending!==e)return s(ke(a,e));try{t(e,a,(function(t){!1===t?(i.ensureURL(!0),s(function(e,t){return xe(e,t,ge.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(a,e))):Re(t)?(i.ensureURL(!0),s(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(s(we(a,e)),"object"==typeof t&&t.replace?i.replace(t):i.push(t)):n(t)}))}catch(e){s(e)}};be(m,f,(function(){be(function(e){return Ee(e,"beforeRouteEnter",(function(e,t,n,i){return function(e,t,n){return function(i,a,r){return e(i,a,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),r(e)}))}}(e,n,i)}))}(c).concat(i.router.resolveHooks),f,(function(){if(i.pending!==e)return s(ke(a,e));i.pending=null,t(e),i.router.app&&i.router.app.$nextTick((function(){w(e)}))}))}))},Oe.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Oe.prototype.setupListeners=function(){},Oe.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=h,this.pending=null};var Le=function(e){function t(t,n){e.call(this,t,n),this._startLocation=Fe(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,i=he&&n;i&&this.listeners.push(oe());var a=function(){var n=e.current,a=Fe(e.base);e.current===h&&a===e._startLocation||e.transitionTo(a,(function(e){i&&se(t,e,n,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var i=this,a=this.current;this.transitionTo(e,(function(e){Te(R(i.base+e.fullPath)),se(i.router,e,a,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var i=this,a=this.current;this.transitionTo(e,(function(e){ve(R(i.base+e.fullPath)),se(i.router,e,a,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(Fe(this.base)!==this.current.fullPath){var t=R(this.base+this.current.fullPath);e?Te(t):ve(t)}},t.prototype.getCurrentLocation=function(){return Fe(this.base)},t}(Oe);function Fe(e){var t=window.location.pathname,n=t.toLowerCase(),i=e.toLowerCase();return!e||n!==i&&0!==n.indexOf(R(i+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var qe=function(e){function t(t,n,i){e.call(this,t,n),i&&function(e){var t=Fe(e);if(!/^\/#/.test(t))return window.location.replace(R(e+"/#"+t)),!0}(this.base)||Ue()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=he&&t;n&&this.listeners.push(oe());var i=function(){var t=e.current;Ue()&&e.transitionTo(He(),(function(i){n&&se(e.router,i,t,!0),he||Be(i.fullPath)}))},a=he?"popstate":"hashchange";window.addEventListener(a,i),this.listeners.push((function(){window.removeEventListener(a,i)}))}},t.prototype.push=function(e,t,n){var i=this,a=this.current;this.transitionTo(e,(function(e){$e(e.fullPath),se(i.router,e,a,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var i=this,a=this.current;this.transitionTo(e,(function(e){Be(e.fullPath),se(i.router,e,a,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;He()!==t&&(e?$e(t):Be(t))},t.prototype.getCurrentLocation=function(){return He()},t}(Oe);function Ue(){var e=He();return"/"===e.charAt(0)||(Be("/"+e),!1)}function He(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function ze(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function $e(e){he?Te(ze(e)):window.location.hash=e}function Be(e){he?ve(ze(e)):window.location.replace(ze(e))}var Ne=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var i=this;this.transitionTo(e,(function(e){i.stack=i.stack.slice(0,i.index+1).concat(e),i.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var i=this;this.transitionTo(e,(function(e){i.stack=i.stack.slice(0,i.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var i=this.stack[n];this.confirmTransition(i,(function(){var e=t.current;t.index=n,t.updateRoute(i),t.router.afterHooks.forEach((function(t){t&&t(i,e)}))}),(function(e){Ie(e,ge.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(Oe),Ve=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Z(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!he&&!1!==e.fallback,this.fallback&&(t="hash"),J||(t="abstract"),this.mode=t,t){case"history":this.history=new Le(this,e.base);break;case"hash":this.history=new qe(this,e.base,this.fallback);break;case"abstract":this.history=new Ne(this,e.base);break;default:0}},je={currentRoute:{configurable:!0}};function Ge(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}Ve.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},je.currentRoute.get=function(){return this.history&&this.history.current},Ve.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof Le||n instanceof qe){var i=function(e){n.setupListeners(),function(e){var i=n.current,a=t.options.scrollBehavior;he&&a&&"fullPath"in e&&se(t,e,i,!1)}(e)};n.transitionTo(n.getCurrentLocation(),i,i)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},Ve.prototype.beforeEach=function(e){return Ge(this.beforeHooks,e)},Ve.prototype.beforeResolve=function(e){return Ge(this.resolveHooks,e)},Ve.prototype.afterEach=function(e){return Ge(this.afterHooks,e)},Ve.prototype.onReady=function(e,t){this.history.onReady(e,t)},Ve.prototype.onError=function(e){this.history.onError(e)},Ve.prototype.push=function(e,t,n){var i=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){i.history.push(e,t,n)}));this.history.push(e,t,n)},Ve.prototype.replace=function(e,t,n){var i=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){i.history.replace(e,t,n)}));this.history.replace(e,t,n)},Ve.prototype.go=function(e){this.history.go(e)},Ve.prototype.back=function(){this.go(-1)},Ve.prototype.forward=function(){this.go(1)},Ve.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},Ve.prototype.resolve=function(e,t,n){var i=V(e,t=t||this.history.current,n,this),a=this.match(i,t),r=a.redirectedFrom||a.fullPath;return{location:i,route:a,href:function(e,t,n){var i="hash"===n?"#"+t:t;return e?R(e+"/"+i):i}(this.history.base,r,this.mode),normalizedTo:i,resolved:a}},Ve.prototype.getRoutes=function(){return this.matcher.getRoutes()},Ve.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==h&&this.history.transitionTo(this.history.getCurrentLocation())},Ve.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==h&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Ve.prototype,je),Ve.install=function e(t){if(!e.installed||j!==t){e.installed=!0,j=t;var n=function(e){return void 0!==e},i=function(e,t){var i=e.$options._parentVnode;n(i)&&n(i=i.data)&&n(i=i.registerRouteInstance)&&i(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,i(this,this)},destroyed:function(){i(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",k),t.component("RouterLink",W);var a=t.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},Ve.version="3.5.2",Ve.isNavigationFailure=Ie,Ve.NavigationFailureType=ge,Ve.START_LOCATION=h,J&&window.Vue&&window.Vue.use(Ve);var We=Ve,Ke=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"min-h-screen bg-gray-100 px-4 pt-6"},[t("router-view")],1)};Ke._withStripped=!0;n(4);function Je(e,t,n,i,a,r,o,s){var u,p="function"==typeof e?e.options:e;if(t&&(p.render=t,p.staticRenderFns=n,p._compiled=!0),i&&(p.functional=!0),r&&(p._scopeId="data-v-"+r),o?(u=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),a&&a.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},p._ssrRegister=u):a&&(u=s?function(){a.call(this,(p.functional?this.parent:this).$root.$options.shadowRoot)}:a),u)if(p.functional){p._injectStyles=u;var l=p.render;p.render=function(e,t){return u.call(t),l(e,t)}}else{var d=p.beforeCreate;p.beforeCreate=d?[].concat(d,u):[u]}return{exports:e,options:p}}var Ye=Je({},Ke,[],!1,null,null,null);Ye.options.__file="node_modules/hardhat-docgen/src/App.vue";var Xe=Ye.exports,Ze=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("HeaderBar"),e._v(" "),n("div",{staticClass:"pb-32"},[n("div",{staticClass:"space-y-4"},[n("span",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.source)+"\n      ")]),e._v(" "),n("h1",{staticClass:"text-xl"},[e._v("\n        "+e._s(e.json.name)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.title)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.author)+"\n      ")]),e._v(" "),n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))])]),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.hasOwnProperty("constructor")?n("Member",{attrs:{json:e.json.constructor}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.receive?n("Member",{attrs:{json:e.json.receive}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.fallback?n("Member",{attrs:{json:e.json.fallback}}):e._e()],1),e._v(" "),e.json.events?n("MemberSet",{attrs:{title:"Events",json:e.json.events}}):e._e(),e._v(" "),e.json.stateVariables?n("MemberSet",{attrs:{title:"State Variables",json:e.json.stateVariables}}):e._e(),e._v(" "),e.json.methods?n("MemberSet",{attrs:{title:"Methods",json:e.json.methods}}):e._e()],1),e._v(" "),n("FooterBar")],1)};Ze._withStripped=!0;var Qe=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"bg-gray-100 fixed bottom-0 right-0 w-full border-t border-dashed border-gray-300"},[n("div",{staticClass:"w-full text-center py-2 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("button",{staticClass:"py-1 px-2 text-gray-500",on:{click:function(t){return e.openLink(e.repository)}}},[e._v("\n      built with "+e._s(e.name)+"\n    ")])])])};Qe._withStripped=!0;var et=n(2),tt=Je({data:function(){return{repository:et.b,name:et.a}},methods:{openLink(e){window.open(e,"_blank")}}},Qe,[],!1,null,null,null);tt.options.__file="node_modules/hardhat-docgen/src/components/FooterBar.vue";var nt=tt.exports,it=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"w-full border-b border-dashed py-2 border-gray-300"},[t("router-link",{staticClass:"py-2 text-gray-500",attrs:{to:"/"}},[this._v("\n    <- Go back\n  ")])],1)};it._withStripped=!0;var at=Je({},it,[],!1,null,null,null);at.options.__file="node_modules/hardhat-docgen/src/components/HeaderBar.vue";var rt=at.exports,ot=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"border-2 border-gray-400 border-dashed w-full p-2"},[n("h3",{staticClass:"text-lg pb-2 mb-2 border-b-2 border-gray-400 border-dashed"},[e._v("\n    "+e._s(e.name)+" "+e._s(e.keywords)+" "+e._s(e.inputSignature)+"\n  ")]),e._v(" "),n("div",{staticClass:"space-y-3"},[n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))]),e._v(" "),n("MemberSection",{attrs:{name:"Parameters",items:e.inputs}}),e._v(" "),n("MemberSection",{attrs:{name:"Return Values",items:e.outputs}})],1)])};ot._withStripped=!0;var st=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.items.length>0?n("ul",[n("h4",{staticClass:"text-lg"},[e._v("\n    "+e._s(e.name)+"\n  ")]),e._v(" "),e._l(e.items,(function(t,i){return n("li",{key:i},[n("span",{staticClass:"bg-gray-300"},[e._v(e._s(t.type))]),e._v(" "),n("b",[e._v(e._s(t.name||"_"+i))]),t.desc?n("span",[e._v(": "),n("i",[e._v(e._s(t.desc))])]):e._e()])}))],2):e._e()};st._withStripped=!0;var ut=Je({props:{name:{type:String,default:""},items:{type:Array,default:()=>new Array}}},st,[],!1,null,null,null);ut.options.__file="node_modules/hardhat-docgen/src/components/MemberSection.vue";var pt=Je({components:{MemberSection:ut.exports},props:{json:{type:Object,default:()=>new Object}},computed:{name:function(){return this.json.name||this.json.type},keywords:function(){let e=[];return this.json.stateMutability&&e.push(this.json.stateMutability),"true"===this.json.anonymous&&e.push("anonymous"),e.join(" ")},params:function(){return this.json.params||{}},returns:function(){return this.json.returns||{}},inputs:function(){return(this.json.inputs||[]).map(e=>({...e,desc:this.params[e.name]}))},inputSignature:function(){return`(${this.inputs.map(e=>e.type).join(",")})`},outputs:function(){return(this.json.outputs||[]).map((e,t)=>({...e,desc:this.returns[e.name||"_"+t]}))},outputSignature:function(){return`(${this.outputs.map(e=>e.type).join(",")})`}}},ot,[],!1,null,null,null);pt.options.__file="node_modules/hardhat-docgen/src/components/Member.vue";var lt=pt.exports,dt=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full mt-8"},[n("h2",{staticClass:"text-lg"},[e._v(e._s(e.title))]),e._v(" "),e._l(Object.keys(e.json),(function(t){return n("Member",{key:t,staticClass:"mt-3",attrs:{json:e.json[t]}})}))],2)};dt._withStripped=!0;var yt=Je({components:{Member:lt},props:{title:{type:String,default:""},json:{type:Object,default:()=>new Object}}},dt,[],!1,null,null,null);yt.options.__file="node_modules/hardhat-docgen/src/components/MemberSet.vue";var ct=Je({components:{Member:lt,MemberSet:yt.exports,HeaderBar:rt,FooterBar:nt},props:{json:{type:Object,default:()=>new Object}}},Ze,[],!1,null,null,null);ct.options.__file="node_modules/hardhat-docgen/src/components/Contract.vue";var mt=ct.exports,ft=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto pb-32"},[t("Branch",{attrs:{json:this.trees,name:"Sources:"}}),this._v(" "),t("FooterBar",{staticClass:"mt-20"})],1)};ft._withStripped=!0;var ht=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e._v("\n  "+e._s(e.name)+"\n  "),Array.isArray(e.json)?n("div",{staticClass:"pl-5"},e._l(e.json,(function(t,i){return n("div",{key:i},[n("router-link",{attrs:{to:t.source+":"+t.name}},[e._v("\n        "+e._s(t.name)+"\n      ")])],1)})),0):n("div",{staticClass:"pl-5"},e._l(Object.keys(e.json),(function(t){return n("div",{key:t},[n("Branch",{attrs:{json:e.json[t],name:t}})],1)})),0)])};ht._withStripped=!0;var Tt=Je({name:"Branch",props:{name:{type:String,default:null},json:{type:[Object,Array],default:()=>new Object}}},ht,[],!1,null,null,null);Tt.options.__file="node_modules/hardhat-docgen/src/components/Branch.vue";var vt=Je({components:{Branch:Tt.exports,FooterBar:nt},props:{json:{type:Object,default:()=>new Object}},computed:{trees:function(){let e={};for(let t in this.json)t.split(/(?<=\/)/).reduce(function(e,n){if(!n.includes(":"))return e[n]=e[n]||{},e[n];{let[i]=n.split(":");e[i]=e[i]||[],e[i].push(this.json[t])}}.bind(this),e);return e}}},ft,[],!1,null,null,null);vt.options.__file="node_modules/hardhat-docgen/src/components/Index.vue";var bt=vt.exports;i.a.use(We);const gt={"contracts/BondingCurve/ETHBondingCurve.sol:ETHBondingCurve":{source:"contracts/BondingCurve/ETHBondingCurve.sol",name:"ETHBondingCurve",constructor:{inputs:[{internalType:"contract IERC20",name:"_token",type:"address"},{internalType:"uint256",name:"k",type:"uint256"},{internalType:"uint256",name:"startPrice",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Bought(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"ethAmount",type:"uint256"}],name:"Bought",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"Sold(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"ethAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"comission",type:"uint256"}],name:"Sold",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"K()":{inputs:[],name:"K",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"LBC_ADMIN_ROLE()":{inputs:[],name:"LBC_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"START_PRICE()":{inputs:[],name:"START_PRICE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"buy(uint256)":{inputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"buy",outputs:[],stateMutability:"payable",type:"function"},"comissionShare()":{inputs:[],name:"comissionShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"destruct()":{inputs:[],name:"destruct",outputs:[],stateMutability:"nonpayable",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"hegicDevelopmentFund()":{inputs:[],name:"hegicDevelopmentFund",outputs:[{internalType:"address payable",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"s(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x0",type:"uint256"},{internalType:"uint256",name:"x1",type:"uint256"}],name:"s",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"sell(uint256)":{inputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"sell",outputs:[],stateMutability:"nonpayable",type:"function"},"setCommissionShare(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setCommissionShare",outputs:[],stateMutability:"nonpayable",type:"function"},"setHDF(address)":{inputs:[{internalType:"address payable",name:"value",type:"address"}],name:"setHDF",outputs:[],stateMutability:"nonpayable",type:"function"},"setParams(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_K",type:"uint256"},{internalType:"uint256",name:"_START_PRICE",type:"uint256"}],name:"setParams",outputs:[],stateMutability:"nonpayable",type:"function"},"soldAmount()":{inputs:[],name:"soldAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"withdawERC20(address)":{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"withdawERC20",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/BondingCurve/Erc20BondingCurve.sol:Erc20BondingCurve":{source:"contracts/BondingCurve/Erc20BondingCurve.sol",name:"Erc20BondingCurve",constructor:{inputs:[{internalType:"contract IERC20",name:"_saleToken",type:"address"},{internalType:"contract IERC20",name:"_purchaseToken",type:"address"},{internalType:"uint256",name:"k",type:"uint256"},{internalType:"uint256",name:"startPrice",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Bought(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"ethAmount",type:"uint256"}],name:"Bought",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"Sold(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"ethAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"comission",type:"uint256"}],name:"Sold",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"K()":{inputs:[],name:"K",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"LBC_ADMIN_ROLE()":{inputs:[],name:"LBC_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"START_PRICE()":{inputs:[],name:"START_PRICE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"buy(uint256)":{inputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"buy",outputs:[],stateMutability:"nonpayable",type:"function"},"comissionShare()":{inputs:[],name:"comissionShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"destruct()":{inputs:[],name:"destruct",outputs:[],stateMutability:"nonpayable",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"hegicDevelopmentFund()":{inputs:[],name:"hegicDevelopmentFund",outputs:[{internalType:"address payable",name:"",type:"address"}],stateMutability:"view",type:"function"},"purchaseToken()":{inputs:[],name:"purchaseToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"s(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x0",type:"uint256"},{internalType:"uint256",name:"x1",type:"uint256"}],name:"s",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"saleToken()":{inputs:[],name:"saleToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"sell(uint256)":{inputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"sell",outputs:[],stateMutability:"nonpayable",type:"function"},"setCommissionShare(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setCommissionShare",outputs:[],stateMutability:"nonpayable",type:"function"},"setHDF(address)":{inputs:[{internalType:"address payable",name:"value",type:"address"}],name:"setHDF",outputs:[],stateMutability:"nonpayable",type:"function"},"setParams(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_K",type:"uint256"},{internalType:"uint256",name:"_START_PRICE",type:"uint256"}],name:"setParams",outputs:[],stateMutability:"nonpayable",type:"function"},"soldAmount()":{inputs:[],name:"soldAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"withdawERC20(address)":{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"withdawERC20",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/BondingCurve/IBondingCurve.sol:IETHBondingCurve":{source:"contracts/BondingCurve/IBondingCurve.sol",name:"IETHBondingCurve",methods:{"buy(uint256)":{inputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"buy",outputs:[],stateMutability:"payable",type:"function"},"sell(uint256)":{inputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"sell",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/BondingCurve/IBondingCurve.sol:IErc20BondingCurve":{source:"contracts/BondingCurve/IBondingCurve.sol",name:"IErc20BondingCurve",methods:{"buy(uint256)":{inputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"buy",outputs:[],stateMutability:"nonpayable",type:"function"},"sell(uint256)":{inputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"sell",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/BondingCurve/Linear.sol:LinearBondingCurve":{source:"contracts/BondingCurve/Linear.sol",name:"LinearBondingCurve",constructor:{inputs:[{internalType:"uint256",name:"k",type:"uint256"},{internalType:"uint256",name:"startPrice",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"K()":{inputs:[],name:"K",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"LBC_ADMIN_ROLE()":{inputs:[],name:"LBC_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"START_PRICE()":{inputs:[],name:"START_PRICE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"s(uint256,uint256)":{inputs:[{internalType:"uint256",name:"x0",type:"uint256"},{internalType:"uint256",name:"x1",type:"uint256"}],name:"s",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"setParams(uint256,uint256)":{inputs:[{internalType:"uint256",name:"_K",type:"uint256"},{internalType:"uint256",name:"_START_PRICE",type:"uint256"}],name:"setParams",outputs:[],stateMutability:"nonpayable",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."}}},"contracts/BondingCurve/buysell.sol:BuySell":{source:"contracts/BondingCurve/buysell.sol",name:"BuySell",constructor:{inputs:[{internalType:"contract IErc20BondingCurve",name:"_usdc20BondingCurve",type:"address"},{internalType:"contract IETHBondingCurve",name:"_ethBondingCurve",type:"address"}],stateMutability:"nonpayable",type:"constructor"},methods:{"buysellInOneTxnETH(uint256)":{inputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"buysellInOneTxnETH",outputs:[],stateMutability:"payable",type:"function"},"buysellInOneTxnUSDC(uint256)":{inputs:[{internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"buysellInOneTxnUSDC",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/Facade/Facade.sol:Facade":{source:"contracts/Facade/Facade.sol",name:"Facade",title:"Hegic Protocol V8888 Facade Contract",author:"0mllwntrmt3",notice:"The contract that calculates the options prices, conducts the process of buying options, converts the premiums into the token that the pool is denominated in and grants permissions to the contracts such as GSN (Gas Station Network).*",constructor:{inputs:[{internalType:"contract IWETH",name:"weth",type:"address"},{internalType:"contract IUniswapV2Router01",name:"router",type:"address"},{internalType:"contract IOptionsManager",name:"manager",type:"address"},{internalType:"address",name:"trustedForwarder",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"WETH()":{inputs:[],name:"WETH",outputs:[{internalType:"contract IWETH",name:"",type:"address"}],stateMutability:"view",type:"function"},"_trustedForwarder()":{inputs:[],name:"_trustedForwarder",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"claimAllStakingProfits(address[],address)":{inputs:[{internalType:"contract IHegicStaking[]",name:"stakings",type:"address[]"},{internalType:"address",name:"account",type:"address"}],name:"claimAllStakingProfits",outputs:[],stateMutability:"nonpayable",type:"function"},"createOption(address,uint256,uint256,uint256,address[],uint256)":{inputs:[{internalType:"contract IHegicPool",name:"pool",type:"address"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"},{internalType:"address[]",name:"swappath",type:"address[]"},{internalType:"uint256",name:"acceptablePrice",type:"uint256"}],name:"createOption",outputs:[],stateMutability:"nonpayable",type:"function",params:{acceptablePrice:"The highest acceptable price*",amount:"The option size",period:"The option period",strike:"The option strike"},notice:"Used for buying the option contract and converting the buyer's tokens (the total premium) into the token in which the pool is denominated."},"exchange()":{inputs:[],name:"exchange",outputs:[{internalType:"contract IUniswapV2Router01",name:"",type:"address"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionId",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function"},"getBaseOptionCost(address,uint256,uint256,uint256)":{inputs:[{internalType:"contract IHegicPool",name:"pool",type:"address"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"getBaseOptionCost",outputs:[{internalType:"uint256",name:"total",type:"uint256"},{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period",strike:"The option strike*"},notice:"Used for calculating the option price (the premium) in the token in which the pool is denominated."},"getOptionPrice(address,uint256,uint256,uint256,address[])":{inputs:[{internalType:"contract IHegicPool",name:"pool",type:"address"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"},{internalType:"address[]",name:"swappath",type:"address[]"}],name:"getOptionPrice",outputs:[{internalType:"uint256",name:"total",type:"uint256"},{internalType:"uint256",name:"baseTotal",type:"uint256"},{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",baseTotal:"The part of the premium that is distributed among the liquidity providers",period:"The option period",settlementFee:"The part of the premium that is distributed among the HEGIC staking participants*",strike:"The option strike",total:"The total premium"},notice:"Used for calculating the option price (the premium) and using the swap router (if needed) to convert the tokens with which the user pays the premium into the token in which the pool is denominated."},"isTrustedForwarder(address)":{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",params:{forwarder:"GSN (Gas Station Network) contract address*"},notice:"Used for granting the GSN (Gas Station Network) contract the permission to pay the gas (transaction) fees for the users."},"optionsManager()":{inputs:[],name:"optionsManager",outputs:[{internalType:"contract IOptionsManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"poolApprove(address)":{inputs:[{internalType:"contract IHegicPool",name:"pool",type:"address"}],name:"poolApprove",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Used for approving the pools contracts addresses.*"},"provideEthToPool(address,bool,uint256)":{inputs:[{internalType:"contract IHegicPool",name:"pool",type:"address"},{internalType:"bool",name:"hedged",type:"bool"},{internalType:"uint256",name:"minShare",type:"uint256"}],name:"provideEthToPool",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"payable",type:"function",params:{hedged:"The liquidity tranche type: hedged or unhedged (classic)*"},notice:"Used for converting the liquidity provider's Ether (ETH) into Wrapped Ether (WETH) and providing the funds into the pool."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unlockAll(address,uint256[])":{inputs:[{internalType:"contract IHegicPool",name:"pool",type:"address"},{internalType:"uint256[]",name:"optionIDs",type:"uint256[]"}],name:"unlockAll",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionIDs:"The array of options*"},notice:"Unlocks the array of options."},"versionRecipient()":{inputs:[],name:"versionRecipient",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"}}},"contracts/GradualTokenSwap/GradualTokenSwap.sol:GradualTokenSwap":{source:"contracts/GradualTokenSwap/GradualTokenSwap.sol",name:"GradualTokenSwap",title:"GTS",details:"A token swap contract that gradually releases tokens on its balance",constructor:{inputs:[{internalType:"uint256",name:"_start",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"contract IERC20",name:"_rHEGIC",type:"address"},{internalType:"contract IERC20",name:"_HEGIC",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Withdrawn(address,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdrawn",type:"event"}},methods:{"HEGIC()":{inputs:[],name:"HEGIC",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"available(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"available",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Calculates the amount of tokens that has already been unlocked but hasn't been swapped yet"},"duration()":{inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"provide(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"provide",outputs:[],stateMutability:"nonpayable",type:"function",details:"Provide rHEGIC tokens to the contract for later exchange"},"provided(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"provided",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"rHEGIC()":{inputs:[],name:"rHEGIC",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"recoverERC20(address)":{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"recoverERC20",outputs:[],stateMutability:"nonpayable",type:"function"},"released(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"released",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"start()":{inputs:[],name:"start",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unlocked(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"unlocked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Calculates the total amount of tokens that has already been unlocked"},"withdraw()":{inputs:[],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",details:"Withdraw unlocked user's HEGIC tokens"}}},"contracts/Interfaces/IBlackScholes.sol:IBlackScholes":{source:"contracts/Interfaces/IBlackScholes.sol",name:"IBlackScholes",methods:{"abs(int256)":{inputs:[{internalType:"int256",name:"x",type:"int256"}],name:"abs",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"exp(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"exp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"exp(int256)":{inputs:[{internalType:"int256",name:"x",type:"int256"}],name:"exp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},"optionPrices(uint256,uint256,uint256,uint256,int256)":{inputs:[{internalType:"uint256",name:"timeToExpirySec",type:"uint256"},{internalType:"uint256",name:"volatilityDecimal",type:"uint256"},{internalType:"uint256",name:"spotDecimal",type:"uint256"},{internalType:"uint256",name:"strikeDecimal",type:"uint256"},{internalType:"int256",name:"rateDecimal",type:"int256"}],name:"optionPrices",outputs:[{internalType:"uint256",name:"call",type:"uint256"},{internalType:"uint256",name:"put",type:"uint256"}],stateMutability:"pure",type:"function"},"pricesDeltaStdVega(uint256,uint256,uint256,uint256,int256)":{inputs:[{internalType:"uint256",name:"timeToExpirySec",type:"uint256"},{internalType:"uint256",name:"volatilityDecimal",type:"uint256"},{internalType:"uint256",name:"spotDecimal",type:"uint256"},{internalType:"uint256",name:"strikeDecimal",type:"uint256"},{internalType:"int256",name:"rateDecimal",type:"int256"}],name:"pricesDeltaStdVega",outputs:[{components:[{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"}],internalType:"struct IBlackScholes.PricesDeltaStdVega",name:"",type:"tuple"}],stateMutability:"pure",type:"function"},"sqrt(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"sqrt",outputs:[{internalType:"uint256",name:"y",type:"uint256"}],stateMutability:"pure",type:"function"}}},"contracts/Interfaces/Interfaces.sol:IAtmPremiumCalculator":{source:"contracts/Interfaces/Interfaces.sol",name:"IAtmPremiumCalculator",events:{"SetPolinomCall(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetPolinomCall",type:"event"},"SetPolinomPut(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetPolinomPut",type:"event"}},methods:{"calculateAtmCallPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateAtmCallPremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period",strike:"The option strike*"}},"calculateAtmPutPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateAtmPutPremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/Interfaces/Interfaces.sol:IHegicPool":{source:"contracts/Interfaces/Interfaces.sol",name:"IHegicPool",notice:"The interface for the contract that manages pools and the options parameters,   accumulates the funds from the liquidity providers and makes the withdrawals for them,   sells the options contracts to the options buyers and collateralizes them,   exercises the ITM (in-the-money) options with the unrealized P&L and settles them,   unlocks the expired options and distributes the premiums among the liquidity providers.*",events:{"Acquired(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"}],name:"Acquired",type:"event",params:{id:"The ERC721 token ID linked to the option",premium:"The part of the premium that   is distributed among the liquidity providers*",settlementFee:"The part of the premium that   is distributed among the HEGIC staking participants"}},"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"Exercised(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"profit",type:"uint256"}],name:"Exercised",type:"event",params:{id:"The ERC721 token ID linked to the option",profit:"The profits of the option if exercised*"}},"Expired(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"Expired",type:"event",params:{id:"The ERC721 token ID linked to the option*"}},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},"Withdrawn(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"trancheID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdrawn",type:"event",params:{account:"The liquidity provider's address",trancheID:"The liquidity tranche ID*"}}},methods:{"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the number of tokens in ``owner``'s account."},"calculateTotalPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateTotalPremium",outputs:[{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period",strike:"The option strike*"}},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"The ERC721 token ID linked to the option*"}},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"operator",type:"address"}],stateMutability:"view",type:"function",details:"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"hedgedBalance()":{inputs:[],name:"hedgedBalance",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",returns:{amount:"The hedged liquidity size (protected from the losses on selling the options)*"}},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"lockedAmount()":{inputs:[],name:"lockedAmount",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",returns:{amount:"The total liquidity locked in the pool*"}},"options(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"options",outputs:[{internalType:"enum IHegicPool.OptionState",name:"state",type:"uint8"},{internalType:"uint256",name:"strike",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"expired",type:"uint256"},{internalType:"uint256",name:"hedgePremium",type:"uint256"},{internalType:"uint256",name:"unhedgePremium",type:"uint256"}],stateMutability:"view",type:"function",returns:{amount:"The option size",expired:"The option expiration timestamp",hedgePremium:"The share of the premium paid for hedging from the losses",lockedAmount:"The option collateral size locked",state:"The state of the option: Invalid, Active, Exercised, Expired",strike:"The option strike",unhedgePremium:"The share of the premium paid to the hedged liquidity provider*"}},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"owner",type:"address"}],stateMutability:"view",type:"function",details:"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPriceCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"provideFrom(address,uint256,bool,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"},{internalType:"uint256",name:"minShare",type:"uint256"}],name:"provideFrom",outputs:[{internalType:"uint256",name:"share",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{account:"The liquidity provider's address",amount:"The size of the liquidity tranche",hedged:"The type of the liquidity tranche",minShare:"The minimum share in the pool of the user*"}},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"sellOption(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"sellOption",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option size",holder:"The option buyer address",period:"The option period",strike:"The option strike*"}},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"_approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"setHedgePool(address)":{inputs:[{internalType:"address",name:"value",type:"address"}],name:"setHedgePool",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The hedging pool address*"}},"setLockupPeriod(uint256,uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"setLockupPeriod",outputs:[],stateMutability:"nonpayable",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalBalance()":{inputs:[],name:"totalBalance",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",returns:{amount:"The total liquidity provided into the pool*"}},"tranches(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"tranches",outputs:[{internalType:"enum IHegicPool.TrancheState",name:"state",type:"uint8"},{internalType:"uint256",name:"share",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"creationTimestamp",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"}],stateMutability:"view",type:"function",returns:{amount:"The size of liquidity provided",creationTimestamp:"The liquidity deposit timestamp",hedged:"The liquidity tranche type: hedged or unhedged (classic)*",share:"The liquidity provider's share in the pool",state:"The state of the liquidity tranche: Invalid, Open, Closed"}},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."},"unhedgedBalance()":{inputs:[],name:"unhedgedBalance",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",returns:{amount:"The unhedged liquidity size   (unprotected from the losses on selling the options)*"}},"unlock(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"The ERC721 token ID linked to the option*"}},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdraw",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"The liquidity tranche ID"},returns:{amount:"The liquidity to be received with   the positive or negative P&L earned or lost during   the period of holding the liquidity tranche considered*"}},"withdrawWithoutHedge(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdrawWithoutHedge",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"The liquidity tranche ID"},returns:{amount:"The amount to be received after the withdrawal*"}}}},"contracts/Interfaces/Interfaces.sol:IHegicStaking":{source:"contracts/Interfaces/Interfaces.sol",name:"IHegicStaking",notice:"The interface for the contract that stakes HEGIC tokens   through buying microlots (any amount of HEGIC tokens per microlot)   and staking lots (888,000 HEGIC per lot), accumulates the staking   rewards (settlement fees) and distributes the staking rewards among   the microlots and staking lots holders (should be claimed manually).*",events:{"Claim(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Claim",type:"event"},"MicroLotsAcquired(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"MicroLotsAcquired",type:"event"},"MicroLotsSold(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"MicroLotsSold",type:"event"},"Profit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Profit",type:"event"}},methods:{"buyStakingLot(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"buyStakingLot",outputs:[],stateMutability:"nonpayable",type:"function"},"claimProfits(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"claimProfits",outputs:[{internalType:"uint256",name:"profit",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"distributeUnrealizedRewards()":{inputs:[],name:"distributeUnrealizedRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"profitOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"profitOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"sellStakingLot(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"sellStakingLot",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/Interfaces/Interfaces.sol:IIVLPriceCalculator":{source:"contracts/Interfaces/Interfaces.sol",name:"IIVLPriceCalculator",notice:"The interface fot the contract that calculates   the options prices (the premiums) that are adjusted   through balancing the `ImpliedVolRate` parameter.*",events:{"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"}}},"contracts/Interfaces/Interfaces.sol:IPremiumCalculator":{source:"contracts/Interfaces/Interfaces.sol",name:"IPremiumCalculator",events:{"SetBorders(uint256[3])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[3]",name:"values",type:"uint256[3]"}],name:"SetBorders",type:"event"},"SetDiscountCall(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountCall",type:"event"},"SetDiscountPut(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountPut",type:"event"},"SetDiscountSpread(uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"values",type:"uint8"}],name:"SetDiscountSpread",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetImpliedVolRates(uint256[4])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[4]",name:"values",type:"uint256[4]"}],name:"SetImpliedVolRates",type:"event"},"SetPeriodLimits(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"min",type:"uint256"},{indexed:!1,internalType:"uint256",name:"max",type:"uint256"}],name:"SetPeriodLimits",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"SetStrikePercentage(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetStrikePercentage",type:"event"}},methods:{"calculatePremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period",strike:"The option strike*"}},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"}}},"contracts/Interfaces/Interfaces.sol:IPriceCalculator":{source:"contracts/Interfaces/Interfaces.sol",name:"IPriceCalculator",events:{"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"}},methods:{"calculateTotalPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateTotalPremium",outputs:[{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period",strike:"The option strike*"}}}},"contracts/Interfaces/Interfaces.sol:ISettlementFeeRecipient":{source:"contracts/Interfaces/Interfaces.sol",name:"ISettlementFeeRecipient",methods:{"distributeUnrealizedRewards()":{inputs:[],name:"distributeUnrealizedRewards",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/Interfaces/Interfaces.sol:IWETH":{source:"contracts/Interfaces/Interfaces.sol",name:"IWETH",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens owned by `account`."},"deposit()":{inputs:[],name:"deposit",outputs:[],stateMutability:"payable",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the amount of tokens in existence."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/Mocks/ERC20Mock.sol:ERC20Mock":{source:"contracts/Mocks/ERC20Mock.sol",name:"ERC20Mock",constructor:{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"uint8",name:"__decimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"mintTo(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mintTo",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}}},"contracts/Mocks/PriceProviderMock.sol:PriceProviderMock":{source:"contracts/Mocks/PriceProviderMock.sol",name:"PriceProviderMock",constructor:{inputs:[{internalType:"uint256",name:"_price",type:"uint256"},{internalType:"uint8",name:"_decimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},methods:{"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"description()":{inputs:[],name:"description",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"getRoundData(uint80)":{inputs:[{internalType:"uint80",name:"",type:"uint80"}],name:"getRoundData",outputs:[{internalType:"uint80",name:"",type:"uint80"},{internalType:"int256",name:"",type:"int256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint80",name:"",type:"uint80"}],stateMutability:"pure",type:"function"},"latestAnswer()":{inputs:[],name:"latestAnswer",outputs:[{internalType:"int256",name:"result",type:"int256"}],stateMutability:"view",type:"function"},"latestRoundData()":{inputs:[],name:"latestRoundData",outputs:[{internalType:"uint80",name:"",type:"uint80"},{internalType:"int256",name:"answer",type:"int256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint80",name:"",type:"uint80"}],stateMutability:"view",type:"function"},"price()":{inputs:[],name:"price",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"setPrice(uint256)":{inputs:[{internalType:"uint256",name:"_price",type:"uint256"}],name:"setPrice",outputs:[],stateMutability:"nonpayable",type:"function"},"version()":{inputs:[],name:"version",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/Mocks/UniswapRouterMock.sol:UniswapRouterMock":{source:"contracts/Mocks/UniswapRouterMock.sol",name:"UniswapRouterMock",constructor:{inputs:[{internalType:"contract ERC20Mock",name:"_wbtc",type:"address"},{internalType:"contract ERC20Mock",name:"_usdc",type:"address"},{internalType:"contract AggregatorV3Interface",name:"wpp",type:"address"},{internalType:"contract AggregatorV3Interface",name:"epp",type:"address"}],stateMutability:"nonpayable",type:"constructor"},methods:{"ETHPriceProvider()":{inputs:[],name:"ETHPriceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"USDC()":{inputs:[],name:"USDC",outputs:[{internalType:"contract ERC20Mock",name:"",type:"address"}],stateMutability:"view",type:"function"},"WBTC()":{inputs:[],name:"WBTC",outputs:[{internalType:"contract ERC20Mock",name:"",type:"address"}],stateMutability:"view",type:"function"},"WBTCPriceProvider()":{inputs:[],name:"WBTCPriceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"getAmountsIn(uint256,address[])":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"}],name:"getAmountsIn",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"view",type:"function"},"swapETHForExactTokens(uint256,address[],address,uint256)":{inputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"swapETHForExactTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"payable",type:"function"}}},"contracts/Mocks/WETH.sol:WETHMock":{source:"contracts/Mocks/WETH.sol",name:"WETHMock",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"deposit()":{inputs:[],name:"deposit",outputs:[],stateMutability:"payable",type:"function"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mint(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},"mintTo(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mintTo",outputs:[],stateMutability:"nonpayable",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/OptionsManager/IOptionsManager.sol:IOptionsManager":{source:"contracts/OptionsManager/IOptionsManager.sol",name:"IOptionsManager",notice:"The interface for the contract   that tokenizes options as ERC721.*",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",details:"Returns the number of tokens in ``owner``'s account."},"createOptionFor(address)":{inputs:[{internalType:"address",name:"holder",type:"address"}],name:"createOptionFor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{holder:"The option buyer address*"}},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"operator",type:"address"}],stateMutability:"view",type:"function",details:"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"isApprovedOrOwner(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"isApprovedOrOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",params:{spender:"The option buyer address or another address   with the granted permission to buy/exercise options on the user's behalf",tokenId:"The ERC721 token ID linked to the option*"}},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"owner",type:"address"}],stateMutability:"view",type:"function",details:"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"_approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenPool(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenPool",outputs:[{internalType:"address",name:"pool",type:"address"}],stateMutability:"nonpayable",type:"function",params:{tokenId:"The ERC721 token ID linked to the option*"}},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}}},"contracts/OptionsManager/OptionsManager.sol:OptionsManager":{source:"contracts/OptionsManager/OptionsManager.sol",name:"OptionsManager",title:"Hegic Protocol V8888 Options Manager Contract",author:"0mllwntrmt3",notice:"The contract that buys the options contracts for the options holders as well as checks whether the contract that is used for buying/exercising options has been been granted with the permission to do it on the user's behalf.*",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"HEGIC_POOL_ROLE()":{inputs:[],name:"HEGIC_POOL_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-approve}."},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721-balanceOf}."},"createOptionFor(address)":{inputs:[{internalType:"address",name:"holder",type:"address"}],name:"createOptionFor",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",details:"See EIP-165: ERC-165 Standard Interface Detection https://eips.ethereum.org/EIPS/eip-165*"},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-getApproved}."},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC721-isApprovedForAll}."},"isApprovedOrOwner(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"isApprovedOrOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",params:{spender:"The address of the contract that is used for exercising the options",tokenId:"The ERC721 token ID that is linked to the option*"},notice:"Used for checking whether the user has approved the contract to buy/exercise the options on her behalf."},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-name}."},"nextTokenId()":{inputs:[],name:"nextTokenId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-ownerOf}."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See EIP-165: ERC-165 Standard Interface Detection https://eips.ethereum.org/EIPS/eip-165*"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-symbol}."},"tokenPool(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tokenPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenURI(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-transferFrom}."}}},"contracts/Pool/HegicCall.sol:HegicCALL":{source:"contracts/Pool/HegicCall.sol",name:"HegicCALL",title:"Hegic Protocol V8888 Call Liquidity Pool Contract",author:"0mllwntrmt3",notice:"The Call Liquidity Pool Contract*",constructor:{inputs:[{internalType:"contract IERC20",name:"_token",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IOptionsManager",name:"manager",type:"address"},{internalType:"contract IPriceCalculator",name:"_pricer",type:"address"},{internalType:"contract IHegicStaking",name:"_settlementFeeRecipient",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"}],name:"Acquired",type:"event"},"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"Exercised(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"profit",type:"uint256"}],name:"Exercised",type:"event"},"Expired(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"Expired",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},"Withdrawn(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"trancheID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdrawn",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"INITIAL_RATE()":{inputs:[],name:"INITIAL_RATE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-approve}."},"availableBalance()":{inputs:[],name:"availableBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the amount of liquidity available for withdrawing*"}},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721-balanceOf}."},"calculateTotalPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateTotalPremium",outputs:[{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{period:"The size of the option*"},notice:"Used for calculating the `TotalPremium` for the particular option with regards to the parameters chosen by the option buyer such as the period of holding, size (amount) and strike price."},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for exercising the ITM (in-the-money) options contracts in case of having the unrealized profits accrued during the period of holding the option contract."},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-getApproved}."},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"hedgeFeeRate()":{inputs:[],name:"hedgeFeeRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgePool()":{inputs:[],name:"hedgePool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"hedgedBalance()":{inputs:[],name:"hedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgedShare()":{inputs:[],name:"hedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC721-isApprovedForAll}."},"lockedAmount()":{inputs:[],name:"lockedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForHedgedTranches()":{inputs:[],name:"lockupPeriodForHedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForUnhedgedTranches()":{inputs:[],name:"lockupPeriodForUnhedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxDepositAmount()":{inputs:[],name:"maxDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxHedgedDepositAmount()":{inputs:[],name:"maxHedgedDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxUtilizationRate()":{inputs:[],name:"maxUtilizationRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-name}."},"options(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"options",outputs:[{internalType:"enum IHegicPool.OptionState",name:"state",type:"uint8"},{internalType:"uint256",name:"strike",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"expired",type:"uint256"},{internalType:"uint256",name:"hedgePremium",type:"uint256"},{internalType:"uint256",name:"unhedgePremium",type:"uint256"}],stateMutability:"view",type:"function"},"optionsManager()":{inputs:[],name:"optionsManager",outputs:[{internalType:"contract IOptionsManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-ownerOf}."},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPriceCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Returns the amount of unrealized P&L of the option that could be received by the option holder in case if she exercises it as an ITM (in-the-money) option."},"provideFrom(address,uint256,bool,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"},{internalType:"uint256",name:"minShare",type:"uint256"}],name:"provideFrom",outputs:[{internalType:"uint256",name:"share",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{account:"The liquidity provider's address",amount:"The size of the liquidity tranche",hedged:"The type of the liquidity tranche",minShare:"The minimum share in the pool for the user*"},notice:"Used for depositing the funds into the pool and minting the liquidity tranche ERC721 token which represents the liquidity provider's share in the pool and her unrealized P&L for this tranche."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"sellOption(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"sellOption",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option size",holder:"The option buyer address",period:"The option period",strike:"The option strike"},returns:{id:"ID of ERC721 token linked to the option*"},notice:"Used for selling the options contracts with the parameters chosen by the option buyer such as the period of holding, option size (amount), strike price and the premium to be paid for the option."},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-setApprovalForAll}."},"setCollateralizationRatio(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setCollateralizationRatio",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization ratio in a range of 30% — 100%*"},notice:"Used for setting the collateralization ratio for the option collateral size that will be locked at the moment of buying them. Example: if `CollateralizationRatio` = 50, then 50% of an option's notional size will be locked in the pools at the moment of buying it: say, 1 ETH call option will be collateralized with 0.5 ETH (50%). Note that if an option holder's net P&L USD value (as options are cash-settled) will exceed the amount of the collateral locked in the option, she will receive the required amount at the moment of exercising the option using the pool's unutilized (unlocked) funds."},"setHedgePool(address)":{inputs:[{internalType:"address",name:"value",type:"address"}],name:"setHedgePool",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The address for receiving hedging premiums*"},notice:"Used for changing the hedging pool address that will be accumulating the hedging premiums paid as a share of the total premium redirected to this address."},"setLockupPeriod(uint256,uint256)":{inputs:[{internalType:"uint256",name:"hedgedValue",type:"uint256"},{internalType:"uint256",name:"unhedgedValue",type:"uint256"}],name:"setLockupPeriod",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedgedValue:"Hedged liquidity tranches lock-up in seconds",unhedgedValue:"Unhedged (classic) liquidity tranches lock-up in seconds*"},notice:"Used for setting the liquidity lock-up periods during which the liquidity providers who deposited the funds into the pools contracts won't be able to withdraw them. Note that different lock-ups could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxDepositAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"total",type:"uint256"},{internalType:"uint256",name:"hedged",type:"uint256"}],name:"setMaxDepositAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedged:"Maximum amount of assets in the pool in hedged liquidity tranches only*",total:"Maximum amount of assets in the pool in hedged and unhedged (classic) liquidity tranches combined"},notice:"Used for setting the total maximum amount that could be deposited into the pools contracts. Note that different total maximum amounts could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxUtilizationRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setMaxUtilizationRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The utilization ratio in a range of 50% — 100%*"},notice:"Used for setting the maximum share of the pool size that could be utilized as a collateral in the options. Example: if `MaxUtilizationRate` = 50, then only 50% of liquidity on the pools contracts would be used for collateralizing options while 50% will be sitting idle available for withdrawals by the liquidity providers."},"setPriceCalculator(address)":{inputs:[{internalType:"contract IPriceCalculator",name:"pc",type:"address"}],name:"setPriceCalculator",outputs:[],stateMutability:"nonpayable",type:"function",params:{pc:"A new price calculator contract address*"},notice:"Used for setting the price calculator contract that will be used for pricing the options."},"setSettlementFeeRecipient(address)":{inputs:[{internalType:"contract IHegicStaking",name:"recipient",type:"address"}],name:"setSettlementFeeRecipient",outputs:[],stateMutability:"nonpayable",type:"function",params:{recipient:"New staking contract address*"},notice:"Used for changing the `settlementFeeRecipient` contract address for distributing the settlement fees (staking rewards) among the staking participants."},"settlementFeeRecipient()":{inputs:[],name:"settlementFeeRecipient",outputs:[{internalType:"contract ISettlementFeeRecipient",name:"",type:"address"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See EIP-165: ERC-165 Standard Interface Detection https://eips.ethereum.org/EIPS/eip-165.*"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-symbol}."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenURI(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-tokenURI}."},"totalBalance()":{inputs:[],name:"totalBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the total balance of liquidity provided to the pool*"}},"tranches(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tranches",outputs:[{internalType:"enum IHegicPool.TrancheState",name:"state",type:"uint8"},{internalType:"uint256",name:"share",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"creationTimestamp",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"}],stateMutability:"view",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-transferFrom}."},"unhedgedBalance()":{inputs:[],name:"unhedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unhedgedShare()":{inputs:[],name:"unhedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for unlocking the expired OTM (out-of-the-money) options contracts in case if there was no unrealized P&L accrued during the period of holding a particular option. Note that the `unlock` function releases the liquidity that was locked in the option when it was active and the premiums that are distributed pro rata among the liquidity providers."},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdraw",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"The liquidity tranche ID"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool plus the net positive P&L earned or minus the net negative P&L lost on providing liquidity and selling options."},"withdrawWithoutHedge(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdrawWithoutHedge",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"ID of liquidity tranche"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool by the hedged liquidity tranches providers in case of an urgent need to withdraw the liquidity without receiving the loss compensation from the hedging pool: the net difference between the amount deposited and the withdrawal amount."}}},"contracts/Pool/HegicCouponPool.sol:HegicCouponPool":{source:"contracts/Pool/HegicCouponPool.sol",name:"HegicCouponPool",constructor:{inputs:[{internalType:"contract IERC20",name:"USDC_",type:"address"},{internalType:"contract IHegicPool[]",name:"hegicPools",type:"address[]"}],stateMutability:"nonpayable",type:"constructor"},events:{"Claimed(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"couponID",type:"uint256"},{indexed:!0,internalType:"address",name:"liquidityProvider",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Claimed",type:"event"},"Provided(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"couponID",type:"uint256"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Provided",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"SubscriptionClosed(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"couponID",type:"uint256"}],name:"SubscriptionClosed",type:"event"},"Withdrawn(uint256,address,uint128,uint128)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"couponID",type:"uint256"},{indexed:!0,internalType:"address",name:"liquidityProvider",type:"address"},{indexed:!1,internalType:"uint128",name:"amount",type:"uint128"},{indexed:!1,internalType:"uint128",name:"coupon",type:"uint128"}],name:"Withdrawn",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"buyoutTranche(address,uint256)":{inputs:[{internalType:"contract IHegicPool",name:"pool",type:"address"},{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"buyoutTranche",outputs:[],stateMutability:"nonpayable",type:"function"},"claim(uint256,address)":{inputs:[{internalType:"uint256",name:"couponID",type:"uint256"},{internalType:"address",name:"liquidityProvider",type:"address"}],name:"claim",outputs:[],stateMutability:"nonpayable",type:"function"},"closeSubscription(uint256)":{inputs:[{internalType:"uint256",name:"couponID",type:"uint256"}],name:"closeSubscription",outputs:[],stateMutability:"nonpayable",type:"function"},"closeTranche(address,uint256)":{inputs:[{internalType:"contract IHegicPool",name:"pool",type:"address"},{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"closeTranche",outputs:[],stateMutability:"nonpayable",type:"function"},"coupons(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"coupons",outputs:[{internalType:"enum HegicCouponPool.CouponState",name:"state",type:"uint8"},{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"coupon",type:"uint256"},{internalType:"uint256",name:"deposited",type:"uint256"}],stateMutability:"view",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"initNewCoupon(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"coupon",type:"uint256"}],name:"initNewCoupon",outputs:[],stateMutability:"nonpayable",type:"function"},"onERC721Received(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"onERC721Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],stateMutability:"nonpayable",type:"function",details:"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."},"poolsAvailable(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"poolsAvailable",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"provideLiquidity(uint256,uint248)":{inputs:[{internalType:"uint256",name:"couponID",type:"uint256"},{internalType:"uint248",name:"amount",type:"uint248"}],name:"provideLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"},"provided(uint256,address)":{inputs:[{internalType:"uint256",name:"couponID",type:"uint256"},{internalType:"address",name:"liquidityProvider",type:"address"}],name:"provided",outputs:[{internalType:"uint256",name:"provided",type:"uint256"},{internalType:"bool",name:"hasCoupon",type:"bool"}],stateMutability:"view",type:"function"},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"sendLiquidityToPool(address,uint256)":{inputs:[{internalType:"contract IHegicPool",name:"pool",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendLiquidityToPool",outputs:[],stateMutability:"nonpayable",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"undistributedCouponRecipient()":{inputs:[],name:"undistributedCouponRecipient",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"withdrawLiquidity(uint256,address)":{inputs:[{internalType:"uint256",name:"couponID",type:"uint256"},{internalType:"address",name:"liquidityProvider",type:"address"}],name:"withdrawLiquidity",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/Pool/HegicInversOperationalTreasury.sol:HegicInversOperationalTreasury":{source:"contracts/Pool/HegicInversOperationalTreasury.sol",name:"HegicInversOperationalTreasury",constructor:{inputs:[{internalType:"contract IERC20",name:"_token",type:"address"},{internalType:"contract IOptionsManager",name:"_manager",type:"address"},{internalType:"uint256",name:"_maxLockupPeriod",type:"uint256"},{internalType:"contract IHegicStakeAndCover",name:"_stakeandcoverPool",type:"address"},{internalType:"uint256",name:"_benchmark",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Expired(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"Expired",type:"event"},"Paid(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Paid",type:"event"},"Replenished(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Replenished",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"STRATEGY_ROLE()":{inputs:[],name:"STRATEGY_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"addTokens()":{inputs:[],name:"addTokens",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The amount of tokens to add*"},notice:"Used for adding deposited tokens (e.g. premiums) to the contract's totalBalance"},"benchmark()":{inputs:[],name:"benchmark",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getStakeAndCoverBalance()":{inputs:[],name:"getStakeAndCoverBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"lockLiquidityFor(address,uint128,uint32)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint128",name:"abligation",type:"uint128"},{internalType:"uint32",name:"expiration",type:"uint32"}],name:"lockLiquidityFor",outputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{abligation:"The amount of options strategy contract",expiration:"The options strategy expiration time*",holder:"The option strategy holder address"},notice:"Used for locking liquidity in an active options strategy"},"lockedByStrategy(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"lockedByStrategy",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLiquidity(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"lockedLiquidity",outputs:[{internalType:"enum IHegicOperationalTreasury.LockedLiquidityState",name:"state",type:"uint8"},{internalType:"address",name:"strategy",type:"address"},{internalType:"uint128",name:"abligation",type:"uint128"},{internalType:"uint128",name:"revenue",type:"uint128"},{internalType:"uint32",name:"expiration",type:"uint32"}],stateMutability:"view",type:"function"},"lockedPremium()":{inputs:[],name:"lockedPremium",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"manager()":{inputs:[],name:"manager",outputs:[{internalType:"contract IOptionsManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"maxLockupPeriod()":{inputs:[],name:"maxLockupPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"payOff(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"lockedLiquidityID",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"payOff",outputs:[],stateMutability:"nonpayable",type:"function",params:{account:"The holder address*",amount:"The amount to pay off",lockedLiquidityID:"The option contract ID"},notice:"Used for paying off the profits if an option is exercised in-the-money"},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"replenish()":{inputs:[],name:"replenish",outputs:[],stateMutability:"nonpayable",type:"function",notice:"replenishUsed for replenishing of the Hegic Operational Treasury contract*"},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"setBenchmark(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setBenchmark",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The benchmark value*"},notice:"Used for setting the initial contract benchmark for calculating future profits or losses"},"stakeandcoverPool()":{inputs:[],name:"stakeandcoverPool",outputs:[{internalType:"contract IHegicStakeAndCover",name:"",type:"address"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalBalance()":{inputs:[],name:"totalBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalLocked()":{inputs:[],name:"totalLocked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock(uint256)":{inputs:[{internalType:"uint256",name:"lockedLiquidityID",type:"uint256"}],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{lockedLiquidityID:"The option contract ID*"},notice:"Used for unlocking liquidity after an expiration"},"withdraw(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",params:{amount:"The amount to withdraw*",to:"The recipient address"},notice:"Used for withdrawing deposited tokens from the contract"}}},"contracts/Pool/HegicOperationalTreasury.sol:HegicOperationalTreasury":{source:"contracts/Pool/HegicOperationalTreasury.sol",name:"HegicOperationalTreasury",constructor:{inputs:[{internalType:"contract IERC20",name:"_token",type:"address"},{internalType:"contract IOptionsManager",name:"_manager",type:"address"},{internalType:"uint256",name:"_maxLockupPeriod",type:"uint256"},{internalType:"contract IHegicStakeAndCover",name:"_stakeandcoverPool",type:"address"},{internalType:"uint256",name:"_benchmark",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Expired(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"Expired",type:"event"},"Paid(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Paid",type:"event"},"Replenished(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Replenished",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"STRATEGY_ROLE()":{inputs:[],name:"STRATEGY_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"addTokens()":{inputs:[],name:"addTokens",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The amount of tokens to add*"},notice:"Used for adding deposited tokens (e.g. premiums) to the contract's totalBalance"},"benchmark()":{inputs:[],name:"benchmark",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getStakeAndCoverBalance()":{inputs:[],name:"getStakeAndCoverBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"lockLiquidityFor(address,uint128,uint32)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint128",name:"abligation",type:"uint128"},{internalType:"uint32",name:"expiration",type:"uint32"}],name:"lockLiquidityFor",outputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{abligation:"The amount of options strategy contract",expiration:"The options strategy expiration time*",holder:"The option strategy holder address"},notice:"Used for locking liquidity in an active options strategy"},"lockedByStrategy(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"lockedByStrategy",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLiquidity(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"lockedLiquidity",outputs:[{internalType:"enum IHegicOperationalTreasury.LockedLiquidityState",name:"state",type:"uint8"},{internalType:"address",name:"strategy",type:"address"},{internalType:"uint128",name:"abligation",type:"uint128"},{internalType:"uint128",name:"revenue",type:"uint128"},{internalType:"uint32",name:"expiration",type:"uint32"}],stateMutability:"view",type:"function"},"lockedPremium()":{inputs:[],name:"lockedPremium",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"manager()":{inputs:[],name:"manager",outputs:[{internalType:"contract IOptionsManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"maxLockupPeriod()":{inputs:[],name:"maxLockupPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"payOff(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"lockedLiquidityID",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"payOff",outputs:[],stateMutability:"nonpayable",type:"function",params:{account:"The holder address*",amount:"The amount to pay off",lockedLiquidityID:"The option contract ID"},notice:"Used for paying off the profits if an option is exercised in-the-money"},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"replenish()":{inputs:[],name:"replenish",outputs:[],stateMutability:"nonpayable",type:"function",notice:"replenishUsed for replenishing of the Hegic Operational Treasury contract*"},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"setBenchmark(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setBenchmark",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The benchmark value*"},notice:"Used for setting the initial contract benchmark for calculating future profits or losses"},"stakeandcoverPool()":{inputs:[],name:"stakeandcoverPool",outputs:[{internalType:"contract IHegicStakeAndCover",name:"",type:"address"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalBalance()":{inputs:[],name:"totalBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalLocked()":{inputs:[],name:"totalLocked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock(uint256)":{inputs:[{internalType:"uint256",name:"lockedLiquidityID",type:"uint256"}],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{lockedLiquidityID:"The option contract ID*"},notice:"Used for unlocking liquidity after an expiration"},"withdraw(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",params:{amount:"The amount to withdraw*",to:"The recipient address"},notice:"Used for withdrawing deposited tokens from the contract"}}},"contracts/Pool/HegicOtmCall.sol:HegicOTMCall":{source:"contracts/Pool/HegicOtmCall.sol",name:"HegicOTMCall",title:"Hegic Protocol V8888 Put Liquidity Pool Contract",author:"0mllwntrmt3",notice:"The Put Liquidity Pool Contract*",constructor:{inputs:[{internalType:"contract IERC20",name:"_token",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IOptionsManager",name:"manager",type:"address"},{internalType:"contract IPriceCalculator",name:"_pricer",type:"address"},{internalType:"contract IHegicStaking",name:"_settlementFeeRecipient",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"uint8",name:"spotDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"}],name:"Acquired",type:"event"},"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"Exercised(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"profit",type:"uint256"}],name:"Exercised",type:"event"},"Expired(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"Expired",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},"Withdrawn(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"trancheID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdrawn",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"INITIAL_RATE()":{inputs:[],name:"INITIAL_RATE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-approve}."},"availableBalance()":{inputs:[],name:"availableBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the amount of liquidity available for withdrawing*"}},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721-balanceOf}."},"calculateTotalPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateTotalPremium",outputs:[{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{period:"The size of the option*"},notice:"Used for calculating the `TotalPremium` for the particular option with regards to the parameters chosen by the option buyer such as the period of holding, size (amount) and strike price."},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for exercising the ITM (in-the-money) options contracts in case of having the unrealized profits accrued during the period of holding the option contract."},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-getApproved}."},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"hedgeFeeRate()":{inputs:[],name:"hedgeFeeRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgePool()":{inputs:[],name:"hedgePool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"hedgedBalance()":{inputs:[],name:"hedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgedShare()":{inputs:[],name:"hedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC721-isApprovedForAll}."},"lockedAmount()":{inputs:[],name:"lockedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForHedgedTranches()":{inputs:[],name:"lockupPeriodForHedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForUnhedgedTranches()":{inputs:[],name:"lockupPeriodForUnhedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxDepositAmount()":{inputs:[],name:"maxDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxHedgedDepositAmount()":{inputs:[],name:"maxHedgedDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxUtilizationRate()":{inputs:[],name:"maxUtilizationRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-name}."},"options(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"options",outputs:[{internalType:"enum IHegicPool.OptionState",name:"state",type:"uint8"},{internalType:"uint256",name:"strike",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"expired",type:"uint256"},{internalType:"uint256",name:"hedgePremium",type:"uint256"},{internalType:"uint256",name:"unhedgePremium",type:"uint256"}],stateMutability:"view",type:"function"},"optionsManager()":{inputs:[],name:"optionsManager",outputs:[{internalType:"contract IOptionsManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-ownerOf}."},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPriceCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Returns the amount of unrealized P&L of the option that could be received by the option holder in case if she exercises it as an ITM (in-the-money) option."},"provideFrom(address,uint256,bool,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"},{internalType:"uint256",name:"minShare",type:"uint256"}],name:"provideFrom",outputs:[{internalType:"uint256",name:"share",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{account:"The liquidity provider's address",amount:"The size of the liquidity tranche",hedged:"The type of the liquidity tranche",minShare:"The minimum share in the pool for the user*"},notice:"Used for depositing the funds into the pool and minting the liquidity tranche ERC721 token which represents the liquidity provider's share in the pool and her unrealized P&L for this tranche."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"sellOption(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"sellOption",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option size",holder:"The option buyer address",period:"The option period",strike:"The option strike"},returns:{id:"ID of ERC721 token linked to the option*"},notice:"Used for selling the options contracts with the parameters chosen by the option buyer such as the period of holding, option size (amount), strike price and the premium to be paid for the option."},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-setApprovalForAll}."},"setCollateralizationRatio(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setCollateralizationRatio",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization ratio in a range of 30% — 100%*"},notice:"Used for setting the collateralization ratio for the option collateral size that will be locked at the moment of buying them. Example: if `CollateralizationRatio` = 50, then 50% of an option's notional size will be locked in the pools at the moment of buying it: say, 1 ETH call option will be collateralized with 0.5 ETH (50%). Note that if an option holder's net P&L USD value (as options are cash-settled) will exceed the amount of the collateral locked in the option, she will receive the required amount at the moment of exercising the option using the pool's unutilized (unlocked) funds."},"setHedgePool(address)":{inputs:[{internalType:"address",name:"value",type:"address"}],name:"setHedgePool",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The address for receiving hedging premiums*"},notice:"Used for changing the hedging pool address that will be accumulating the hedging premiums paid as a share of the total premium redirected to this address."},"setLockupPeriod(uint256,uint256)":{inputs:[{internalType:"uint256",name:"hedgedValue",type:"uint256"},{internalType:"uint256",name:"unhedgedValue",type:"uint256"}],name:"setLockupPeriod",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedgedValue:"Hedged liquidity tranches lock-up in seconds",unhedgedValue:"Unhedged (classic) liquidity tranches lock-up in seconds*"},notice:"Used for setting the liquidity lock-up periods during which the liquidity providers who deposited the funds into the pools contracts won't be able to withdraw them. Note that different lock-ups could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxDepositAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"total",type:"uint256"},{internalType:"uint256",name:"hedged",type:"uint256"}],name:"setMaxDepositAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedged:"Maximum amount of assets in the pool in hedged liquidity tranches only*",total:"Maximum amount of assets in the pool in hedged and unhedged (classic) liquidity tranches combined"},notice:"Used for setting the total maximum amount that could be deposited into the pools contracts. Note that different total maximum amounts could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxUtilizationRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setMaxUtilizationRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The utilization ratio in a range of 50% — 100%*"},notice:"Used for setting the maximum share of the pool size that could be utilized as a collateral in the options. Example: if `MaxUtilizationRate` = 50, then only 50% of liquidity on the pools contracts would be used for collateralizing options while 50% will be sitting idle available for withdrawals by the liquidity providers."},"setPriceCalculator(address)":{inputs:[{internalType:"contract IPriceCalculator",name:"pc",type:"address"}],name:"setPriceCalculator",outputs:[],stateMutability:"nonpayable",type:"function",params:{pc:"A new price calculator contract address*"},notice:"Used for setting the price calculator contract that will be used for pricing the options."},"setSettlementFeeRecipient(address)":{inputs:[{internalType:"contract IHegicStaking",name:"recipient",type:"address"}],name:"setSettlementFeeRecipient",outputs:[],stateMutability:"nonpayable",type:"function",params:{recipient:"New staking contract address*"},notice:"Used for changing the `settlementFeeRecipient` contract address for distributing the settlement fees (staking rewards) among the staking participants."},"settlementFeeRecipient()":{inputs:[],name:"settlementFeeRecipient",outputs:[{internalType:"contract ISettlementFeeRecipient",name:"",type:"address"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See EIP-165: ERC-165 Standard Interface Detection https://eips.ethereum.org/EIPS/eip-165.*"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-symbol}."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenURI(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-tokenURI}."},"totalBalance()":{inputs:[],name:"totalBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the total balance of liquidity provided to the pool*"}},"tranches(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tranches",outputs:[{internalType:"enum IHegicPool.TrancheState",name:"state",type:"uint8"},{internalType:"uint256",name:"share",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"creationTimestamp",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"}],stateMutability:"view",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-transferFrom}."},"unhedgedBalance()":{inputs:[],name:"unhedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unhedgedShare()":{inputs:[],name:"unhedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for unlocking the expired OTM (out-of-the-money) options contracts in case if there was no unrealized P&L accrued during the period of holding a particular option. Note that the `unlock` function releases the liquidity that was locked in the option when it was active and the premiums that are distributed pro rata among the liquidity providers."},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdraw",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"The liquidity tranche ID"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool plus the net positive P&L earned or minus the net negative P&L lost on providing liquidity and selling options."},"withdrawWithoutHedge(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdrawWithoutHedge",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"ID of liquidity tranche"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool by the hedged liquidity tranches providers in case of an urgent need to withdraw the liquidity without receiving the loss compensation from the hedging pool: the net difference between the amount deposited and the withdrawal amount."}}},"contracts/Pool/HegicOtmPut.sol:HegicOTMPut":{source:"contracts/Pool/HegicOtmPut.sol",name:"HegicOTMPut",title:"Hegic Protocol V8888 Put Liquidity Pool Contract",author:"0mllwntrmt3",notice:"The Put Liquidity Pool Contract*",constructor:{inputs:[{internalType:"contract IERC20",name:"_token",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IOptionsManager",name:"manager",type:"address"},{internalType:"contract IPriceCalculator",name:"_pricer",type:"address"},{internalType:"contract IHegicStaking",name:"_settlementFeeRecipient",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"uint8",name:"spotDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"}],name:"Acquired",type:"event"},"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"Exercised(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"profit",type:"uint256"}],name:"Exercised",type:"event"},"Expired(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"Expired",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},"Withdrawn(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"trancheID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdrawn",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"INITIAL_RATE()":{inputs:[],name:"INITIAL_RATE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-approve}."},"availableBalance()":{inputs:[],name:"availableBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the amount of liquidity available for withdrawing*"}},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721-balanceOf}."},"calculateTotalPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateTotalPremium",outputs:[{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{period:"The size of the option*"},notice:"Used for calculating the `TotalPremium` for the particular option with regards to the parameters chosen by the option buyer such as the period of holding, size (amount) and strike price."},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for exercising the ITM (in-the-money) options contracts in case of having the unrealized profits accrued during the period of holding the option contract."},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-getApproved}."},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"hedgeFeeRate()":{inputs:[],name:"hedgeFeeRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgePool()":{inputs:[],name:"hedgePool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"hedgedBalance()":{inputs:[],name:"hedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgedShare()":{inputs:[],name:"hedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC721-isApprovedForAll}."},"lockedAmount()":{inputs:[],name:"lockedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForHedgedTranches()":{inputs:[],name:"lockupPeriodForHedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForUnhedgedTranches()":{inputs:[],name:"lockupPeriodForUnhedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxDepositAmount()":{inputs:[],name:"maxDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxHedgedDepositAmount()":{inputs:[],name:"maxHedgedDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxUtilizationRate()":{inputs:[],name:"maxUtilizationRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-name}."},"options(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"options",outputs:[{internalType:"enum IHegicPool.OptionState",name:"state",type:"uint8"},{internalType:"uint256",name:"strike",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"expired",type:"uint256"},{internalType:"uint256",name:"hedgePremium",type:"uint256"},{internalType:"uint256",name:"unhedgePremium",type:"uint256"}],stateMutability:"view",type:"function"},"optionsManager()":{inputs:[],name:"optionsManager",outputs:[{internalType:"contract IOptionsManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-ownerOf}."},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPriceCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Returns the amount of unrealized P&L of the option that could be received by the option holder in case if she exercises it as an ITM (in-the-money) option."},"provideFrom(address,uint256,bool,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"},{internalType:"uint256",name:"minShare",type:"uint256"}],name:"provideFrom",outputs:[{internalType:"uint256",name:"share",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{account:"The liquidity provider's address",amount:"The size of the liquidity tranche",hedged:"The type of the liquidity tranche",minShare:"The minimum share in the pool for the user*"},notice:"Used for depositing the funds into the pool and minting the liquidity tranche ERC721 token which represents the liquidity provider's share in the pool and her unrealized P&L for this tranche."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"sellOption(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"sellOption",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option size",holder:"The option buyer address",period:"The option period",strike:"The option strike"},returns:{id:"ID of ERC721 token linked to the option*"},notice:"Used for selling the options contracts with the parameters chosen by the option buyer such as the period of holding, option size (amount), strike price and the premium to be paid for the option."},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-setApprovalForAll}."},"setCollateralizationRatio(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setCollateralizationRatio",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization ratio in a range of 30% — 100%*"},notice:"Used for setting the collateralization ratio for the option collateral size that will be locked at the moment of buying them. Example: if `CollateralizationRatio` = 50, then 50% of an option's notional size will be locked in the pools at the moment of buying it: say, 1 ETH call option will be collateralized with 0.5 ETH (50%). Note that if an option holder's net P&L USD value (as options are cash-settled) will exceed the amount of the collateral locked in the option, she will receive the required amount at the moment of exercising the option using the pool's unutilized (unlocked) funds."},"setHedgePool(address)":{inputs:[{internalType:"address",name:"value",type:"address"}],name:"setHedgePool",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The address for receiving hedging premiums*"},notice:"Used for changing the hedging pool address that will be accumulating the hedging premiums paid as a share of the total premium redirected to this address."},"setLockupPeriod(uint256,uint256)":{inputs:[{internalType:"uint256",name:"hedgedValue",type:"uint256"},{internalType:"uint256",name:"unhedgedValue",type:"uint256"}],name:"setLockupPeriod",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedgedValue:"Hedged liquidity tranches lock-up in seconds",unhedgedValue:"Unhedged (classic) liquidity tranches lock-up in seconds*"},notice:"Used for setting the liquidity lock-up periods during which the liquidity providers who deposited the funds into the pools contracts won't be able to withdraw them. Note that different lock-ups could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxDepositAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"total",type:"uint256"},{internalType:"uint256",name:"hedged",type:"uint256"}],name:"setMaxDepositAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedged:"Maximum amount of assets in the pool in hedged liquidity tranches only*",total:"Maximum amount of assets in the pool in hedged and unhedged (classic) liquidity tranches combined"},notice:"Used for setting the total maximum amount that could be deposited into the pools contracts. Note that different total maximum amounts could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxUtilizationRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setMaxUtilizationRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The utilization ratio in a range of 50% — 100%*"},notice:"Used for setting the maximum share of the pool size that could be utilized as a collateral in the options. Example: if `MaxUtilizationRate` = 50, then only 50% of liquidity on the pools contracts would be used for collateralizing options while 50% will be sitting idle available for withdrawals by the liquidity providers."},"setPriceCalculator(address)":{inputs:[{internalType:"contract IPriceCalculator",name:"pc",type:"address"}],name:"setPriceCalculator",outputs:[],stateMutability:"nonpayable",type:"function",params:{pc:"A new price calculator contract address*"},notice:"Used for setting the price calculator contract that will be used for pricing the options."},"setSettlementFeeRecipient(address)":{inputs:[{internalType:"contract IHegicStaking",name:"recipient",type:"address"}],name:"setSettlementFeeRecipient",outputs:[],stateMutability:"nonpayable",type:"function",params:{recipient:"New staking contract address*"},notice:"Used for changing the `settlementFeeRecipient` contract address for distributing the settlement fees (staking rewards) among the staking participants."},"settlementFeeRecipient()":{inputs:[],name:"settlementFeeRecipient",outputs:[{internalType:"contract ISettlementFeeRecipient",name:"",type:"address"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See EIP-165: ERC-165 Standard Interface Detection https://eips.ethereum.org/EIPS/eip-165.*"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-symbol}."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenURI(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-tokenURI}."},"totalBalance()":{inputs:[],name:"totalBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the total balance of liquidity provided to the pool*"}},"tranches(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tranches",outputs:[{internalType:"enum IHegicPool.TrancheState",name:"state",type:"uint8"},{internalType:"uint256",name:"share",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"creationTimestamp",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"}],stateMutability:"view",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-transferFrom}."},"unhedgedBalance()":{inputs:[],name:"unhedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unhedgedShare()":{inputs:[],name:"unhedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for unlocking the expired OTM (out-of-the-money) options contracts in case if there was no unrealized P&L accrued during the period of holding a particular option. Note that the `unlock` function releases the liquidity that was locked in the option when it was active and the premiums that are distributed pro rata among the liquidity providers."},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdraw",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"The liquidity tranche ID"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool plus the net positive P&L earned or minus the net negative P&L lost on providing liquidity and selling options."},"withdrawWithoutHedge(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdrawWithoutHedge",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"ID of liquidity tranche"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool by the hedged liquidity tranches providers in case of an urgent need to withdraw the liquidity without receiving the loss compensation from the hedging pool: the net difference between the amount deposited and the withdrawal amount."}}},"contracts/Pool/HegicPool.sol:HegicPool":{source:"contracts/Pool/HegicPool.sol",name:"HegicPool",title:"Hegic Protocol V8888 Main Pool Contract",author:"0mllwntrmt3",notice:"One of the main contracts that manages the pools and the options parameters, accumulates the funds from the liquidity providers and makes the withdrawals for them, sells the options contracts to the options buyers and collateralizes them, exercises the ITM (in-the-money) options with the unrealized P&L and settles them, unlocks the expired options and distributes the premiums among the liquidity providers.*",events:{"Acquired(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"}],name:"Acquired",type:"event"},"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"Exercised(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"profit",type:"uint256"}],name:"Exercised",type:"event"},"Expired(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"Expired",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},"Withdrawn(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"trancheID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdrawn",type:"event"}},stateVariables:{"hedgedBalance()":{inputs:[],name:"hedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"stateVariable",return:"amount The hedged liquidity size (protected from the losses on selling the options)*",returns:{_0:"amount The hedged liquidity size (protected from the losses on selling the options)*"}},"lockedAmount()":{inputs:[],name:"lockedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"stateVariable",return:"amount The total liquidity locked in the pool*",returns:{_0:"amount The total liquidity locked in the pool*"}},"unhedgedBalance()":{inputs:[],name:"unhedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"stateVariable",return:"amount The unhedged liquidity size   (unprotected from the losses on selling the options)*",returns:{_0:"amount The unhedged liquidity size   (unprotected from the losses on selling the options)*"}}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"INITIAL_RATE()":{inputs:[],name:"INITIAL_RATE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-approve}."},"availableBalance()":{inputs:[],name:"availableBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the amount of liquidity available for withdrawing*"}},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721-balanceOf}."},"calculateTotalPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateTotalPremium",outputs:[{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{period:"The size of the option*"},notice:"Used for calculating the `TotalPremium` for the particular option with regards to the parameters chosen by the option buyer such as the period of holding, size (amount) and strike price."},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for exercising the ITM (in-the-money) options contracts in case of having the unrealized profits accrued during the period of holding the option contract."},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-getApproved}."},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"hedgeFeeRate()":{inputs:[],name:"hedgeFeeRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgePool()":{inputs:[],name:"hedgePool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"hedgedShare()":{inputs:[],name:"hedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC721-isApprovedForAll}."},"lockupPeriodForHedgedTranches()":{inputs:[],name:"lockupPeriodForHedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForUnhedgedTranches()":{inputs:[],name:"lockupPeriodForUnhedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxDepositAmount()":{inputs:[],name:"maxDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxHedgedDepositAmount()":{inputs:[],name:"maxHedgedDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxUtilizationRate()":{inputs:[],name:"maxUtilizationRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-name}."},"options(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"options",outputs:[{internalType:"enum IHegicPool.OptionState",name:"state",type:"uint8"},{internalType:"uint256",name:"strike",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"expired",type:"uint256"},{internalType:"uint256",name:"hedgePremium",type:"uint256"},{internalType:"uint256",name:"unhedgePremium",type:"uint256"}],stateMutability:"view",type:"function"},"optionsManager()":{inputs:[],name:"optionsManager",outputs:[{internalType:"contract IOptionsManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-ownerOf}."},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPriceCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Returns the amount of unrealized P&L of the option that could be received by the option holder in case if she exercises it as an ITM (in-the-money) option."},"provideFrom(address,uint256,bool,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"},{internalType:"uint256",name:"minShare",type:"uint256"}],name:"provideFrom",outputs:[{internalType:"uint256",name:"share",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{account:"The liquidity provider's address",amount:"The size of the liquidity tranche",hedged:"The type of the liquidity tranche",minShare:"The minimum share in the pool for the user*"},notice:"Used for depositing the funds into the pool and minting the liquidity tranche ERC721 token which represents the liquidity provider's share in the pool and her unrealized P&L for this tranche."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"sellOption(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"sellOption",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option size",holder:"The option buyer address",period:"The option period",strike:"The option strike"},returns:{id:"ID of ERC721 token linked to the option*"},notice:"Used for selling the options contracts with the parameters chosen by the option buyer such as the period of holding, option size (amount), strike price and the premium to be paid for the option."},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-setApprovalForAll}."},"setCollateralizationRatio(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setCollateralizationRatio",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization ratio in a range of 30% — 100%*"},notice:"Used for setting the collateralization ratio for the option collateral size that will be locked at the moment of buying them. Example: if `CollateralizationRatio` = 50, then 50% of an option's notional size will be locked in the pools at the moment of buying it: say, 1 ETH call option will be collateralized with 0.5 ETH (50%). Note that if an option holder's net P&L USD value (as options are cash-settled) will exceed the amount of the collateral locked in the option, she will receive the required amount at the moment of exercising the option using the pool's unutilized (unlocked) funds."},"setHedgePool(address)":{inputs:[{internalType:"address",name:"value",type:"address"}],name:"setHedgePool",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The address for receiving hedging premiums*"},notice:"Used for changing the hedging pool address that will be accumulating the hedging premiums paid as a share of the total premium redirected to this address."},"setLockupPeriod(uint256,uint256)":{inputs:[{internalType:"uint256",name:"hedgedValue",type:"uint256"},{internalType:"uint256",name:"unhedgedValue",type:"uint256"}],name:"setLockupPeriod",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedgedValue:"Hedged liquidity tranches lock-up in seconds",unhedgedValue:"Unhedged (classic) liquidity tranches lock-up in seconds*"},notice:"Used for setting the liquidity lock-up periods during which the liquidity providers who deposited the funds into the pools contracts won't be able to withdraw them. Note that different lock-ups could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxDepositAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"total",type:"uint256"},{internalType:"uint256",name:"hedged",type:"uint256"}],name:"setMaxDepositAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedged:"Maximum amount of assets in the pool in hedged liquidity tranches only*",total:"Maximum amount of assets in the pool in hedged and unhedged (classic) liquidity tranches combined"},notice:"Used for setting the total maximum amount that could be deposited into the pools contracts. Note that different total maximum amounts could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxUtilizationRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setMaxUtilizationRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The utilization ratio in a range of 50% — 100%*"},notice:"Used for setting the maximum share of the pool size that could be utilized as a collateral in the options. Example: if `MaxUtilizationRate` = 50, then only 50% of liquidity on the pools contracts would be used for collateralizing options while 50% will be sitting idle available for withdrawals by the liquidity providers."},"setPriceCalculator(address)":{inputs:[{internalType:"contract IPriceCalculator",name:"pc",type:"address"}],name:"setPriceCalculator",outputs:[],stateMutability:"nonpayable",type:"function",params:{pc:"A new price calculator contract address*"},notice:"Used for setting the price calculator contract that will be used for pricing the options."},"setSettlementFeeRecipient(address)":{inputs:[{internalType:"contract IHegicStaking",name:"recipient",type:"address"}],name:"setSettlementFeeRecipient",outputs:[],stateMutability:"nonpayable",type:"function",params:{recipient:"New staking contract address*"},notice:"Used for changing the `settlementFeeRecipient` contract address for distributing the settlement fees (staking rewards) among the staking participants."},"settlementFeeRecipient()":{inputs:[],name:"settlementFeeRecipient",outputs:[{internalType:"contract ISettlementFeeRecipient",name:"",type:"address"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See EIP-165: ERC-165 Standard Interface Detection https://eips.ethereum.org/EIPS/eip-165.*"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-symbol}."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenURI(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-tokenURI}."},"totalBalance()":{inputs:[],name:"totalBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the total balance of liquidity provided to the pool*"}},"tranches(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tranches",outputs:[{internalType:"enum IHegicPool.TrancheState",name:"state",type:"uint8"},{internalType:"uint256",name:"share",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"creationTimestamp",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"}],stateMutability:"view",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-transferFrom}."},"unhedgedShare()":{inputs:[],name:"unhedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for unlocking the expired OTM (out-of-the-money) options contracts in case if there was no unrealized P&L accrued during the period of holding a particular option. Note that the `unlock` function releases the liquidity that was locked in the option when it was active and the premiums that are distributed pro rata among the liquidity providers."},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdraw",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"The liquidity tranche ID"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool plus the net positive P&L earned or minus the net negative P&L lost on providing liquidity and selling options."},"withdrawWithoutHedge(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdrawWithoutHedge",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"ID of liquidity tranche"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool by the hedged liquidity tranches providers in case of an urgent need to withdraw the liquidity without receiving the loss compensation from the hedging pool: the net difference between the amount deposited and the withdrawal amount."}}},"contracts/Pool/HegicPut.sol:HegicPUT":{source:"contracts/Pool/HegicPut.sol",name:"HegicPUT",title:"Hegic Protocol V8888 Put Liquidity Pool Contract",author:"0mllwntrmt3",notice:"The Put Liquidity Pool Contract*",constructor:{inputs:[{internalType:"contract IERC20",name:"_token",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IOptionsManager",name:"manager",type:"address"},{internalType:"contract IPriceCalculator",name:"_pricer",type:"address"},{internalType:"contract IHegicStaking",name:"_settlementFeeRecipient",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"uint8",name:"spotDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"}],name:"Acquired",type:"event"},"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"Exercised(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"profit",type:"uint256"}],name:"Exercised",type:"event"},"Expired(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"Expired",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},"Withdrawn(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"trancheID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdrawn",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"INITIAL_RATE()":{inputs:[],name:"INITIAL_RATE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-approve}."},"availableBalance()":{inputs:[],name:"availableBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the amount of liquidity available for withdrawing*"}},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721-balanceOf}."},"calculateTotalPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateTotalPremium",outputs:[{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{period:"The size of the option*"},notice:"Used for calculating the `TotalPremium` for the particular option with regards to the parameters chosen by the option buyer such as the period of holding, size (amount) and strike price."},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for exercising the ITM (in-the-money) options contracts in case of having the unrealized profits accrued during the period of holding the option contract."},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-getApproved}."},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"hedgeFeeRate()":{inputs:[],name:"hedgeFeeRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgePool()":{inputs:[],name:"hedgePool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"hedgedBalance()":{inputs:[],name:"hedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgedShare()":{inputs:[],name:"hedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC721-isApprovedForAll}."},"lockedAmount()":{inputs:[],name:"lockedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForHedgedTranches()":{inputs:[],name:"lockupPeriodForHedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForUnhedgedTranches()":{inputs:[],name:"lockupPeriodForUnhedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxDepositAmount()":{inputs:[],name:"maxDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxHedgedDepositAmount()":{inputs:[],name:"maxHedgedDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxUtilizationRate()":{inputs:[],name:"maxUtilizationRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-name}."},"options(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"options",outputs:[{internalType:"enum IHegicPool.OptionState",name:"state",type:"uint8"},{internalType:"uint256",name:"strike",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"expired",type:"uint256"},{internalType:"uint256",name:"hedgePremium",type:"uint256"},{internalType:"uint256",name:"unhedgePremium",type:"uint256"}],stateMutability:"view",type:"function"},"optionsManager()":{inputs:[],name:"optionsManager",outputs:[{internalType:"contract IOptionsManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-ownerOf}."},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPriceCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Returns the amount of unrealized P&L of the option that could be received by the option holder in case if she exercises it as an ITM (in-the-money) option."},"provideFrom(address,uint256,bool,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"},{internalType:"uint256",name:"minShare",type:"uint256"}],name:"provideFrom",outputs:[{internalType:"uint256",name:"share",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{account:"The liquidity provider's address",amount:"The size of the liquidity tranche",hedged:"The type of the liquidity tranche",minShare:"The minimum share in the pool for the user*"},notice:"Used for depositing the funds into the pool and minting the liquidity tranche ERC721 token which represents the liquidity provider's share in the pool and her unrealized P&L for this tranche."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"sellOption(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"sellOption",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option size",holder:"The option buyer address",period:"The option period",strike:"The option strike"},returns:{id:"ID of ERC721 token linked to the option*"},notice:"Used for selling the options contracts with the parameters chosen by the option buyer such as the period of holding, option size (amount), strike price and the premium to be paid for the option."},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-setApprovalForAll}."},"setCollateralizationRatio(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setCollateralizationRatio",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization ratio in a range of 30% — 100%*"},notice:"Used for setting the collateralization ratio for the option collateral size that will be locked at the moment of buying them. Example: if `CollateralizationRatio` = 50, then 50% of an option's notional size will be locked in the pools at the moment of buying it: say, 1 ETH call option will be collateralized with 0.5 ETH (50%). Note that if an option holder's net P&L USD value (as options are cash-settled) will exceed the amount of the collateral locked in the option, she will receive the required amount at the moment of exercising the option using the pool's unutilized (unlocked) funds."},"setHedgePool(address)":{inputs:[{internalType:"address",name:"value",type:"address"}],name:"setHedgePool",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The address for receiving hedging premiums*"},notice:"Used for changing the hedging pool address that will be accumulating the hedging premiums paid as a share of the total premium redirected to this address."},"setLockupPeriod(uint256,uint256)":{inputs:[{internalType:"uint256",name:"hedgedValue",type:"uint256"},{internalType:"uint256",name:"unhedgedValue",type:"uint256"}],name:"setLockupPeriod",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedgedValue:"Hedged liquidity tranches lock-up in seconds",unhedgedValue:"Unhedged (classic) liquidity tranches lock-up in seconds*"},notice:"Used for setting the liquidity lock-up periods during which the liquidity providers who deposited the funds into the pools contracts won't be able to withdraw them. Note that different lock-ups could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxDepositAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"total",type:"uint256"},{internalType:"uint256",name:"hedged",type:"uint256"}],name:"setMaxDepositAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedged:"Maximum amount of assets in the pool in hedged liquidity tranches only*",total:"Maximum amount of assets in the pool in hedged and unhedged (classic) liquidity tranches combined"},notice:"Used for setting the total maximum amount that could be deposited into the pools contracts. Note that different total maximum amounts could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxUtilizationRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setMaxUtilizationRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The utilization ratio in a range of 50% — 100%*"},notice:"Used for setting the maximum share of the pool size that could be utilized as a collateral in the options. Example: if `MaxUtilizationRate` = 50, then only 50% of liquidity on the pools contracts would be used for collateralizing options while 50% will be sitting idle available for withdrawals by the liquidity providers."},"setPriceCalculator(address)":{inputs:[{internalType:"contract IPriceCalculator",name:"pc",type:"address"}],name:"setPriceCalculator",outputs:[],stateMutability:"nonpayable",type:"function",params:{pc:"A new price calculator contract address*"},notice:"Used for setting the price calculator contract that will be used for pricing the options."},"setSettlementFeeRecipient(address)":{inputs:[{internalType:"contract IHegicStaking",name:"recipient",type:"address"}],name:"setSettlementFeeRecipient",outputs:[],stateMutability:"nonpayable",type:"function",params:{recipient:"New staking contract address*"},notice:"Used for changing the `settlementFeeRecipient` contract address for distributing the settlement fees (staking rewards) among the staking participants."},"settlementFeeRecipient()":{inputs:[],name:"settlementFeeRecipient",outputs:[{internalType:"contract ISettlementFeeRecipient",name:"",type:"address"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See EIP-165: ERC-165 Standard Interface Detection https://eips.ethereum.org/EIPS/eip-165.*"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-symbol}."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenURI(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-tokenURI}."},"totalBalance()":{inputs:[],name:"totalBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the total balance of liquidity provided to the pool*"}},"tranches(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tranches",outputs:[{internalType:"enum IHegicPool.TrancheState",name:"state",type:"uint8"},{internalType:"uint256",name:"share",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"creationTimestamp",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"}],stateMutability:"view",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-transferFrom}."},"unhedgedBalance()":{inputs:[],name:"unhedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unhedgedShare()":{inputs:[],name:"unhedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for unlocking the expired OTM (out-of-the-money) options contracts in case if there was no unrealized P&L accrued during the period of holding a particular option. Note that the `unlock` function releases the liquidity that was locked in the option when it was active and the premiums that are distributed pro rata among the liquidity providers."},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdraw",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"The liquidity tranche ID"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool plus the net positive P&L earned or minus the net negative P&L lost on providing liquidity and selling options."},"withdrawWithoutHedge(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdrawWithoutHedge",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"ID of liquidity tranche"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool by the hedged liquidity tranches providers in case of an urgent need to withdraw the liquidity without receiving the loss compensation from the hedging pool: the net difference between the amount deposited and the withdrawal amount."}}},"contracts/Pool/HegicStakeAndCover.sol:HegicStakeAndCover":{source:"contracts/Pool/HegicStakeAndCover.sol",name:"HegicStakeAndCover",constructor:{inputs:[{internalType:"contract IERC20",name:"_hegic",type:"address"},{internalType:"contract IERC20",name:"_baseToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"Provided(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"by",type:"address"},{indexed:!1,internalType:"uint256",name:"hAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"Provided",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"Withdrawn(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"by",type:"address"},{indexed:!0,internalType:"address",name:"hegicDestination",type:"address"},{indexed:!1,internalType:"uint256",name:"hAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"Withdrawn",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"HEGIC_POOL_ROLE()":{inputs:[],name:"HEGIC_POOL_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"availableBalance()":{inputs:[],name:"availableBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"balanceOf(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"baseToken()":{inputs:[],name:"baseToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"claimProfit()":{inputs:[],name:"claimProfit",outputs:[{internalType:"uint256",name:"profit",type:"uint256"}],stateMutability:"nonpayable",type:"function",notice:"Used for claiming profits accumulated on the contract*"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"hegicToken()":{inputs:[],name:"hegicToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"payOut(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"payOut",outputs:[],stateMutability:"nonpayable",type:"function",params:{amount:"The amount to transfer*"},notice:"Used for transferring tokens for replenishing of the Hegic Operational Treasury contract"},"profitOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"profitOf",outputs:[{internalType:"uint256",name:"profitAmount",type:"uint256"}],stateMutability:"view",type:"function",params:{account:"The user address*"},notice:"Used for calculating the claimable profit"},"provide(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"provide",outputs:[],stateMutability:"nonpayable",type:"function",params:{amount:"The amount of tokens*"},notice:"Used for depositing tokens into the contract         HegicStakeAndCover should first be initialized with 'saveFreeTokens()'         before making any deposits into the contract"},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"saveFreeTokens()":{inputs:[],name:"saveFreeTokens",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Used for adding tokens to the unlockedTokenRecipient balance*"},"setWithdrawalsEnabled(bool)":{inputs:[{internalType:"bool",name:"value",type:"bool"}],name:"setWithdrawalsEnabled",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"True or false*"},notice:"Used for enabling the token transfers from the contract"},"shareOf(address)":{inputs:[{internalType:"address",name:"holder",type:"address"}],name:"shareOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{holder:"The user address*"},notice:"Used for calculating the user's balance in the base token"},"startBalance(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"startBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"totalBalance()":{inputs:[],name:"totalBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function",params:{amount:"The amount to withdraw*",to:"The recipient address"},notice:"Used for withdrawing of deposited tokens from the contract"},"transferShare(address,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferShare",outputs:[],stateMutability:"nonpayable",type:"function",params:{account:"The user address",amount:"The share size*"},notice:"Used for setting the shares among the eligible users"},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function",params:{amount:"The amount of tokens*"},notice:"Used for withdrawing tokens from the contract"},"withdrawalsEnabled()":{inputs:[],name:"withdrawalsEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}}},"contracts/Pool/HegicStraddle.sol:HegicSTRADDLE":{source:"contracts/Pool/HegicStraddle.sol",name:"HegicSTRADDLE",title:"Hegic Protocol V8888 Put Liquidity Pool Contract",author:"0mllwntrmt3",notice:"The Put Liquidity Pool Contract*",constructor:{inputs:[{internalType:"contract IERC20",name:"_token",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IOptionsManager",name:"manager",type:"address"},{internalType:"contract IPriceCalculator",name:"_pricer",type:"address"},{internalType:"contract IHegicStaking",name:"_settlementFeeRecipient",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"uint8",name:"spotDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"}],name:"Acquired",type:"event"},"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"Exercised(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"profit",type:"uint256"}],name:"Exercised",type:"event"},"Expired(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"Expired",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},"Withdrawn(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"trancheID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdrawn",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"INITIAL_RATE()":{inputs:[],name:"INITIAL_RATE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-approve}."},"availableBalance()":{inputs:[],name:"availableBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the amount of liquidity available for withdrawing*"}},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721-balanceOf}."},"calculateTotalPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateTotalPremium",outputs:[{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{period:"The size of the option*"},notice:"Used for calculating the `TotalPremium` for the particular option with regards to the parameters chosen by the option buyer such as the period of holding, size (amount) and strike price."},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for exercising the ITM (in-the-money) options contracts in case of having the unrealized profits accrued during the period of holding the option contract."},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-getApproved}."},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"hedgeFeeRate()":{inputs:[],name:"hedgeFeeRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgePool()":{inputs:[],name:"hedgePool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"hedgedBalance()":{inputs:[],name:"hedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgedShare()":{inputs:[],name:"hedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC721-isApprovedForAll}."},"lockedAmount()":{inputs:[],name:"lockedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForHedgedTranches()":{inputs:[],name:"lockupPeriodForHedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForUnhedgedTranches()":{inputs:[],name:"lockupPeriodForUnhedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxDepositAmount()":{inputs:[],name:"maxDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxHedgedDepositAmount()":{inputs:[],name:"maxHedgedDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxUtilizationRate()":{inputs:[],name:"maxUtilizationRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-name}."},"options(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"options",outputs:[{internalType:"enum IHegicPool.OptionState",name:"state",type:"uint8"},{internalType:"uint256",name:"strike",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"expired",type:"uint256"},{internalType:"uint256",name:"hedgePremium",type:"uint256"},{internalType:"uint256",name:"unhedgePremium",type:"uint256"}],stateMutability:"view",type:"function"},"optionsManager()":{inputs:[],name:"optionsManager",outputs:[{internalType:"contract IOptionsManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-ownerOf}."},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPriceCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Returns the amount of unrealized P&L of the option that could be received by the option holder in case if she exercises it as an ITM (in-the-money) option."},"provideFrom(address,uint256,bool,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"},{internalType:"uint256",name:"minShare",type:"uint256"}],name:"provideFrom",outputs:[{internalType:"uint256",name:"share",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{account:"The liquidity provider's address",amount:"The size of the liquidity tranche",hedged:"The type of the liquidity tranche",minShare:"The minimum share in the pool for the user*"},notice:"Used for depositing the funds into the pool and minting the liquidity tranche ERC721 token which represents the liquidity provider's share in the pool and her unrealized P&L for this tranche."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"sellOption(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"sellOption",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option size",holder:"The option buyer address",period:"The option period",strike:"The option strike"},returns:{id:"ID of ERC721 token linked to the option*"},notice:"Used for selling the options contracts with the parameters chosen by the option buyer such as the period of holding, option size (amount), strike price and the premium to be paid for the option."},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-setApprovalForAll}."},"setCollateralizationRatio(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setCollateralizationRatio",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization ratio in a range of 30% — 100%*"},notice:"Used for setting the collateralization ratio for the option collateral size that will be locked at the moment of buying them. Example: if `CollateralizationRatio` = 50, then 50% of an option's notional size will be locked in the pools at the moment of buying it: say, 1 ETH call option will be collateralized with 0.5 ETH (50%). Note that if an option holder's net P&L USD value (as options are cash-settled) will exceed the amount of the collateral locked in the option, she will receive the required amount at the moment of exercising the option using the pool's unutilized (unlocked) funds."},"setHedgePool(address)":{inputs:[{internalType:"address",name:"value",type:"address"}],name:"setHedgePool",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The address for receiving hedging premiums*"},notice:"Used for changing the hedging pool address that will be accumulating the hedging premiums paid as a share of the total premium redirected to this address."},"setLockupPeriod(uint256,uint256)":{inputs:[{internalType:"uint256",name:"hedgedValue",type:"uint256"},{internalType:"uint256",name:"unhedgedValue",type:"uint256"}],name:"setLockupPeriod",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedgedValue:"Hedged liquidity tranches lock-up in seconds",unhedgedValue:"Unhedged (classic) liquidity tranches lock-up in seconds*"},notice:"Used for setting the liquidity lock-up periods during which the liquidity providers who deposited the funds into the pools contracts won't be able to withdraw them. Note that different lock-ups could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxDepositAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"total",type:"uint256"},{internalType:"uint256",name:"hedged",type:"uint256"}],name:"setMaxDepositAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedged:"Maximum amount of assets in the pool in hedged liquidity tranches only*",total:"Maximum amount of assets in the pool in hedged and unhedged (classic) liquidity tranches combined"},notice:"Used for setting the total maximum amount that could be deposited into the pools contracts. Note that different total maximum amounts could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxUtilizationRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setMaxUtilizationRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The utilization ratio in a range of 50% — 100%*"},notice:"Used for setting the maximum share of the pool size that could be utilized as a collateral in the options. Example: if `MaxUtilizationRate` = 50, then only 50% of liquidity on the pools contracts would be used for collateralizing options while 50% will be sitting idle available for withdrawals by the liquidity providers."},"setPriceCalculator(address)":{inputs:[{internalType:"contract IPriceCalculator",name:"pc",type:"address"}],name:"setPriceCalculator",outputs:[],stateMutability:"nonpayable",type:"function",params:{pc:"A new price calculator contract address*"},notice:"Used for setting the price calculator contract that will be used for pricing the options."},"setSettlementFeeRecipient(address)":{inputs:[{internalType:"contract IHegicStaking",name:"recipient",type:"address"}],name:"setSettlementFeeRecipient",outputs:[],stateMutability:"nonpayable",type:"function",params:{recipient:"New staking contract address*"},notice:"Used for changing the `settlementFeeRecipient` contract address for distributing the settlement fees (staking rewards) among the staking participants."},"settlementFeeRecipient()":{inputs:[],name:"settlementFeeRecipient",outputs:[{internalType:"contract ISettlementFeeRecipient",name:"",type:"address"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See EIP-165: ERC-165 Standard Interface Detection https://eips.ethereum.org/EIPS/eip-165.*"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-symbol}."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenURI(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-tokenURI}."},"totalBalance()":{inputs:[],name:"totalBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the total balance of liquidity provided to the pool*"}},"tranches(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tranches",outputs:[{internalType:"enum IHegicPool.TrancheState",name:"state",type:"uint8"},{internalType:"uint256",name:"share",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"creationTimestamp",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"}],stateMutability:"view",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-transferFrom}."},"unhedgedBalance()":{inputs:[],name:"unhedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unhedgedShare()":{inputs:[],name:"unhedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for unlocking the expired OTM (out-of-the-money) options contracts in case if there was no unrealized P&L accrued during the period of holding a particular option. Note that the `unlock` function releases the liquidity that was locked in the option when it was active and the premiums that are distributed pro rata among the liquidity providers."},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdraw",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"The liquidity tranche ID"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool plus the net positive P&L earned or minus the net negative P&L lost on providing liquidity and selling options."},"withdrawWithoutHedge(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdrawWithoutHedge",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"ID of liquidity tranche"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool by the hedged liquidity tranches providers in case of an urgent need to withdraw the liquidity without receiving the loss compensation from the hedging pool: the net difference between the amount deposited and the withdrawal amount."}}},"contracts/Pool/HegicStrap.sol:HegicSTRAP":{source:"contracts/Pool/HegicStrap.sol",name:"HegicSTRAP",title:"Hegic Protocol V8888 Put Liquidity Pool Contract",author:"0mllwntrmt3",notice:"The Put Liquidity Pool Contract*",constructor:{inputs:[{internalType:"contract IERC20",name:"_token",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IOptionsManager",name:"manager",type:"address"},{internalType:"contract IPriceCalculator",name:"_pricer",type:"address"},{internalType:"contract IHegicStaking",name:"_settlementFeeRecipient",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"uint8",name:"spotDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"}],name:"Acquired",type:"event"},"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"Exercised(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"profit",type:"uint256"}],name:"Exercised",type:"event"},"Expired(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"Expired",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},"Withdrawn(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"trancheID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdrawn",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"INITIAL_RATE()":{inputs:[],name:"INITIAL_RATE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-approve}."},"availableBalance()":{inputs:[],name:"availableBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the amount of liquidity available for withdrawing*"}},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721-balanceOf}."},"calculateTotalPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateTotalPremium",outputs:[{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{period:"The size of the option*"},notice:"Used for calculating the `TotalPremium` for the particular option with regards to the parameters chosen by the option buyer such as the period of holding, size (amount) and strike price."},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for exercising the ITM (in-the-money) options contracts in case of having the unrealized profits accrued during the period of holding the option contract."},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-getApproved}."},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"hedgeFeeRate()":{inputs:[],name:"hedgeFeeRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgePool()":{inputs:[],name:"hedgePool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"hedgedBalance()":{inputs:[],name:"hedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgedShare()":{inputs:[],name:"hedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC721-isApprovedForAll}."},"lockedAmount()":{inputs:[],name:"lockedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForHedgedTranches()":{inputs:[],name:"lockupPeriodForHedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForUnhedgedTranches()":{inputs:[],name:"lockupPeriodForUnhedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxDepositAmount()":{inputs:[],name:"maxDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxHedgedDepositAmount()":{inputs:[],name:"maxHedgedDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxUtilizationRate()":{inputs:[],name:"maxUtilizationRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-name}."},"options(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"options",outputs:[{internalType:"enum IHegicPool.OptionState",name:"state",type:"uint8"},{internalType:"uint256",name:"strike",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"expired",type:"uint256"},{internalType:"uint256",name:"hedgePremium",type:"uint256"},{internalType:"uint256",name:"unhedgePremium",type:"uint256"}],stateMutability:"view",type:"function"},"optionsManager()":{inputs:[],name:"optionsManager",outputs:[{internalType:"contract IOptionsManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-ownerOf}."},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPriceCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Returns the amount of unrealized P&L of the option that could be received by the option holder in case if she exercises it as an ITM (in-the-money) option."},"provideFrom(address,uint256,bool,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"},{internalType:"uint256",name:"minShare",type:"uint256"}],name:"provideFrom",outputs:[{internalType:"uint256",name:"share",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{account:"The liquidity provider's address",amount:"The size of the liquidity tranche",hedged:"The type of the liquidity tranche",minShare:"The minimum share in the pool for the user*"},notice:"Used for depositing the funds into the pool and minting the liquidity tranche ERC721 token which represents the liquidity provider's share in the pool and her unrealized P&L for this tranche."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"sellOption(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"sellOption",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option size",holder:"The option buyer address",period:"The option period",strike:"The option strike"},returns:{id:"ID of ERC721 token linked to the option*"},notice:"Used for selling the options contracts with the parameters chosen by the option buyer such as the period of holding, option size (amount), strike price and the premium to be paid for the option."},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-setApprovalForAll}."},"setCollateralizationRatio(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setCollateralizationRatio",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization ratio in a range of 30% — 100%*"},notice:"Used for setting the collateralization ratio for the option collateral size that will be locked at the moment of buying them. Example: if `CollateralizationRatio` = 50, then 50% of an option's notional size will be locked in the pools at the moment of buying it: say, 1 ETH call option will be collateralized with 0.5 ETH (50%). Note that if an option holder's net P&L USD value (as options are cash-settled) will exceed the amount of the collateral locked in the option, she will receive the required amount at the moment of exercising the option using the pool's unutilized (unlocked) funds."},"setHedgePool(address)":{inputs:[{internalType:"address",name:"value",type:"address"}],name:"setHedgePool",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The address for receiving hedging premiums*"},notice:"Used for changing the hedging pool address that will be accumulating the hedging premiums paid as a share of the total premium redirected to this address."},"setLockupPeriod(uint256,uint256)":{inputs:[{internalType:"uint256",name:"hedgedValue",type:"uint256"},{internalType:"uint256",name:"unhedgedValue",type:"uint256"}],name:"setLockupPeriod",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedgedValue:"Hedged liquidity tranches lock-up in seconds",unhedgedValue:"Unhedged (classic) liquidity tranches lock-up in seconds*"},notice:"Used for setting the liquidity lock-up periods during which the liquidity providers who deposited the funds into the pools contracts won't be able to withdraw them. Note that different lock-ups could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxDepositAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"total",type:"uint256"},{internalType:"uint256",name:"hedged",type:"uint256"}],name:"setMaxDepositAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedged:"Maximum amount of assets in the pool in hedged liquidity tranches only*",total:"Maximum amount of assets in the pool in hedged and unhedged (classic) liquidity tranches combined"},notice:"Used for setting the total maximum amount that could be deposited into the pools contracts. Note that different total maximum amounts could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxUtilizationRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setMaxUtilizationRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The utilization ratio in a range of 50% — 100%*"},notice:"Used for setting the maximum share of the pool size that could be utilized as a collateral in the options. Example: if `MaxUtilizationRate` = 50, then only 50% of liquidity on the pools contracts would be used for collateralizing options while 50% will be sitting idle available for withdrawals by the liquidity providers."},"setPriceCalculator(address)":{inputs:[{internalType:"contract IPriceCalculator",name:"pc",type:"address"}],name:"setPriceCalculator",outputs:[],stateMutability:"nonpayable",type:"function",params:{pc:"A new price calculator contract address*"},notice:"Used for setting the price calculator contract that will be used for pricing the options."},"setSettlementFeeRecipient(address)":{inputs:[{internalType:"contract IHegicStaking",name:"recipient",type:"address"}],name:"setSettlementFeeRecipient",outputs:[],stateMutability:"nonpayable",type:"function",params:{recipient:"New staking contract address*"},notice:"Used for changing the `settlementFeeRecipient` contract address for distributing the settlement fees (staking rewards) among the staking participants."},"settlementFeeRecipient()":{inputs:[],name:"settlementFeeRecipient",outputs:[{internalType:"contract ISettlementFeeRecipient",name:"",type:"address"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See EIP-165: ERC-165 Standard Interface Detection https://eips.ethereum.org/EIPS/eip-165.*"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-symbol}."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenURI(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-tokenURI}."},"totalBalance()":{inputs:[],name:"totalBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the total balance of liquidity provided to the pool*"}},"tranches(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tranches",outputs:[{internalType:"enum IHegicPool.TrancheState",name:"state",type:"uint8"},{internalType:"uint256",name:"share",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"creationTimestamp",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"}],stateMutability:"view",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-transferFrom}."},"unhedgedBalance()":{inputs:[],name:"unhedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unhedgedShare()":{inputs:[],name:"unhedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for unlocking the expired OTM (out-of-the-money) options contracts in case if there was no unrealized P&L accrued during the period of holding a particular option. Note that the `unlock` function releases the liquidity that was locked in the option when it was active and the premiums that are distributed pro rata among the liquidity providers."},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdraw",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"The liquidity tranche ID"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool plus the net positive P&L earned or minus the net negative P&L lost on providing liquidity and selling options."},"withdrawWithoutHedge(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdrawWithoutHedge",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"ID of liquidity tranche"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool by the hedged liquidity tranches providers in case of an urgent need to withdraw the liquidity without receiving the loss compensation from the hedging pool: the net difference between the amount deposited and the withdrawal amount."}}},"contracts/Pool/HegicStrip.sol:HegicSTRIP":{source:"contracts/Pool/HegicStrip.sol",name:"HegicSTRIP",title:"Hegic Protocol V8888 Put Liquidity Pool Contract",author:"0mllwntrmt3",notice:"The Put Liquidity Pool Contract*",constructor:{inputs:[{internalType:"contract IERC20",name:"_token",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IOptionsManager",name:"manager",type:"address"},{internalType:"contract IPriceCalculator",name:"_pricer",type:"address"},{internalType:"contract IHegicStaking",name:"_settlementFeeRecipient",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"uint8",name:"spotDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"settlementFee",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"}],name:"Acquired",type:"event"},"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},"ApprovalForAll(address,address,bool)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},"Exercised(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"profit",type:"uint256"}],name:"Exercised",type:"event"},"Expired(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"Expired",type:"event"},"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},"Withdrawn(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"trancheID",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdrawn",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"INITIAL_RATE()":{inputs:[],name:"INITIAL_RATE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"approve(address,uint256)":{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-approve}."},"availableBalance()":{inputs:[],name:"availableBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the amount of liquidity available for withdrawing*"}},"balanceOf(address)":{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC721-balanceOf}."},"calculateTotalPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateTotalPremium",outputs:[{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{period:"The size of the option*"},notice:"Used for calculating the `TotalPremium` for the particular option with regards to the parameters chosen by the option buyer such as the period of holding, size (amount) and strike price."},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for exercising the ITM (in-the-money) options contracts in case of having the unrealized profits accrued during the period of holding the option contract."},"getApproved(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-getApproved}."},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"hedgeFeeRate()":{inputs:[],name:"hedgeFeeRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgePool()":{inputs:[],name:"hedgePool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"hedgedBalance()":{inputs:[],name:"hedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"hedgedShare()":{inputs:[],name:"hedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"isApprovedForAll(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC721-isApprovedForAll}."},"lockedAmount()":{inputs:[],name:"lockedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForHedgedTranches()":{inputs:[],name:"lockupPeriodForHedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockupPeriodForUnhedgedTranches()":{inputs:[],name:"lockupPeriodForUnhedgedTranches",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxDepositAmount()":{inputs:[],name:"maxDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxHedgedDepositAmount()":{inputs:[],name:"maxHedgedDepositAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxUtilizationRate()":{inputs:[],name:"maxUtilizationRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-name}."},"options(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"options",outputs:[{internalType:"enum IHegicPool.OptionState",name:"state",type:"uint8"},{internalType:"uint256",name:"strike",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"lockedAmount",type:"uint256"},{internalType:"uint256",name:"expired",type:"uint256"},{internalType:"uint256",name:"hedgePremium",type:"uint256"},{internalType:"uint256",name:"unhedgePremium",type:"uint256"}],stateMutability:"view",type:"function"},"optionsManager()":{inputs:[],name:"optionsManager",outputs:[{internalType:"contract IOptionsManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"ownerOf(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"See {IERC721-ownerOf}."},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPriceCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Returns the amount of unrealized P&L of the option that could be received by the option holder in case if she exercises it as an ITM (in-the-money) option."},"provideFrom(address,uint256,bool,uint256)":{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"},{internalType:"uint256",name:"minShare",type:"uint256"}],name:"provideFrom",outputs:[{internalType:"uint256",name:"share",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{account:"The liquidity provider's address",amount:"The size of the liquidity tranche",hedged:"The type of the liquidity tranche",minShare:"The minimum share in the pool for the user*"},notice:"Used for depositing the funds into the pool and minting the liquidity tranche ERC721 token which represents the liquidity provider's share in the pool and her unrealized P&L for this tranche."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"safeTransferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-safeTransferFrom}."},"sellOption(address,uint256,uint256,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"sellOption",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option size",holder:"The option buyer address",period:"The option period",strike:"The option strike"},returns:{id:"ID of ERC721 token linked to the option*"},notice:"Used for selling the options contracts with the parameters chosen by the option buyer such as the period of holding, option size (amount), strike price and the premium to be paid for the option."},"setApprovalForAll(address,bool)":{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-setApprovalForAll}."},"setCollateralizationRatio(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setCollateralizationRatio",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization ratio in a range of 30% — 100%*"},notice:"Used for setting the collateralization ratio for the option collateral size that will be locked at the moment of buying them. Example: if `CollateralizationRatio` = 50, then 50% of an option's notional size will be locked in the pools at the moment of buying it: say, 1 ETH call option will be collateralized with 0.5 ETH (50%). Note that if an option holder's net P&L USD value (as options are cash-settled) will exceed the amount of the collateral locked in the option, she will receive the required amount at the moment of exercising the option using the pool's unutilized (unlocked) funds."},"setHedgePool(address)":{inputs:[{internalType:"address",name:"value",type:"address"}],name:"setHedgePool",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The address for receiving hedging premiums*"},notice:"Used for changing the hedging pool address that will be accumulating the hedging premiums paid as a share of the total premium redirected to this address."},"setLockupPeriod(uint256,uint256)":{inputs:[{internalType:"uint256",name:"hedgedValue",type:"uint256"},{internalType:"uint256",name:"unhedgedValue",type:"uint256"}],name:"setLockupPeriod",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedgedValue:"Hedged liquidity tranches lock-up in seconds",unhedgedValue:"Unhedged (classic) liquidity tranches lock-up in seconds*"},notice:"Used for setting the liquidity lock-up periods during which the liquidity providers who deposited the funds into the pools contracts won't be able to withdraw them. Note that different lock-ups could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxDepositAmount(uint256,uint256)":{inputs:[{internalType:"uint256",name:"total",type:"uint256"},{internalType:"uint256",name:"hedged",type:"uint256"}],name:"setMaxDepositAmount",outputs:[],stateMutability:"nonpayable",type:"function",params:{hedged:"Maximum amount of assets in the pool in hedged liquidity tranches only*",total:"Maximum amount of assets in the pool in hedged and unhedged (classic) liquidity tranches combined"},notice:"Used for setting the total maximum amount that could be deposited into the pools contracts. Note that different total maximum amounts could be set for the hedged and unhedged — classic — liquidity tranches."},"setMaxUtilizationRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setMaxUtilizationRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The utilization ratio in a range of 50% — 100%*"},notice:"Used for setting the maximum share of the pool size that could be utilized as a collateral in the options. Example: if `MaxUtilizationRate` = 50, then only 50% of liquidity on the pools contracts would be used for collateralizing options while 50% will be sitting idle available for withdrawals by the liquidity providers."},"setPriceCalculator(address)":{inputs:[{internalType:"contract IPriceCalculator",name:"pc",type:"address"}],name:"setPriceCalculator",outputs:[],stateMutability:"nonpayable",type:"function",params:{pc:"A new price calculator contract address*"},notice:"Used for setting the price calculator contract that will be used for pricing the options."},"setSettlementFeeRecipient(address)":{inputs:[{internalType:"contract IHegicStaking",name:"recipient",type:"address"}],name:"setSettlementFeeRecipient",outputs:[],stateMutability:"nonpayable",type:"function",params:{recipient:"New staking contract address*"},notice:"Used for changing the `settlementFeeRecipient` contract address for distributing the settlement fees (staking rewards) among the staking participants."},"settlementFeeRecipient()":{inputs:[],name:"settlementFeeRecipient",outputs:[{internalType:"contract ISettlementFeeRecipient",name:"",type:"address"}],stateMutability:"view",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See EIP-165: ERC-165 Standard Interface Detection https://eips.ethereum.org/EIPS/eip-165.*"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-symbol}."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"tokenURI(uint256)":{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"See {IERC721Metadata-tokenURI}."},"totalBalance()":{inputs:[],name:"totalBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function",returns:{balance:"Returns the total balance of liquidity provided to the pool*"}},"tranches(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"tranches",outputs:[{internalType:"enum IHegicPool.TrancheState",name:"state",type:"uint8"},{internalType:"uint256",name:"share",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"creationTimestamp",type:"uint256"},{internalType:"bool",name:"hedged",type:"bool"}],stateMutability:"view",type:"function"},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function",details:"See {IERC721-transferFrom}."},"unhedgedBalance()":{inputs:[],name:"unhedgedBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unhedgedShare()":{inputs:[],name:"unhedgedShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"unlock(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{id:"ID of ERC721 token linked to the option*"},notice:"Used for unlocking the expired OTM (out-of-the-money) options contracts in case if there was no unrealized P&L accrued during the period of holding a particular option. Note that the `unlock` function releases the liquidity that was locked in the option when it was active and the premiums that are distributed pro rata among the liquidity providers."},"withdraw(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdraw",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"The liquidity tranche ID"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool plus the net positive P&L earned or minus the net negative P&L lost on providing liquidity and selling options."},"withdrawWithoutHedge(uint256)":{inputs:[{internalType:"uint256",name:"trancheID",type:"uint256"}],name:"withdrawWithoutHedge",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{trancheID:"ID of liquidity tranche"},returns:{amount:"The amount received after the withdrawal*"},notice:"Used for withdrawing the funds from the pool by the hedged liquidity tranches providers in case of an urgent need to withdraw the liquidity without receiving the loss compensation from the hedging pool: the net difference between the amount deposited and the withdrawal amount."}}},"contracts/Pool/IHegicOperationalTreasury.sol:IHegicOperationalTreasury":{source:"contracts/Pool/IHegicOperationalTreasury.sol",name:"IHegicOperationalTreasury",events:{"Expired(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"Expired",type:"event"},"Paid(uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Paid",type:"event"},"Replenished(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Replenished",type:"event"}},methods:{"benchmark()":{inputs:[],name:"benchmark",outputs:[{internalType:"uint256",name:"benchmark",type:"uint256"}],stateMutability:"view",type:"function"},"getStakeAndCoverBalance()":{inputs:[],name:"getStakeAndCoverBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},"lockLiquidityFor(address,uint128,uint32)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint128",name:"abligation",type:"uint128"},{internalType:"uint32",name:"expiration",type:"uint32"}],name:"lockLiquidityFor",outputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],stateMutability:"nonpayable",type:"function"},"lockedByStrategy(address)":{inputs:[{internalType:"address",name:"strategy",type:"address"}],name:"lockedByStrategy",outputs:[{internalType:"uint256",name:"lockedAmount",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLiquidity(uint256)":{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"lockedLiquidity",outputs:[{internalType:"enum IHegicOperationalTreasury.LockedLiquidityState",name:"state",type:"uint8"},{internalType:"address",name:"strategy",type:"address"},{internalType:"uint128",name:"abligation",type:"uint128"},{internalType:"uint128",name:"revenue",type:"uint128"},{internalType:"uint32",name:"expiration",type:"uint32"}],stateMutability:"view",type:"function"},"lockedPremium()":{inputs:[],name:"lockedPremium",outputs:[{internalType:"uint256",name:"lockedPremium",type:"uint256"}],stateMutability:"view",type:"function"},"manager()":{inputs:[],name:"manager",outputs:[{internalType:"contract IOptionsManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"payOff(uint256,uint256,address)":{inputs:[{internalType:"uint256",name:"lockedLiquidityID",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"account",type:"address"}],name:"payOff",outputs:[],stateMutability:"nonpayable",type:"function"},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalBalance()":{inputs:[],name:"totalBalance",outputs:[{internalType:"uint256",name:"totalBalance",type:"uint256"}],stateMutability:"view",type:"function"},"totalLocked()":{inputs:[],name:"totalLocked",outputs:[{internalType:"uint256",name:"totalLocked",type:"uint256"}],stateMutability:"view",type:"function"},"unlock(uint256)":{inputs:[{internalType:"uint256",name:"lockedLiquidityID",type:"uint256"}],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function",params:{lockedLiquidityID:"The option contract ID*"},notice:"Used for unlocking liquidity after an expiration"}}},"contracts/Pool/IHegicStakeAndCover.sol:IHegicStakeAndCover":{source:"contracts/Pool/IHegicStakeAndCover.sol",name:"IHegicStakeAndCover",events:{"Provided(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"by",type:"address"},{indexed:!1,internalType:"uint256",name:"hAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"Provided",type:"event"},"Withdrawn(address,address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"by",type:"address"},{indexed:!0,internalType:"address",name:"hegicDestination",type:"address"},{indexed:!1,internalType:"uint256",name:"hAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenAmount",type:"uint256"}],name:"Withdrawn",type:"event"}},methods:{"availableBalance()":{inputs:[],name:"availableBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"payOut(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"payOut",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/PriceCalculators/AdaptivePriceCalculator.sol:AdaptivePriceCalculator":{source:"contracts/PriceCalculators/AdaptivePriceCalculator.sol",name:"AdaptivePriceCalculator",title:"Hegic Protocol V8888 Price Calculator Contract",author:"0mllwntrmt3",notice:"The contract that calculates the options prices (the premiums) that are adjusted through the `ImpliedVolRate` parameter.*",constructor:{inputs:[{internalType:"uint256",name:"initialRate",type:"uint256"},{internalType:"uint256",name:"priceCorrectorRate",type:"uint256"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IHegicPool",name:"_pool",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetBorders(uint256[3])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[3]",name:"values",type:"uint256[3]"}],name:"SetBorders",type:"event"},"SetDiscountCall(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountCall",type:"event"},"SetDiscountPut(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountPut",type:"event"},"SetDiscountSpread(uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"values",type:"uint8"}],name:"SetDiscountSpread",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetImpliedVolRates(uint256[4])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[4]",name:"values",type:"uint256[4]"}],name:"SetImpliedVolRates",type:"event"},"SetPeriodLimits(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"min",type:"uint256"},{indexed:!1,internalType:"uint256",name:"max",type:"uint256"}],name:"SetPeriodLimits",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"SetStrikePercentage(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetStrikePercentage",type:"event"}},methods:{"calculatePremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period",strike:"The option strike*"}},"calculateTotalPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateTotalPremium",outputs:[{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period in seconds (1 days <= period <= 90 days)",strike:"The option strike"},returns:{premium:"The part of the premium that is distributed among the liquidity providers*",settlementFee:"The part of the premium that is distributed among the HEGIC staking participants"},notice:"Used for calculating the options prices"},"impliedVolRate()":{inputs:[],name:"impliedVolRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxPeriod()":{inputs:[],name:"maxPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minPeriod()":{inputs:[],name:"minPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicPool",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceCorrectionRate()":{inputs:[],name:"priceCorrectionRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"round(uint256,uint8)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint8",name:"decimals",type:"uint8"}],name:"round",outputs:[{internalType:"uint256",name:"roundedValue",type:"uint256"}],stateMutability:"pure",type:"function"},"setImpliedVolRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setImpliedVolRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"New IVRate value*"},notice:"Used for adjusting the options prices (the premiums) while balancing the asset's implied volatility rate."},"setPeriodLimits(uint256,uint256)":{inputs:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],name:"setPeriodLimits",outputs:[],stateMutability:"nonpayable",type:"function"},"setPriceCorrectionRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setPriceCorrectionRate",outputs:[],stateMutability:"nonpayable",type:"function"},"setSettlementFeeShare(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setSettlementFeeShare",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"New settlementFeeShare value*"},notice:"Used for adjusting the options prices (the premiums) while balancing the asset's implied volatility rate."},"setUtilizationRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setUtilizationRate",outputs:[],stateMutability:"nonpayable",type:"function"},"settlementFeeShare()":{inputs:[],name:"settlementFeeShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"utilizationRate()":{inputs:[],name:"utilizationRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/PriceCalculators/AdaptivePriceCalculator.sol:AdaptivePutPriceCalculator":{source:"contracts/PriceCalculators/AdaptivePriceCalculator.sol",name:"AdaptivePutPriceCalculator",constructor:{inputs:[{internalType:"uint256",name:"initialRate",type:"uint256"},{internalType:"uint256",name:"priceCorrectorRate",type:"uint256"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IHegicPool",name:"_pool",type:"address"},{internalType:"uint8",name:"spotDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetBorders(uint256[3])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[3]",name:"values",type:"uint256[3]"}],name:"SetBorders",type:"event"},"SetDiscountCall(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountCall",type:"event"},"SetDiscountPut(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountPut",type:"event"},"SetDiscountSpread(uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"values",type:"uint8"}],name:"SetDiscountSpread",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetImpliedVolRates(uint256[4])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[4]",name:"values",type:"uint256[4]"}],name:"SetImpliedVolRates",type:"event"},"SetPeriodLimits(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"min",type:"uint256"},{indexed:!1,internalType:"uint256",name:"max",type:"uint256"}],name:"SetPeriodLimits",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"SetStrikePercentage(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetStrikePercentage",type:"event"}},methods:{"calculatePremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period",strike:"The option strike*"}},"calculateTotalPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateTotalPremium",outputs:[{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period in seconds (1 days <= period <= 90 days)",strike:"The option strike"},returns:{premium:"The part of the premium that is distributed among the liquidity providers*",settlementFee:"The part of the premium that is distributed among the HEGIC staking participants"},notice:"Used for calculating the options prices"},"impliedVolRate()":{inputs:[],name:"impliedVolRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxPeriod()":{inputs:[],name:"maxPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minPeriod()":{inputs:[],name:"minPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicPool",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceCorrectionRate()":{inputs:[],name:"priceCorrectionRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"round(uint256,uint8)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint8",name:"decimals",type:"uint8"}],name:"round",outputs:[{internalType:"uint256",name:"roundedValue",type:"uint256"}],stateMutability:"pure",type:"function"},"setImpliedVolRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setImpliedVolRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"New IVRate value*"},notice:"Used for adjusting the options prices (the premiums) while balancing the asset's implied volatility rate."},"setPeriodLimits(uint256,uint256)":{inputs:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],name:"setPeriodLimits",outputs:[],stateMutability:"nonpayable",type:"function"},"setPriceCorrectionRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setPriceCorrectionRate",outputs:[],stateMutability:"nonpayable",type:"function"},"setSettlementFeeShare(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setSettlementFeeShare",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"New settlementFeeShare value*"},notice:"Used for adjusting the options prices (the premiums) while balancing the asset's implied volatility rate."},"setUtilizationRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setUtilizationRate",outputs:[],stateMutability:"nonpayable",type:"function"},"settlementFeeShare()":{inputs:[],name:"settlementFeeShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"utilizationRate()":{inputs:[],name:"utilizationRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/PriceCalculators/BasePriceCalculator.sol:BasePriceCalculator":{source:"contracts/PriceCalculators/BasePriceCalculator.sol",name:"BasePriceCalculator",title:"Hegic Protocol V8888 Price Calculator Contract",author:"0mllwntrmt3",notice:"The contract that calculates the options prices (the premiums)*",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetBorders(uint256[3])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[3]",name:"values",type:"uint256[3]"}],name:"SetBorders",type:"event"},"SetDiscountCall(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountCall",type:"event"},"SetDiscountPut(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountPut",type:"event"},"SetDiscountSpread(uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"values",type:"uint8"}],name:"SetDiscountSpread",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetImpliedVolRates(uint256[4])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[4]",name:"values",type:"uint256[4]"}],name:"SetImpliedVolRates",type:"event"},"SetPeriodLimits(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"min",type:"uint256"},{indexed:!1,internalType:"uint256",name:"max",type:"uint256"}],name:"SetPeriodLimits",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"SetStrikePercentage(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetStrikePercentage",type:"event"}},methods:{"calculatePremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period",strike:"The option strike*"}},"maxPeriod()":{inputs:[],name:"maxPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minPeriod()":{inputs:[],name:"minPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setPeriodLimits(uint256,uint256)":{inputs:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],name:"setPeriodLimits",outputs:[],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/PriceCalculators/BlackScholes.sol:BlackScholes":{source:"contracts/PriceCalculators/BlackScholes.sol",name:"BlackScholes",title:"BlackScholes",author:"Lyra",details:"Contract to compute the black scholes price of options. Where the unit is unspecified, it should be treated as a PRECISE_DECIMAL, which has 1e27 units of precision. The default decimal matches the ethereum standard of 1e18 units of precision.",methods:{"abs(int256)":{inputs:[{internalType:"int256",name:"x",type:"int256"}],name:"abs",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",details:"Returns absolute value of an int as a uint."},"exp(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"exp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",details:"Returns the exponent of the value using taylor expansion with range reduction."},"exp(int256)":{inputs:[{internalType:"int256",name:"x",type:"int256"}],name:"exp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",details:"Returns the exponent of the value using taylor expansion with range reduction, with support for negative numbers."},"optionPrices(uint256,uint256,uint256,uint256,int256)":{inputs:[{internalType:"uint256",name:"timeToExpirySec",type:"uint256"},{internalType:"uint256",name:"volatilityDecimal",type:"uint256"},{internalType:"uint256",name:"spotDecimal",type:"uint256"},{internalType:"uint256",name:"strikeDecimal",type:"uint256"},{internalType:"int256",name:"rateDecimal",type:"int256"}],name:"optionPrices",outputs:[{internalType:"uint256",name:"call",type:"uint256"},{internalType:"uint256",name:"put",type:"uint256"}],stateMutability:"pure",type:"function",details:"Returns call and put prices for options with given parameters.",params:{rateDecimal:"The percentage risk free rate + carry cost",spotDecimal:"The current price of the base asset",strikeDecimal:"The strike price of the option",timeToExpirySec:"Number of seconds to the expiry of the option",volatilityDecimal:"Implied volatility over the period til expiry as a percentage"}},"pricesDeltaStdVega(uint256,uint256,uint256,uint256,int256)":{inputs:[{internalType:"uint256",name:"timeToExpirySec",type:"uint256"},{internalType:"uint256",name:"volatilityDecimal",type:"uint256"},{internalType:"uint256",name:"spotDecimal",type:"uint256"},{internalType:"uint256",name:"strikeDecimal",type:"uint256"},{internalType:"int256",name:"rateDecimal",type:"int256"}],name:"pricesDeltaStdVega",outputs:[{components:[{internalType:"uint256",name:"callPrice",type:"uint256"},{internalType:"uint256",name:"putPrice",type:"uint256"},{internalType:"int256",name:"callDelta",type:"int256"},{internalType:"int256",name:"putDelta",type:"int256"},{internalType:"uint256",name:"stdVega",type:"uint256"}],internalType:"struct IBlackScholes.PricesDeltaStdVega",name:"",type:"tuple"}],stateMutability:"pure",type:"function",details:"Returns call/put prices and delta/stdVega for options with given parameters.",params:{rateDecimal:"The percentage risk free rate + carry cost",spotDecimal:"The current price of the base asset",strikeDecimal:"The strike price of the option",timeToExpirySec:"Number of seconds to the expiry of the option",volatilityDecimal:"Implied volatility over the period til expiry as a percentage"}},"sqrt(uint256)":{inputs:[{internalType:"uint256",name:"x",type:"uint256"}],name:"sqrt",outputs:[{internalType:"uint256",name:"y",type:"uint256"}],stateMutability:"pure",type:"function",details:"Returns the square root of the value using Newton's method. This ignores the unit, so numbers should be multiplied by their unit before being passed in."}}},"contracts/PriceCalculators/CombinedPriceCalculator.sol:CombinePriceCalculator":{source:"contracts/PriceCalculators/CombinedPriceCalculator.sol",name:"CombinePriceCalculator",constructor:{inputs:[{internalType:"contract IPremiumCalculator[2]",name:"_basePricers",type:"address[2]"},{internalType:"int256[2]",name:"_coeficients",type:"int256[2]"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetBorders(uint256[3])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[3]",name:"values",type:"uint256[3]"}],name:"SetBorders",type:"event"},"SetDiscountCall(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountCall",type:"event"},"SetDiscountPut(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountPut",type:"event"},"SetDiscountSpread(uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"values",type:"uint8"}],name:"SetDiscountSpread",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetImpliedVolRates(uint256[4])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[4]",name:"values",type:"uint256[4]"}],name:"SetImpliedVolRates",type:"event"},"SetPeriodLimits(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"min",type:"uint256"},{indexed:!1,internalType:"uint256",name:"max",type:"uint256"}],name:"SetPeriodLimits",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"SetStrikePercentage(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetStrikePercentage",type:"event"}},methods:{"basePricers(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"basePricers",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculatePremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period",strike:"The option strike*"}},"coeficients(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"coeficients",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},"maxPeriod()":{inputs:[],name:"maxPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minPeriod()":{inputs:[],name:"minPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setCoefficients(int256[2])":{inputs:[{internalType:"int256[2]",name:"c",type:"int256[2]"}],name:"setCoefficients",outputs:[],stateMutability:"nonpayable",type:"function"},"setPeriodLimits(uint256,uint256)":{inputs:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],name:"setPeriodLimits",outputs:[],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/PriceCalculators/IVLPriceCalculator.sol:IVLPriceCalculator":{source:"contracts/PriceCalculators/IVLPriceCalculator.sol",name:"IVLPriceCalculator",title:"Hegic Protocol V8888 Price Calculator Contract",author:"0mllwntrmt3",notice:"The contract that calculates the options prices (the premiums) that are adjusted through the `ImpliedVolRate` parameter.*",constructor:{inputs:[{internalType:"uint256",name:"initialRate",type:"uint256"},{internalType:"uint256",name:"_priceCorrectionRate",type:"uint256"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"uint8",name:"_roundedDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetBorders(uint256[3])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[3]",name:"values",type:"uint256[3]"}],name:"SetBorders",type:"event"},"SetDiscountCall(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountCall",type:"event"},"SetDiscountPut(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountPut",type:"event"},"SetDiscountSpread(uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"values",type:"uint8"}],name:"SetDiscountSpread",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetImpliedVolRates(uint256[4])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[4]",name:"values",type:"uint256[4]"}],name:"SetImpliedVolRates",type:"event"},"SetPeriodLimits(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"min",type:"uint256"},{indexed:!1,internalType:"uint256",name:"max",type:"uint256"}],name:"SetPeriodLimits",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"SetStrikePercentage(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetStrikePercentage",type:"event"}},methods:{"calculatePremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period",strike:"The option strike*"}},"calculateTotalPremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculateTotalPremium",outputs:[{internalType:"uint256",name:"settlementFee",type:"uint256"},{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period in seconds (1 days <= period <= 90 days)",strike:"The option strike"},returns:{premium:"The part of the premium that is distributed among the liquidity providers*",settlementFee:"The part of the premium that is distributed among the HEGIC staking participants"},notice:"Used for calculating the options prices"},"impliedVolRate()":{inputs:[],name:"impliedVolRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"maxPeriod()":{inputs:[],name:"maxPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minPeriod()":{inputs:[],name:"minPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceCorrectionRate()":{inputs:[],name:"priceCorrectionRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"round(uint256,uint8)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint8",name:"decimals",type:"uint8"}],name:"round",outputs:[{internalType:"uint256",name:"roundedValue",type:"uint256"}],stateMutability:"pure",type:"function"},"setImpliedVolRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setImpliedVolRate",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"New IVRate value*"},notice:"Used for adjusting the options prices (the premiums) while balancing the asset's implied volatility rate."},"setPeriodLimits(uint256,uint256)":{inputs:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],name:"setPeriodLimits",outputs:[],stateMutability:"nonpayable",type:"function"},"setPriceCorrectionRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setPriceCorrectionRate",outputs:[],stateMutability:"nonpayable",type:"function"},"setSettlementFeeShare(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setSettlementFeeShare",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"New settlementFeeShare value*"},notice:"Used for adjusting the options prices (the premiums) while balancing the asset's implied volatility rate."},"settlementFeeShare()":{inputs:[],name:"settlementFeeShare",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/PriceCalculators/PolynomialPriceCalculator.sol:PolynomialPriceCalculator":{source:"contracts/PriceCalculators/PolynomialPriceCalculator.sol",name:"PolynomialPriceCalculator",title:"Hegic Protocol V8888 Price Calculator Contract",author:"0mllwntrmt3",notice:"The contract that calculates the options prices (the premiums) that are adjusted through the `ImpliedVolRate` parameter.*",constructor:{inputs:[{internalType:"int256[5]",name:"initialCoefficients",type:"int256[5]"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"uint256",name:"_tokenDecimals",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetBorders(uint256[3])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[3]",name:"values",type:"uint256[3]"}],name:"SetBorders",type:"event"},"SetCoefficients(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetCoefficients",type:"event"},"SetDiscountCall(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountCall",type:"event"},"SetDiscountPut(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountPut",type:"event"},"SetDiscountSpread(uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"values",type:"uint8"}],name:"SetDiscountSpread",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetImpliedVolRates(uint256[4])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[4]",name:"values",type:"uint256[4]"}],name:"SetImpliedVolRates",type:"event"},"SetPeriodLimits(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"min",type:"uint256"},{indexed:!1,internalType:"uint256",name:"max",type:"uint256"}],name:"SetPeriodLimits",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"SetStrikePercentage(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetStrikePercentage",type:"event"}},methods:{"calculatePremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period",strike:"The option strike*"}},"coefficients(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"coefficients",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},"maxPeriod()":{inputs:[],name:"maxPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minPeriod()":{inputs:[],name:"minPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setCoefficients(int256[5])":{inputs:[{internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"setCoefficients",outputs:[],stateMutability:"nonpayable",type:"function",params:{values:"[i] New setCoefficients value*"},notice:"Used for adjusting the options prices (the premiums)"},"setPeriodLimits(uint256,uint256)":{inputs:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],name:"setPeriodLimits",outputs:[],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/PriceCalculators/PriceController.sol:PriceController":{source:"contracts/PriceCalculators/PriceController.sol",name:"PriceController",constructor:{inputs:[],stateMutability:"nonpayable",type:"constructor"},events:{"RoleAdminChanged(bytes32,bytes32,bytes32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"previousAdminRole",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newAdminRole",type:"bytes32"}],name:"RoleAdminChanged",type:"event"},"RoleGranted(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleGranted",type:"event"},"RoleRevoked(bytes32,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"role",type:"bytes32"},{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"}],name:"RoleRevoked",type:"event"}},methods:{"DEFAULT_ADMIN_ROLE()":{inputs:[],name:"DEFAULT_ADMIN_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"PRICE_CORRECTOR_ROLE()":{inputs:[],name:"PRICE_CORRECTOR_ROLE",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},"getRoleAdmin(bytes32)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"}],name:"getRoleAdmin",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function",details:"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"grantRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"hasRole",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"renounceRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{inputs:[{internalType:"bytes32",name:"role",type:"bytes32"},{internalType:"address",name:"account",type:"address"}],name:"revokeRole",outputs:[],stateMutability:"nonpayable",type:"function",details:"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"setCoefficients(address,int256[5])":{inputs:[{internalType:"contract PolynomialPriceCalculator",name:"calculator",type:"address"},{internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"setCoefficients",outputs:[],stateMutability:"nonpayable",type:"function"},"setDiscount(address,int256[5])":{inputs:[{internalType:"contract ScaledPolynomialPriceCalculator",name:"calculator",type:"address"},{internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"setDiscount",outputs:[],stateMutability:"nonpayable",type:"function"},"supportsInterface(bytes4)":{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",details:"See {IERC165-supportsInterface}."},"transferOwnership(address)":{inputs:[{internalType:"contract Ownable",name:"calculator",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/PriceCalculators/ScaledPolynomialPriceCalculator.sol:ScaledPolynomialPriceCalculator":{source:"contracts/PriceCalculators/ScaledPolynomialPriceCalculator.sol",name:"ScaledPolynomialPriceCalculator",constructor:{inputs:[{internalType:"uint256",name:"_priceCorrectionRate",type:"uint256"},{internalType:"uint8",name:"_roundedDecimals",type:"uint8"},{internalType:"contract IPremiumCalculator",name:"_basePricer",type:"address"},{internalType:"int256[5]",name:"initialDiscount",type:"int256[5]"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetBorders(uint256[3])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[3]",name:"values",type:"uint256[3]"}],name:"SetBorders",type:"event"},"SetDiscount(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscount",type:"event"},"SetDiscountCall(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountCall",type:"event"},"SetDiscountPut(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountPut",type:"event"},"SetDiscountSpread(uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"values",type:"uint8"}],name:"SetDiscountSpread",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetImpliedVolRates(uint256[4])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[4]",name:"values",type:"uint256[4]"}],name:"SetImpliedVolRates",type:"event"},"SetPeriodLimits(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"min",type:"uint256"},{indexed:!1,internalType:"uint256",name:"max",type:"uint256"}],name:"SetPeriodLimits",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"SetStrikePercentage(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetStrikePercentage",type:"event"}},methods:{"basePricer()":{inputs:[],name:"basePricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"calculatePremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period",strike:"The option strike*"}},"discount(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"discount",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},"maxPeriod()":{inputs:[],name:"maxPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minPeriod()":{inputs:[],name:"minPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceCorrectionRate()":{inputs:[],name:"priceCorrectionRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"round(uint256,uint8)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint8",name:"decimals",type:"uint8"}],name:"round",outputs:[{internalType:"uint256",name:"roundedValue",type:"uint256"}],stateMutability:"pure",type:"function"},"setDiscount(int256[5])":{inputs:[{internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"setDiscount",outputs:[],stateMutability:"nonpayable",type:"function",params:{values:"[i] New setDiscount value*"},notice:"Used for adjusting the options prices (the premiums)"},"setPeriodLimits(uint256,uint256)":{inputs:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],name:"setPeriodLimits",outputs:[],stateMutability:"nonpayable",type:"function"},"setPriceCorrectionRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setPriceCorrectionRate",outputs:[],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/PriceCalculators/ScaledStrikePriceCalculator.sol:ScaledStrikePriceCalculator":{source:"contracts/PriceCalculators/ScaledStrikePriceCalculator.sol",name:"ScaledStrikePriceCalculator",title:"Hegic Protocol V8888 Price Calculator Contract",author:"0mllwntrmt3",notice:"The contract that calculates the options prices (the premiums)*",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetBorders(uint256[3])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[3]",name:"values",type:"uint256[3]"}],name:"SetBorders",type:"event"},"SetDiscountCall(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountCall",type:"event"},"SetDiscountPut(int256[5])":{anonymous:!1,inputs:[{indexed:!1,internalType:"int256[5]",name:"values",type:"int256[5]"}],name:"SetDiscountPut",type:"event"},"SetDiscountSpread(uint8)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"values",type:"uint8"}],name:"SetDiscountSpread",type:"event"},"SetImpliedVolRate(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetImpliedVolRate",type:"event"},"SetImpliedVolRates(uint256[4])":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[4]",name:"values",type:"uint256[4]"}],name:"SetImpliedVolRates",type:"event"},"SetPeriodLimits(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"min",type:"uint256"},{indexed:!1,internalType:"uint256",name:"max",type:"uint256"}],name:"SetPeriodLimits",type:"event"},"SetSettlementFeeShare(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetSettlementFeeShare",type:"event"},"SetStrikePercentage(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"SetStrikePercentage",type:"event"}},methods:{"calculatePremium(uint256,uint256,uint256)":{inputs:[{internalType:"uint256",name:"period",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The option size",period:"The option period",strike:"The option strike*"}},"maxPeriod()":{inputs:[],name:"maxPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"minPeriod()":{inputs:[],name:"minPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceCorrectionRate()":{inputs:[],name:"priceCorrectionRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"round(uint256,uint8)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint8",name:"decimals",type:"uint8"}],name:"round",outputs:[{internalType:"uint256",name:"roundedValue",type:"uint256"}],stateMutability:"pure",type:"function"},"setPeriodLimits(uint256,uint256)":{inputs:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],name:"setPeriodLimits",outputs:[],stateMutability:"nonpayable",type:"function"},"setPriceCorrectionRate(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setPriceCorrectionRate",outputs:[],stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Staking/HegicStaking.sol:HegicStaking":{source:"contracts/Staking/HegicStaking.sol",name:"HegicStaking",title:"Hegic Protocol V8888 Staking Contract",author:"0mllwntrmt3",notice:"The contract that stakes the HEGIC tokens through buying the microlots (any amount of HEGIC tokens per microlot) and the staking lots (888,000 HEGIC per lot), accumulates the staking rewards (settlement fees) and distributes the staking rewards among the microlots and staking lots holders (should be claimed manually).*",constructor:{inputs:[{internalType:"contract ERC20",name:"_hegic",type:"address"},{internalType:"contract ERC20",name:"_token",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"short",type:"string"}],stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Claim(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Claim",type:"event"},"MicroLotsAcquired(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"MicroLotsAcquired",type:"event"},"MicroLotsSold(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"MicroLotsSold",type:"event"},"Profit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Profit",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"HEGIC()":{inputs:[],name:"HEGIC",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"STAKING_LOT_PRICE()":{inputs:[],name:"STAKING_LOT_PRICE",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"_revertTransfersInLockUpPeriod(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"_revertTransfersInLockUpPeriod",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},"allowance(address,address)":{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"buyMicroLot(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"buyMicroLot",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Used for staking any amount of the HEGIC tokens higher than zero in the form of buying the microlot for receiving a pro rata share of 20% of the total staking rewards (settlement fees) generated by the protocol.*"},"buyStakingLot(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"buyStakingLot",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Used for staking the fixed amount of 888,000 HEGIC tokens in the form of buying the staking lot (transferrable) for receiving a pro rata share of 80% of the total staking rewards (settlement fees) generated by the protocol.*"},"claimProfits(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"claimProfits",outputs:[{internalType:"uint256",name:"profit",type:"uint256"}],stateMutability:"nonpayable",type:"function",notice:"Used by the HEGIC microlots holders or staking lots holders for claiming the accumulated staking rewards.*"},"classicLockupPeriod()":{inputs:[],name:"classicLockupPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"distributeUnrealizedRewards()":{inputs:[],name:"distributeUnrealizedRewards",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Used for distributing the staking rewards among the microlots and staking lots holders.*"},"increaseAllowance(address,uint256)":{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"lastBoughtTimestamp(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"lastBoughtTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lastMicroBoughtTimestamp(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"lastMicroBoughtTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"microBalance(address)":{inputs:[{internalType:"address",name:"",type:"address"}],name:"microBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"microLockupPeriod()":{inputs:[],name:"microLockupPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"microLotsProfits()":{inputs:[],name:"microLotsProfits",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"microLotsTotal()":{inputs:[],name:"microLotsTotal",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"name()":{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the name of the token."},"profitOf(address)":{inputs:[{internalType:"address",name:"account",type:"address"}],name:"profitOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",notice:"Returns the amount of unclaimed staking rewards.*"},"revertTransfersInLockUpPeriod(bool)":{inputs:[{internalType:"bool",name:"value",type:"bool"}],name:"revertTransfersInLockUpPeriod",outputs:[],stateMutability:"nonpayable",type:"function"},"sellMicroLot(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"sellMicroLot",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Used for unstaking the HEGIC tokens in the form of selling the microlot.*"},"sellStakingLot(uint256)":{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"sellStakingLot",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Used for unstaking 888,000 HEGIC tokens in the form of selling the staking lot.*"},"symbol()":{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalProfit()":{inputs:[],name:"totalProfit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"totalSupply()":{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}}},"contracts/Staking/SettlementFeeDistributor.sol:SettlementFeeDistributor":{source:"contracts/Staking/SettlementFeeDistributor.sol",name:"SettlementFeeDistributor",constructor:{inputs:[{internalType:"contract ISettlementFeeRecipient",name:"staking_",type:"address"},{internalType:"contract IERC20",name:"token_",type:"address"},{internalType:"address",name:"HLTPs_",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"HLTPs()":{inputs:[],name:"HLTPs",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"distributeUnrealizedRewards()":{inputs:[],name:"distributeUnrealizedRewards",outputs:[],stateMutability:"nonpayable",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setShares(uint128,uint128)":{inputs:[{internalType:"uint128",name:"stakingShare_",type:"uint128"},{internalType:"uint128",name:"totalShare_",type:"uint128"}],name:"setShares",outputs:[],stateMutability:"nonpayable",type:"function"},"staking()":{inputs:[],name:"staking",outputs:[{internalType:"contract ISettlementFeeRecipient",name:"",type:"address"}],stateMutability:"view",type:"function"},"stakingShare()":{inputs:[],name:"stakingShare",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},"token()":{inputs:[],name:"token",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},"totalShare()":{inputs:[],name:"totalShare",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicInversStrategy.sol:HegicInversStrategy":{source:"contracts/Strategies/HegicInversStrategy.sol",name:"HegicInversStrategy",events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicStrategy.sol:HegicStrategy":{source:"contracts/Strategies/HegicStrategy.sol",name:"HegicStrategy",events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicStrategyCall.sol:HegicStrategyCall":{source:"contracts/Strategies/HegicStrategyCall.sol",name:"HegicStrategyCall",constructor:{inputs:[{internalType:"contract IHegicOperationalTreasury",name:"_pool",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IPremiumCalculator",name:"_pricer",type:"address"},{internalType:"uint8",name:"_spotDecimals",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicStrategyInversBearCallSpread.sol:HegicStrategyInversBearCallSpread":{source:"contracts/Strategies/HegicStrategyInversBearCallSpread.sol",name:"HegicStrategyInversBearCallSpread",constructor:{inputs:[{internalType:"contract IHegicOperationalTreasury",name:"_pool",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IPremiumCalculator",name:"_pricer",type:"address"},{internalType:"uint8",name:"_spotDecimals",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"percentage",type:"uint256"},{internalType:"uint8",name:"_roundedDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"strikePercentage()":{inputs:[],name:"strikePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicStrategyInversBullPutSpread.sol:HegicStrategyInversBullPutSpread":{source:"contracts/Strategies/HegicStrategyInversBullPutSpread.sol",name:"HegicStrategyInversBullPutSpread",constructor:{inputs:[{internalType:"contract IHegicOperationalTreasury",name:"_pool",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IPremiumCalculator",name:"_pricer",type:"address"},{internalType:"uint8",name:"_spotDecimals",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"percentage",type:"uint256"},{internalType:"uint8",name:"_roundedDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"strikePercentage()":{inputs:[],name:"strikePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicStrategyInversLongButterfly.sol:HegicStrategyInversLongButterfly":{source:"contracts/Strategies/HegicStrategyInversLongButterfly.sol",name:"HegicStrategyInversLongButterfly",constructor:{inputs:[{internalType:"contract IHegicOperationalTreasury",name:"_pool",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IPremiumCalculator",name:"_pricer",type:"address"},{internalType:"uint8",name:"_spotDecimals",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"percentage",type:"uint256"},{internalType:"uint8",name:"_roundedDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"strikePercentage()":{inputs:[],name:"strikePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicStrategyInversLongCondor.sol:HegicStrategyInversLongCondor":{source:"contracts/Strategies/HegicStrategyInversLongCondor.sol",name:"HegicStrategyInversLongCondor",constructor:{inputs:[{internalType:"contract IHegicOperationalTreasury",name:"_pool",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IPremiumCalculator",name:"_pricer",type:"address"},{internalType:"uint8",name:"_spotDecimals",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"percentage",type:"uint256"},{internalType:"uint8",name:"_roundedDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"strikePercentage()":{inputs:[],name:"strikePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicStrategyPut.sol:HegicStrategyPut":{source:"contracts/Strategies/HegicStrategyPut.sol",name:"HegicStrategyPut",constructor:{inputs:[{internalType:"contract IHegicOperationalTreasury",name:"_pool",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IPremiumCalculator",name:"_pricer",type:"address"},{internalType:"uint8",name:"_spotDecimals",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicStrategySpreadCall.sol:HegicStrategySpreadCall":{source:"contracts/Strategies/HegicStrategySpreadCall.sol",name:"HegicStrategySpreadCall",constructor:{inputs:[{internalType:"contract IHegicOperationalTreasury",name:"_pool",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IPremiumCalculator",name:"_pricer",type:"address"},{internalType:"uint8",name:"_spotDecimals",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"percentage",type:"uint256"},{internalType:"uint8",name:"_roundedDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"strikePercentage()":{inputs:[],name:"strikePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicStrategySpreadPut.sol:HegicStrategySpreadPut":{source:"contracts/Strategies/HegicStrategySpreadPut.sol",name:"HegicStrategySpreadPut",constructor:{inputs:[{internalType:"contract IHegicOperationalTreasury",name:"_pool",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IPremiumCalculator",name:"_pricer",type:"address"},{internalType:"uint8",name:"_spotDecimals",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"percentage",type:"uint256"},{internalType:"uint8",name:"_roundedDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"strikePercentage()":{inputs:[],name:"strikePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicStrategyStraddle.sol:HegicStrategyStraddle":{source:"contracts/Strategies/HegicStrategyStraddle.sol",name:"HegicStrategyStraddle",constructor:{inputs:[{internalType:"contract IHegicOperationalTreasury",name:"_pool",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IPremiumCalculator",name:"_pricer",type:"address"},{internalType:"uint8",name:"_spotDecimals",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicStrategyStrangle.sol:HegicStrategyStrangle":{source:"contracts/Strategies/HegicStrategyStrangle.sol",name:"HegicStrategyStrangle",constructor:{inputs:[{internalType:"contract IHegicOperationalTreasury",name:"_pool",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IPremiumCalculator",name:"_pricer",type:"address"},{internalType:"uint8",name:"_spotDecimals",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"percentage",type:"uint256"},{internalType:"uint8",name:"_roundedDecimals",type:"uint8"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"strikePercentage()":{inputs:[],name:"strikePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicStrategyStrap.sol:HegicStrategyStrap":{source:"contracts/Strategies/HegicStrategyStrap.sol",name:"HegicStrategyStrap",constructor:{inputs:[{internalType:"contract IHegicOperationalTreasury",name:"_pool",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IPremiumCalculator",name:"_pricer",type:"address"},{internalType:"uint8",name:"_spotDecimals",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/HegicStrategyStrip.sol:HegicStrategyStrip":{source:"contracts/Strategies/HegicStrategyStrip.sol",name:"HegicStrategyStrip",constructor:{inputs:[{internalType:"contract IHegicOperationalTreasury",name:"_pool",type:"address"},{internalType:"contract AggregatorV3Interface",name:"_priceProvider",type:"address"},{internalType:"contract IPremiumCalculator",name:"_pricer",type:"address"},{internalType:"uint8",name:"_spotDecimals",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"buy(address,uint32,uint128,uint256)":{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"buy",outputs:[{internalType:"uint256",name:"id",type:"uint256"}],stateMutability:"nonpayable",type:"function",params:{amount:"The option/strategy amount",holder:"The holder address",period:"The option/strategy period",strike:"The option/strategy strike*"},notice:"Used for buying options/strategies"},"calculatePremium(uint32,uint128,uint256)":{inputs:[{internalType:"uint32",name:"period",type:"uint32"},{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint256",name:"strike",type:"uint256"}],name:"calculatePremium",outputs:[{internalType:"uint256",name:"premium",type:"uint256"},{internalType:"uint256",name:"available",type:"uint256"}],stateMutability:"view",type:"function"},"collateralizationRatio()":{inputs:[],name:"collateralizationRatio",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionID:"The option/strategy ID*"},notice:"Used for exercising an in-the-money option/strategy and taking profits"},"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",notice:"Used for viewing the total liquidity locked up for a specific options strategy*"},"k()":{inputs:[],name:"k",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pool()":{inputs:[],name:"pool",outputs:[{internalType:"contract IHegicOperationalTreasury",name:"",type:"address"}],stateMutability:"view",type:"function"},"priceProvider()":{inputs:[],name:"priceProvider",outputs:[{internalType:"contract AggregatorV3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},"pricer()":{inputs:[],name:"pricer",outputs:[{internalType:"contract IPremiumCalculator",name:"",type:"address"}],stateMutability:"view",type:"function"},"profitOf(uint256)":{inputs:[{internalType:"uint256",name:"optionID",type:"uint256"}],name:"profitOf",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function",params:{amount:"The unrealized profits amount*",optionID:"The option/strategy ID"},notice:"Used for calculating the holder's option/strategy unrealized profits"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setK(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setK",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The collateralization coefficient*"},notice:"Used for setting the collateralization coefficient"},"setLimit(uint256)":{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setLimit",outputs:[],stateMutability:"nonpayable",type:"function",params:{value:"The maximum locked liquidity*"},notice:"Used for setting a limit on the total locked liquidity"},"setPricer(address)":{inputs:[{internalType:"contract IPremiumCalculator",name:"value",type:"address"}],name:"setPricer",outputs:[],stateMutability:"nonpayable",type:"function"},"strategyData(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"strategyData",outputs:[{internalType:"uint128",name:"amount",type:"uint128"},{internalType:"uint128",name:"strike",type:"uint128"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/Strategies/IHegicStrategy.sol:IHegicStrategy":{source:"contracts/Strategies/IHegicStrategy.sol",name:"IHegicStrategy",notice:"SPDX-License-Identifier: GPL-3.0-or-later Hegic Copyright (C) 2022 Hegic Protocol This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.*",events:{"Acquired(uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"strike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"Acquired",type:"event"},"AcquiredSpread(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"atmStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"otmStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredSpread",type:"event"},"AcquiredStrangle(uint256,uint256,uint256,uint256,uint256,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"premium",type:"uint256"},{indexed:!1,internalType:"uint256",name:"callStrike",type:"uint256"},{indexed:!1,internalType:"uint256",name:"putStrike",type:"uint256"},{indexed:!1,internalType:"uint32",name:"expiration",type:"uint32"}],name:"AcquiredStrangle",type:"event"},"SetLimit(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"limit",type:"uint256"}],name:"SetLimit",type:"event"}},methods:{"getLockedByStrategy()":{inputs:[],name:"getLockedByStrategy",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},"lockedLimit()":{inputs:[],name:"lockedLimit",outputs:[{internalType:"uint256",name:"lockedLimit",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/synthetix/SafeDecimalMath.sol:SafeDecimalMath":{source:"contracts/synthetix/SafeDecimalMath.sol",name:"SafeDecimalMath",methods:{"PRECISE_UNIT()":{inputs:[],name:"PRECISE_UNIT",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"UNIT()":{inputs:[],name:"UNIT",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"highPrecisionDecimals()":{inputs:[],name:"highPrecisionDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"preciseUnit()":{inputs:[],name:"preciseUnit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",returns:{_0:"Provides an interface to PRECISE_UNIT."}},"unit()":{inputs:[],name:"unit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function",returns:{_0:"Provides an interface to UNIT."}}}},"contracts/synthetix/SignedSafeDecimalMath.sol:SignedSafeDecimalMath":{source:"contracts/synthetix/SignedSafeDecimalMath.sol",name:"SignedSafeDecimalMath",methods:{"PRECISE_UNIT()":{inputs:[],name:"PRECISE_UNIT",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},"UNIT()":{inputs:[],name:"UNIT",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},"decimals()":{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"highPrecisionDecimals()":{inputs:[],name:"highPrecisionDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},"preciseUnit()":{inputs:[],name:"preciseUnit",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"pure",type:"function",returns:{_0:"Provides an interface to PRECISE_UNIT."}},"unit()":{inputs:[],name:"unit",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"pure",type:"function",returns:{_0:"Provides an interface to UNIT."}}}},"contracts/utils/ERC20Recovery.sol:ERC20Recovery":{source:"contracts/utils/ERC20Recovery.sol",name:"ERC20Recovery",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"recoverERC20(address)":{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"recoverERC20",outputs:[],stateMutability:"nonpayable",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/utils/Exerciser.sol:Exerciser":{source:"contracts/utils/Exerciser.sol",name:"Exerciser",title:"Hegic Protocol V8888 Exerciser Contract",author:"0mllwntrmt3",notice:"The contract that allows to automatically exercise options half an hour before expiration*",constructor:{inputs:[{internalType:"contract IOptionsManager",name:"manager",type:"address"}],stateMutability:"nonpayable",type:"constructor"},methods:{"exercise(uint256)":{inputs:[{internalType:"uint256",name:"optionId",type:"uint256"}],name:"exercise",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/utils/HLTPs.sol:HLTPs":{source:"contracts/utils/HLTPs.sol",name:"HLTPs",details:"A contract that allows to lock-up the rewards in the Hegic Long-Term Pools during a certain period of time.",constructor:{inputs:[{internalType:"uint256",name:"releaseTime_",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},methods:{"beneficiary()":{inputs:[],name:"beneficiary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",returns:{_0:"The beneficiary address that will distribute the rewards."}},"release(address)":{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"release",outputs:[],stateMutability:"nonpayable",type:"function",notice:"Transfers tokens locked by timelock to beneficiary."},"releaseTime()":{inputs:[],name:"releaseTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",returns:{_0:"The point of time when the rewards will be released."}}}},"contracts/utils/HegicPlaygroundFaucet.sol:Faucet":{source:"contracts/utils/HegicPlaygroundFaucet.sol",name:"Faucet",title:"Hegic Protocol V8888 Exerciser Contract",author:"0mllwntrmt3",notice:"The contract that allows to automatically exercise options half an hour before expiration*",constructor:{inputs:[{internalType:"contract ERC20Mock",name:"_pgUSD",type:"address"},{internalType:"address",name:"forwarder",type:"address"}],stateMutability:"nonpayable",type:"constructor"},receive:{stateMutability:"payable",type:"receive"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"ETHAmount()":{inputs:[],name:"ETHAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"get()":{inputs:[],name:"get",outputs:[],stateMutability:"nonpayable",type:"function"},"isTrustedForwarder(address)":{inputs:[{internalType:"address",name:"forwarder",type:"address"}],name:"isTrustedForwarder",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",notice:"return if the forwarder is trusted to forward relayed transactions to us. the forwarder is required to verify the sender's signature, and verify the call is not a replay."},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"pgUSD()":{inputs:[],name:"pgUSD",outputs:[{internalType:"contract ERC20Mock",name:"",type:"address"}],stateMutability:"view",type:"function"},"pgUSDAmount()":{inputs:[],name:"pgUSDAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"trustedForwarder()":{inputs:[],name:"trustedForwarder",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},"versionRecipient()":{inputs:[],name:"versionRecipient",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},"withdraw()":{inputs:[],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}}},"contracts/utils/HegicStakeAndCoverDistributor.sol:HegicStakeAndCoverDistributor":{source:"contracts/utils/HegicStakeAndCoverDistributor.sol",name:"HegicStakeAndCoverDistributor",constructor:{inputs:[{internalType:"contract HegicStakeAndCover",name:"_sac",type:"address"}],stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"distribute((address,uint256)[])":{inputs:[{components:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct HegicStakeAndCoverDistributor.TransferItem[]",name:"transfers",type:"tuple[]"}],name:"distribute",outputs:[],stateMutability:"nonpayable",type:"function"},"owner()":{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"recoverERC20(address)":{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"recoverERC20",outputs:[],stateMutability:"nonpayable",type:"function"},"renounceOwnership()":{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"sac()":{inputs:[],name:"sac",outputs:[{internalType:"contract HegicStakeAndCover",name:"",type:"address"}],stateMutability:"view",type:"function"},"transferOwnership(address)":{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/utils/Math.sol:HegicMath":{source:"contracts/utils/Math.sol",name:"HegicMath",notice:"SPDX-License-Identifier: GPL-3.0-or-later Hegic Copyright (C) 2021 Hegic Protocol This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.*"},"contracts/utils/TakeProfit.sol:ExerciserTakeProfit":{source:"contracts/utils/TakeProfit.sol",name:"ExerciserTakeProfit",title:"Hegic Protocol V8888 Exerciser Contract",author:"0mllwntrmt3",notice:"The contract that allows to automatically exercise options half an hour before expiration*",constructor:{inputs:[{internalType:"contract IOptionsManager",name:"manager",type:"address"},{internalType:"contract IHegicPool[]",name:"callPool",type:"address[]"},{internalType:"contract IHegicPool[]",name:"putPool",type:"address[]"}],stateMutability:"nonpayable",type:"constructor"},events:{"TakeProfitSet(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"optionId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"price",type:"uint256"}],name:"TakeProfitSet",type:"event"}},methods:{"getTakeProfitPrice(uint256)":{inputs:[{internalType:"uint256",name:"optionId",type:"uint256"}],name:"getTakeProfitPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},"optionsManager()":{inputs:[],name:"optionsManager",outputs:[{internalType:"contract IOptionsManager",name:"",type:"address"}],stateMutability:"view",type:"function"},"setTakeProfitPrice(uint256,uint256)":{inputs:[{internalType:"uint256",name:"optionId",type:"uint256"},{internalType:"uint256",name:"price",type:"uint256"}],name:"setTakeProfitPrice",outputs:[],stateMutability:"nonpayable",type:"function"},"takeProfitCall(uint256)":{inputs:[{internalType:"uint256",name:"optionId",type:"uint256"}],name:"takeProfitCall",outputs:[],stateMutability:"nonpayable",type:"function"},"takeProfitPut(uint256)":{inputs:[{internalType:"uint256",name:"optionId",type:"uint256"}],name:"takeProfitPut",outputs:[],stateMutability:"nonpayable",type:"function"},"takeProfits(uint256)":{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"takeProfits",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}}},"contracts/utils/Unlocker.sol:Unlocker":{source:"contracts/utils/Unlocker.sol",name:"Unlocker",title:"Hegic Protocol hardcore-beta Unlocker Contract",author:"0mllwntrmt3",notice:"The contract that allows to automatically unlocks an array of options*",methods:{"unlockAll(address,uint256[])":{inputs:[{internalType:"contract IHegicOperationalTreasury",name:"pool",type:"address"},{internalType:"uint256[]",name:"optionIDs",type:"uint256[]"}],name:"unlockAll",outputs:[],stateMutability:"nonpayable",type:"function",params:{optionIDs:"The array of options*"},notice:"Unlocks the array of options."}}}},wt=new We({routes:[{path:"/",component:bt,props:()=>({json:gt})},{path:"*",component:mt,props:e=>({json:gt[e.path.slice(1)]})}]});new i.a({el:"#app",router:wt,mounted(){document.dispatchEvent(new Event("render-event"))},render:e=>e(Xe)})},function(e,t,n){"use strict";function i(e,t){for(var n=[],i={},a=0;a<t.length;a++){var r=t[a],o=r[0],s={id:e+":"+a,css:r[1],media:r[2],sourceMap:r[3]};i[o]?i[o].parts.push(s):n.push(i[o]={id:o,parts:[s]})}return n}n.r(t),n.d(t,"default",(function(){return c}));var a="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!a)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var r={},o=a&&(document.head||document.getElementsByTagName("head")[0]),s=null,u=0,p=!1,l=function(){},d=null,y="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function c(e,t,n,a){p=n,d=a||{};var o=i(e,t);return m(o),function(t){for(var n=[],a=0;a<o.length;a++){var s=o[a];(u=r[s.id]).refs--,n.push(u)}t?m(o=i(e,t)):o=[];for(a=0;a<n.length;a++){var u;if(0===(u=n[a]).refs){for(var p=0;p<u.parts.length;p++)u.parts[p]();delete r[u.id]}}}}function m(e){for(var t=0;t<e.length;t++){var n=e[t],i=r[n.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](n.parts[a]);for(;a<n.parts.length;a++)i.parts.push(h(n.parts[a]));i.parts.length>n.parts.length&&(i.parts.length=n.parts.length)}else{var o=[];for(a=0;a<n.parts.length;a++)o.push(h(n.parts[a]));r[n.id]={id:n.id,refs:1,parts:o}}}}function f(){var e=document.createElement("style");return e.type="text/css",o.appendChild(e),e}function h(e){var t,n,i=document.querySelector('style[data-vue-ssr-id~="'+e.id+'"]');if(i){if(p)return l;i.parentNode.removeChild(i)}if(y){var a=u++;i=s||(s=f()),t=b.bind(null,i,a,!1),n=b.bind(null,i,a,!0)}else i=f(),t=g.bind(null,i),n=function(){i.parentNode.removeChild(i)};return t(e),function(i){if(i){if(i.css===e.css&&i.media===e.media&&i.sourceMap===e.sourceMap)return;t(e=i)}else n()}}var T,v=(T=[],function(e,t){return T[e]=t,T.filter(Boolean).join("\n")});function b(e,t,n,i){var a=n?"":i.css;if(e.styleSheet)e.styleSheet.cssText=v(t,a);else{var r=document.createTextNode(a),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(r,o[t]):e.appendChild(r)}}function g(e,t){var n=t.css,i=t.media,a=t.sourceMap;if(i&&e.setAttribute("media",i),d.ssrId&&e.setAttribute("data-vue-ssr-id",t.id),a&&(n+="\n/*# sourceURL="+a.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}]);